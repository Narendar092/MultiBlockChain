@using XIDNA.ViewModels
@using XICore
@using XISystem
@using XIDNA
@model XICore.XIIQS
@{
    var bInternal = false;
    var StepNav = ViewBag.StepNavigation;
    if (Model.sQSType != null && Model.sQSType.ToLower() == "internal")
    {
        bInternal = true;
    }
    var Visulistations = new XIVisualisation();
    var FieldVisualistions = new List<XIQSVisualisation>();
    bool Disable = Model.bIsDisable;
    var oQSD = Model.QSDefinition;
    //Model.QSDefinition = null;
    if (oQSD != null)
    {
        Visulistations = oQSD.Visualisation;

        if (oQSD.QSVisualisations != null)
        {
            FieldVisualistions = oQSD.QSVisualisations;
        }
    }
    XIInfraCache oCache = new XIInfraCache();
    var sSessionID = Context.Session.SessionID;
    var iPolicyDuration = oCache.ResolveMe("xi.s|{xi.a|'XIClass_T','','iPolicyDuration','',ID:{XIP|ClassID}_XIDeleted:0}", sSessionID, ViewBag.sGUID);
    var iDurationType = oCache.ResolveMe("xi.s|{xi.a|'XIClass_T','','iDurationType','',ID:{XIP|ClassID}_XIDeleted:0}", sSessionID, ViewBag.sGUID);
    var IsOverRideQuote = ViewBag.IsOverRideQuote;
    var FormClass = string.Empty;
    var sPleaseSelect = "Please Select";
    var bPostHideSaveandNext = "no";
    var IsQSLinkLoading = "no";
    if (Visulistations != null)
    {
        if (Visulistations.XiVisualisationNVs != null)
        {
            var sFormClass = Visulistations.XiVisualisationNVs.Where(m => m.sName.ToLower() == "FormClass".ToLower()).Select(m => m.sValue).FirstOrDefault();
            if (!string.IsNullOrEmpty(sFormClass))
            {
                FormClass = sFormClass;
            }

            var IsPleaseSelect = Visulistations.XiVisualisationNVs.Where(m => m.sName.ToLower() == "PleaseSelect".ToLower()).Select(m => m.sValue).FirstOrDefault();
            if (!string.IsNullOrEmpty(IsPleaseSelect))
            {
                sPleaseSelect = IsPleaseSelect;
            }
            var IsPostHideSaveandNext = Visulistations.XiVisualisationNVs.Where(m => m.sName.ToLower() == "bPostHideSaveandNext".ToLower()).Select(m => m.sValue).FirstOrDefault();
            if (!string.IsNullOrEmpty(IsPostHideSaveandNext))
            {
                bPostHideSaveandNext = IsPostHideSaveandNext;
            }
            var sIsQSLinkLoading = Visulistations.XiVisualisationNVs.Where(m => m.sName.ToLower() == "IsQSLinkLoading".ToLower()).Select(m => m.sValue).FirstOrDefault();
            if (!string.IsNullOrEmpty(sIsQSLinkLoading))
            {
                IsQSLinkLoading = sIsQSLinkLoading;
            }

        }
        if (string.IsNullOrEmpty(sPleaseSelect))
        {
            sPleaseSelect = "Please Select";
        }
    }
    string PhysicalPath = System.Configuration.ConfigurationManager.AppSettings["PhysicalPath"];
    string sFieldOriginIds = string.Empty;
    string sFieldID = string.Empty;
    string sFieldValue = string.Empty;
    var currentYear = DateTime.Now.Year;
    var currentDate = DateTime.Now.ToString("dd-MMM-yyyy");
    int stepXiLink = 0;
    string sstepXiLink = string.Empty;
    List<XIQSLink> oQSLinks = new List<XIQSLink>();
    var DisableLockStage = string.Empty;
    int iAppID = SessionManager.ApplicationID;
    var Chosen = (string)oCache.GetObjectFromCache(XIConstant.CacheConfig, iAppID + "_" + XIConstant.Chosen_Plugin);
}
<script src="~/Scripts/jquery.signalR-2.3.0.js"></script>
<script src="@Url.Content("~/signalr/hubs")"></script>
<script src="@Url.Content("~/Scripts/Inputmask/inputmask.binding.js")"></script>

@if (!bInternal && oQSD != null && oQSD.bNavigationBar)
{
    if (oQSD != null && oQSD.sName != null && (oQSD.sName.ToLower() == "MoneyCo Motorhome_Public".ToLower() || oQSD.sName.ToLower() == "MCMotorhome_Public_New".ToLower() || oQSD.sName.ToLower() == "MCCaravan_Public".ToLower() || oQSD.sName.ToLower() == "MCTouring caravan Public".ToLower() || oQSD.sName.ToLower() == "MCStatic caravan Public".ToLower() || oQSD.sName.ToLower() == "MCParkHome caravan public".ToLower()))
    {
        <div class="questionset-header-section">
            <div class="container questionset-header-content" style="max-width:905px;">

                @*<div class="info-contentBox">
                        It is important that the information provided throughout the quote is accurate. Failure to disclose correct and complete information may result in increased premiums, refusal of a claim or it not being fully paid, your policy being cancelled or being made null & void and treated as if it never existed.
                    </div>
                    <div class="row header-details">
                        <div class="col-sm-6 header-logo">
                            <img src="~/Content/images/logo.png" style="width:391px;height:63px;" />
                        </div>
                        <div class="col-sm-6 header-text">
                            <p><span class="ProductContactText">If you would like assistance now call YOUR Insurance on</span></p>
                            <h3>
                                <span class="CampaignNumber">0800 123 4567</span>
                            </h3>
                            <p>
                                <span class="BusinessHours">
                                    Mon -  Thur: 8.30am - 9pm<br>Fri: 8.30am - 5.30pm<br>Sat: 9am - 5pm<br>Closed Sunday/Bank Holidays
                                </span>
                            </p>
                        </div>
                    </div>*@
                <ul class="nav nav-pills nav-justified que-process">
                    @{ int i = 0;
                        var iLastVisible = oQSD.Steps.Where(m => m.Value.sIsHidden != "on").OrderBy(m => m.Value.iOrder).Last().Value.ID;
                    }
                    @foreach (var items in oQSD.Steps.OrderBy(m => m.Value.iOrder))
                    {
                        if (items.Value.sIsHidden == "on")
                        {
                            <li role="presentation" class="que-process-step @items.Value.sIsHidden" name="@items.Value.sCode"><a href="#">@items.Value.sDisplayName</a></li>
                        }
                        else
                        {
                            var CurrentOrder = oQSD.Steps.Where(m => m.Value.ID == Model.iCurrentStepID).Select(m => m.Value.iOrder).FirstOrDefault();
                            if (Model.iCurrentStepID == 0 || Model.iCurrentStepID == items.Value.ID)
                            {
                                if (iLastVisible == items.Value.ID)
                                {
                                    <li role="presentation" class="active que-process-step last-nav" name="@items.Value.sCode"><a href="#">@items.Value.sDisplayName</a></li>
                                }
                                else
                                {
                                    <li role="presentation" class="active que-process-step" name="@items.Value.sCode"><a href="#">@items.Value.sDisplayName</a></li>
                                }
                            }
                            else
                            {
                                if (iLastVisible == items.Value.ID)
                                {
                                    <li role="presentation" class="que-process-step last-nav" name="@items.Value.sCode"><a href="#">@items.Value.sDisplayName</a></li>
                                }
                                else
                                {
                                    <li role="presentation" class="que-process-step" name="@items.Value.sCode"><a href="#">@items.Value.sDisplayName</a></li>
                                }
                            }

                        }

                        i++;
                    }
                </ul>
            </div>
        </div>
    }
    else if (oQSD != null && oQSD.sName != null && oQSD.sName.ToLower() == "go compare motorhome")
    {
        <div class="questionset-header-section">
            <div class="container questionset-header-content" style="max-width:905px;">
                <div class="row header-details">
                    <div class="col-sm-6 header-logo">
                        <img src="~/Content/images/logo-goco.png" style="width:295px;height:49px;" />
                        <span class="insurance-type">Motorhome Insurance</span>
                        <span class="provided-by">Provided by Simply Business</span>
                    </div>
                    <div class="helpbox">
                        <div class="helpbox-content">
                            <h3>Need help?</h3>
                            Call Simply Business
                            <a class="helpbox_button" href="#">
                                <span class="qa-phone_number"><span class="tel qa-customer-service-number">0300 303 4818</span></span>
                            </a>
                        </div>
                    </div>
                </div>
                <ul class="nav nav-pills nav-justified que-process">
                    @{ int i = 1;}
                    @foreach (var items in oQSD.Steps)
                    {
                        <li role="presentation" class="active que-process-step">
                            <a href="#">Your Details</a>
                            <span class="process-item">
                                <span>@i</span>
                            </span>
                        </li>
                        i++;
                    }
                </ul>
            </div>
        </div>
    }
    else if (oQSD != null && oQSD.sName != null && oQSD.sName.ToLower() == "money super market motorhome")
    {
        var CurrentStepID = Model.iCurrentStepID;
        var TotalSteps = oQSD.Steps.Where(m => m.Value.sIsHidden == "off").Count();
        int index = 0;
        if (CurrentStepID > 0)
        {
            index = Model.Steps.Values.ToList().FindIndex(a => a.FKiQSStepDefinitionID == CurrentStepID);
            if (index == 0)
            {
                index = 1;
            }
            else
            {
                index = index + 1;
            }
        }
        <div class="questionset-header-section MoneySuperMarket">
            <a href="#" class="header_logo-link">
                <img class="header_logo-responsive" src="~/content/images/msm.png" alt="MoneySuperMarket">
            </a>
            <div class="hidden-xs enquiry-banner-wrapper page-banner">
                <div class="row">
                    <h3 class="msm-title title-lg-left title-md-left title-xs-center hidden-xs slide">
                        <span class=""> Motorhome insurance</span>
                    </h3>
                </div>
            </div>
            <div class="container questionset-header-content">
                <div class="header-details infobox-left">
                    <p class="bold" style="margin: 20px 0;color: #00aeef;"><span class="question-step">Step @index of @TotalSteps</span></p>
                    <h2 style="color: #542b71;font-size: 33px;">You’re on your way to saving money!</h2>
                    @*<p style="padding-left: 20px; padding-right: 20px; padding-bottom: 20px;">Please answer all questions accurately and in full. Your policy will be sold to you on the basis of the information you provide, and if your answers are incorrect or incomplete, your policy could be cancelled, or you might have a claim rejected or not paid in full.</p>*@
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="questionset-header-section">
            <div class="container questionset-header-content" style="max-width:905px;">
                <ul class="nav nav-pills nav-justified que-process">
                    @{ int i = 0;
                        var iLastVisible = oQSD.Steps.Where(m => m.Value.sIsHidden != "on").OrderBy(m => m.Value.iOrder).Last().Value.ID;
                    }
                    @foreach (var items in oQSD.Steps.OrderBy(m => m.Value.iOrder))
                    {
                        if (items.Value.sIsHidden == "on")
                        {
                            <li role="presentation" class="que-process-step @items.Value.sIsHidden" name="@items.Value.sCode"><a href="#">@items.Value.sDisplayName</a></li>
                        }
                        else
                        {
                            var CurrentOrder = oQSD.Steps.Where(m => m.Value.ID == Model.iCurrentStepID).Select(m => m.Value.iOrder).FirstOrDefault();
                            if (Model.iCurrentStepID == 0 || Model.iCurrentStepID == items.Value.ID)
                            {
                                if (iLastVisible == items.Value.ID)
                                {
                                    <li role="presentation" class="active que-process-step last-nav" name="@items.Value.sCode"><a href="#">@items.Value.sDisplayName</a></li>
                                }
                                else
                                {
                                    <li role="presentation" class="active que-process-step" name="@items.Value.sCode"><a href="#">@items.Value.sDisplayName</a></li>
                                }
                            }
                            else
                            {
                                if (iLastVisible == items.Value.ID)
                                {
                                    <li role="presentation" class="que-process-step last-nav" name="@items.Value.sCode"><a href="#">@items.Value.sDisplayName</a></li>
                                }
                                else
                                {
                                    <li role="presentation" class="que-process-step" name="@items.Value.sCode"><a href="#">@items.Value.sDisplayName</a></li>
                                }
                            }

                        }

                        i++;
                    }
                </ul>
            </div>
        </div>
    }
}
else
{
    if (oQSD != null && oQSD.sName != null && (oQSD.sName.ToLower() == "Zee QS_Internal".ToLower()))
    {
        <div class="questionset-header-section">
            <div class="container questionset-header-content">
                @{
                    int k = 1;
                    var iLastVisible = oQSD.Steps.Where(m => m.Value.sIsHidden != "on").OrderBy(m => m.Value.iOrder).Last().Value.ID;
                }
                @foreach (var items in oQSD.Steps.OrderBy(m => m.Value.iOrder))
                {

                    if (items.Value.sIsHidden == "on")
                    {
                    }
                    else
                    {
                        var CurrentOrder = oQSD.Steps.Where(m => m.Value.ID == Model.iCurrentStepID).Select(m => m.Value.iOrder).FirstOrDefault();
                        var iCutStage = oQSD.Steps.Where(m => m.Value.ID == Model.iCurrentStepID).Select(m => m.Value.iCutStage).FirstOrDefault();
                        <ul class="nav navbar-nav nav-main">
                            @*@if (Model.History.Contains(items.Value.ID))*@
                            @if (Model.History.Contains(items.Value.ID) && items.Value.iStage < iCutStage)
                            {
                                <li class="active">
                                    <a href="#" class="btn btn-theme" onclick="fncNavigateStep('@items.Value.XIGUID','@Model.sGUID','@Model.XIGUID', '@items.Value.bIsAutoSaving.ToString()','@items.Value.bIsAutoReload.ToString()');">@k</a>
                                </li>
                                <div class="text">
                                    <div class="text--desktop">
                                        <div class="text__content">
                                            <p>zee</p>
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <li>
                                    <a href="#" class="btn btn-theme" onclick="return false;">@k</a>
                                </li>
                                <div class="text">
                                    <div class="text--desktop">
                                        <div class="text__content">
                                            <p>zee</p>
                                        </div>
                                    </div>
                                </div>
                            }
                        </ul>
                    }
                    k++;
                }
            </div>
        </div>
    }
}
<div class="container body-container">
    @{var sRightboxClass = string.Empty; var sDisable = ""; }
    @if (bInternal)
    {
        var CurrentStepD = new XIDQSStep();
        decimal iOrder = 0;
        List<string> FutureActive = new List<string>();
        var oCurrentStepI = Model.Steps.Where(m => m.Value.bIsCurrentStep == true).Select(m => m.Value).FirstOrDefault();
        if (oCurrentStepI != null && oCurrentStepI.FKiQSStepDefinitionIDXIGUID != null && oCurrentStepI.FKiQSStepDefinitionIDXIGUID != Guid.Empty)
        {
            CurrentStepD = oQSD.Steps.Where(m => m.Value.XIGUID == oCurrentStepI.FKiQSStepDefinitionIDXIGUID).Select(m => m.Value).FirstOrDefault();
            iOrder = CurrentStepD.iOrder;
            foreach (var actstep in Model.Steps.Values.ToList())
            {
                var futureActStepD = oQSD.Steps.Where(m => m.Value.XIGUID == actstep.FKiQSStepDefinitionIDXIGUID).Select(m => m.Value).FirstOrDefault();
                if (futureActStepD != null)
                {
                    var futureStepOrder = futureActStepD.iOrder;
                    if (futureStepOrder < iOrder)
                    {
                        FutureActive.Add(futureActStepD.sDisplayName);
                    }
                }
            }
        }
        sRightboxClass = "right-box";
        string sStepsAlwaysActCss = "qs-nav-btns";
        var bStepsAlwaysActive = oQSD.bStepsAlwaysActive;
        if (bStepsAlwaysActive)
        {
            sStepsAlwaysActCss = sStepsAlwaysActCss + " always-active";
        }

        <div class="left-box">
            <div class="@sStepsAlwaysActCss">
                @foreach (var oStep in oQSD.Steps.OrderBy(m => m.Value.iOrder))
                {
                    var iCutStage = oQSD.Steps.Where(m => m.Value.XIGUID == Model.iCurrentStepIDXIGUID).Select(m => m.Value.iCutStage).FirstOrDefault();

                    if (oStep.Value.sIsHidden == "on")
                    {
                        <ul class="left-nav-btns @oStep.Value.sName" style="display: none;">
                            @{var sStepName = string.Empty;
                                if (!string.IsNullOrEmpty(oStep.Value.sDisplayName))
                                {
                                    sStepName = oStep.Value.sDisplayName;
                                }
                                else
                                {
                                    sStepName = oStep.Value.sName;
                                }
                            }
                            @if (oQSD.bIsStage && Model.History != null)
                            {
                                if (Model.History.Contains(oStep.Value.ID) && ((iCutStage >= oStep.Value.iStage) || (Model.iStage >= oStep.Value.iLockStage || (oStep.Value.iStage == oStep.Value.iCutStage))@*|| (Model.iStage == items.Value.iStage && iCutStage >= items.Value.iStage)*@))

{
var sNavCSS = "active";
if (sStepName == CurrentStepD.sDisplayName)
{
sNavCSS = sNavCSS + " current";
}
if (FutureActive.Contains(sStepName))
{
sNavCSS = sNavCSS + " future-active";
}
        <li class="@sNavCSS">
            @if (oStep.Value.bIsAutoSaving.ToString().ToLower() == "true")
            {
                <a href="#" onclick="fncRunQSStepAction('SaveNext', this,true,'@oStep.Value.sName');">@sStepName</a>
            }
            else
            {
                <a href="#" onclick="fncNavigateStep('@oStep.Value.XIGUID','@Model.sGUID','@Model.XIGUID');">@sStepName</a>
            }
        </li>
    }
    else
    {
        <li>
            <a href="#" onclick="return false;">@sStepName</a>
        </li>
    }
}
else
{
    if (Model.History != null && Model.History.Contains(oStep.Value.ID))

    {
        var sNavCSS = "active";
        if (sStepName == CurrentStepD.sDisplayName)
        {
            sNavCSS = sNavCSS + " current";
        }
        if (FutureActive.Contains(sStepName))
        {
            sNavCSS = sNavCSS + " future-active";
        }
        <li class="@sNavCSS">
            <a href="#" onclick="fncNavigateStep('@oStep.Value.XIGUID','@Model.sGUID','@Model.XIGUID');">@sStepName</a>
        </li>
    }
    else
    {
        <li>
            <a href="#" onclick="return false;">@sStepName</a>
        </li>
    }
}
                        </ul>

                    }
                    else
                    {
                        <ul class="left-nav-btns @oStep.Value.sName">
                            @{var sStepName = string.Empty;
                                if (!string.IsNullOrEmpty(oStep.Value.sDisplayName))
                                {
                                    sStepName = oStep.Value.sDisplayName;
                                }
                                else
                                {
                                    sStepName = oStep.Value.sName;
                                }
                            }
                            @if (oQSD.bIsStage)
                            {
                                if (Model.HistoryXIGUID.Contains(oStep.Value.XIGUID) && ((iCutStage >= oStep.Value.iStage) || (Model.iStage >= oStep.Value.iLockStage || (oStep.Value.iStage == oStep.Value.iCutStage))@*|| (Model.iStage == items.Value.iStage && iCutStage >= items.Value.iStage)*@))

{
var sNavCSS = "active";
if (sStepName == CurrentStepD.sDisplayName || sStepName == CurrentStepD.sName)
{
sNavCSS = sNavCSS + " current";
}
if (FutureActive.Contains(sStepName))
{
sNavCSS = sNavCSS + " future-active";
}
        <li class="@sNavCSS">
            @if (oStep.Value.bIsAutoSaving.ToString().ToLower() == "true")
            {
                <a href="#" onclick="fncRunQSStepAction('SaveNext', this,true,'@oStep.Value.sName');">@sStepName</a>
            }
            else
            {
                <a href="#" onclick="fncNavigateStep('@oStep.Value.XIGUID', '@Model.sGUID', '@Model.XIGUID', '@oStep.Value.bIsAutoSaving.ToString()', '@oStep.Value.bIsAutoReload.ToString()');">@sStepName</a>
            }
        </li>
    }
    else
    {
        var sNavCSS = "active";
        if (sStepName == CurrentStepD.sDisplayName || sStepName == CurrentStepD.sName)
        {
            sNavCSS = sNavCSS + " current";
        }
        if (FutureActive.Contains(sStepName))
        {
            sNavCSS = sNavCSS + " future-active";
        }
        <li class="@sNavCSS">
            @if (oStep.Value.bIsAutoSaving.ToString().ToLower() == "true")
            {
                <a href="#" onclick="fncRunQSStepAction('SaveNext', this,true,'@oStep.Value.sName');">@sStepName</a>
            }
            else
            {
                <a href="#" onclick="fncNavigateStep('@oStep.Value.XIGUID', '@Model.sGUID', '@Model.XIGUID', '@oStep.Value.bIsAutoSaving.ToString()', '@oStep.Value.bIsAutoReload.ToString()');">@sStepName</a>
            }
        </li>
        @*<li>
        <a href="#" onclick="return false;">@sStepName</a>
    </li>*@
    }
}
else
{
    if (Model.HistoryXIGUID.Contains(oStep.Value.XIGUID))

    {
        var sNavCSS = "active";
        if (sStepName == CurrentStepD.sDisplayName || sStepName == CurrentStepD.sName)
        {
            sNavCSS = sNavCSS + " current";
        }
        if (FutureActive.Contains(sStepName))
        {
            sNavCSS = sNavCSS + " future-active";
        }
        <li class="@sNavCSS">
            @if (oStep.Value.bIsAutoSaving.ToString().ToLower() == "true")
            {
                <a href="#" onclick="fncRunQSStepAction('SaveNext', this,true,'@oStep.Value.sName');">@sStepName</a>
            }
            else
            {
                <a href="#" onclick="fncNavigateStep('@oStep.Value.XIGUID', '@Model.sGUID', '@Model.XIGUID', '@oStep.Value.bIsAutoSaving.ToString()', '@oStep.Value.bIsAutoReload.ToString()');">@sStepName</a>
            }

        </li>
    }
    else
    {
        <li>
            <a href="#" onclick="return false;">@sStepName</a>
        </li>
    }
}
                        </ul>
                    }
                }
                </div>
            </div>
            }
            <div class="@sRightboxClass flex-container quote-form">
                <div class="infobox-left">
                    <div class="infobox-left__wrapper">
                        <div class="questionset-section">
                            @{ var oStepI = Model.Steps.Where(m => m.Value.bIsCurrentStep == true).Select(m => m.Value).FirstOrDefault();
                                var StepDef = oQSD.Steps.Where(m => m.Value.XIGUID == oStepI.FKiQSStepDefinitionIDXIGUID).Select(m => m.Value).FirstOrDefault();
                                if (StepDef.XILinkIDXIGUID != null && StepDef.XILinkIDXIGUID != Guid.Empty)
                                {
                                    sstepXiLink = StepDef.XILinkIDXIGUID.ToString();
                                }
                                else
                                {
                                    stepXiLink = StepDef.XILinkID;
                                }
                                var bIsLock = false;
                                if ((Model.iStage != 0 && StepDef.iLockStage != 0 && StepDef.iLockStage <= Model.iStage && oQSD.bIsStage) || Model.iLeadStatus == 50 || Model.bIsDisable == true)
                                {
                                    bIsLock = true;
                                    DisableLockStage = "Disabled=" + "Disabled";
                                }
                            }
                            @if (!string.IsNullOrEmpty(StepDef.sImage))
                            {
                                <div class="contact-poster">
                                    <ol>
                                        <li class="progress-highlight">Your Details</li>
                                        <li>About Motorhome</li>
                                        <li>About You</li>
                                        <li>Drivers</li>
                                    </ol>
                                    <img src="~/Content/images/@StepDef.sImage" class="quoteometer">
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(StepDef.sDisplayName))
                            {
                                <h3 class="questionset-header">@StepDef.sDisplayName</h3>
                            }
                            @*@if (!string.IsNullOrEmpty(Step.sMessage))
                        {
                            <div class="step-success-error">
                                <span data-type="ErrorMesg" class="ErrorMsg-@Step.FKiQSStepDefinitionID danger text-error">@Step.sMessage</span>
                            </div>
                        }*@
                            <div ID="QSBtnMsg" style="display:none"></div>
                            @if (oStepI.XiMessages != null)
                            {
                                foreach (KeyValuePair<string, string> dict in oStepI.XiMessages)
                                {
                                    if (!string.IsNullOrEmpty(dict.Key) && dict.Key.StartsWith("Success:"))
                                    {
                                        <div class="StatusMessages">
                                            <div data-type="ErrorMesg" class="ErrorMsg-@oStepI.FKiQSStepDefinitionIDXIGUID alert alert-success">@dict.Value</div>
                                        </div>
                                    }
                                    else if (!string.IsNullOrEmpty(dict.Key) && dict.Key.StartsWith("Error:"))
                                    {
                                        <div class="StatusMessages">
                                            <div data-type="ErrorMesg" class="ErrorMsg-@oStepI.FKiQSStepDefinitionIDXIGUID alert alert-danger">@dict.Value</div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="step-success-error">
                                            <span data-type="ErrorMesg" class="ErrorMsg-@oStepI.FKiQSStepDefinitionIDXIGUID danger text-error">@dict.Value</span>
                                        </div>
                                    }
                                }
                            }

                            @if (oStepI.Sections != null && oStepI.Sections.Count() > 0)
                            {
                                var sStepName = StepDef.sName;
                                if (!string.IsNullOrEmpty(sStepName))
                                {
                                    sStepName = sStepName.ToLower().Replace(" ", "_");
                                }
                                if (@StepDef.FKsCss != null)
                                {
                                    <script>$(document).ready(function () { fncDynamicCss('@StepDef.FKsCss') });</script>
                                }
                                var sStepCalsses = "one-qs-step one-qs-step-id-" + StepDef.ID + " one-qs-step-" + sStepName + (StepDef.FKsCss != null ? (StepDef.FKsCss.Length > 0 ? (" " + StepDef.FKsCss) : "") : "") + (StepDef.sCssClass != null ? (StepDef.sCssClass.Length > 0 ? (" " + StepDef.sCssClass) : "") : "");
                                <div class="conQSStep @sStepCalsses" data-info="QSStep" data-value="@StepDef.XIGUID" data-def="@StepDef.XIGUID">
                                    <div class="Step-errmsg-@StepDef.XIGUID fc-red" style="color:red"></div>
                                    @{var Sections = oStepI.Sections.ToList();}
                                    @if (Sections != null && Sections.Count() > 0)
                                    {
                                        foreach (var oSecI in Sections)
                                        {

                                            if (StepDef.Sections.Count > 0)
                                            {
                                                var SecDef = StepDef.Sections.Where(m => m.Value.XIGUID == oSecI.Value.FKiStepSectionDefinitionIDXIGUID).Select(m => m.Value).FirstOrDefault();

                                                var sSecName = SecDef.sName;
                                                if (!string.IsNullOrEmpty(sSecName))
                                                {
                                                    sSecName = " " + sSecName.ToLower().Replace(" ", "_");
                                                }
                                                var sSecClasses = "one-qs-section one-qs-section-XIGUID-" + SecDef.XIGUID + " one-qs-section-id-" + SecDef.ID + (sSecName != null ? (sSecName.Length > 0 ? (" one-qs-section-" + sSecName) : "") : "") + (SecDef.FKsCss != null ? (SecDef.FKsCss.Length > 0 ? (" " + SecDef.FKsCss) : "") : "") + (SecDef.sCssClass != null ? (SecDef.sCssClass.Length > 0 ? (" " + SecDef.sCssClass) : "") : "");
                                                <div class="sec-controlbox @SecDef.sIsHidden @sSecClasses" name="@SecDef.sCode" data-controltype="section" data-info="QSSection" data-value="@SecDef.XIGUID" data-def="@StepDef.XIGUID">

                                                    <div class="q-notes" id="draggable_notes">

                                                        @if (!string.IsNullOrEmpty(SecDef.sName))
                                                        {
                                                            <h3 class="questionset-header">@SecDef.sName</h3>
                                                        }
                                                        @if (((EnumSemanticsDisplayAs)SecDef.iDisplayAs).ToString() == EnumSemanticsDisplayAs.Fields.ToString())
                                                        {
                                                            if (SecDef.bIsGroup)
                                                            {
                                                                <form class="QSStepForm @FormClass wrap-fullwidth">
                                                                    @*@FormClass*@
                                                                    <div class="form-group  highlight--help">
                                                                        <div class="wrap-width clearfix control-block">
                                                                            @if (!string.IsNullOrEmpty(SecDef.sGroupLabel))
                                                                            {
                                                                                @*<i class="fa fa-question-circle que-icn"></i>*@
                                                                            }
                                                                            <label for="inputEmail" class="gn form-label">
                                                                                <span class="pull-left">@SecDef.sGroupLabel</span>
                                                                            </label>
                                                                            <div class="form-input rows-2">
                                                                                @foreach (var Field in oSecI.Value.XIValues)
                                                                                {
                                                                                    var ClassName = string.Empty;
                                                                                    var FOrigin = SecDef.FieldDefs.Where(m => m.Value.XIGUID == Field.Value.FKiFieldDefinitionIDXIGUID).Select(m => m.Value).FirstOrDefault();
                                                                                    var FieldOrigin = FOrigin.FieldOrigin ?? new XIDFieldOrigin();
                                                                                    var FieldVis = FieldVisualistions.Where(m => m.FKiQSStepDefinitionIDXIGUID == StepDef.XIGUID && m.FKiFieldOriginIDXIGUID == FieldOrigin.XIGUID).FirstOrDefault();
                                                                                    if (FieldVis != null)
                                                                                    {
                                                                                        var Options = FieldVis.sVisualisation.Split(';').ToList();
                                                                                        if (Options[0].Contains("field"))
                                                                                        {
                                                                                            var Vals = Options[1].Split('=').ToList();
                                                                                            var Prop = Vals[1].Replace("'", "");
                                                                                            var Attrs = Prop.Split(':').ToList();
                                                                                            if (Attrs[0].ToLower() == "class")
                                                                                            {
                                                                                                ClassName = Attrs[1];
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    <div class="cols-2">
                                                                                        <div class="field-errmsg-@oStepI.FKiQSStepDefinitionIDXIGUID-@FieldOrigin.XIGUID fc-red"></div>
                                                                                        @*<input type="checkbox" id="@FieldOrigin.ID" name="@FieldOrigin.sName" /> @FieldOrigin.sDisplayName <br/>*@
                                                                                        <label class="label-wrapper @ClassName">
                                                                                            @if (Field.Value.sValue == "on" || Field.Value.sValue == "true")
                                                                                            {
                                                                                                if (FieldOrigin.FieldOptionList != null && FieldOrigin.FieldOptionList.Count() > 0)
                                                                                                {
                                                                                                    var opt = FieldOrigin.FieldOptionList.FirstOrDefault();
                                                                                                    <input type="checkbox" class="one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" id="@FieldOrigin.XIGUID" name="@FieldOrigin.sName" data-shtype="@opt.iType" data-show="@opt.sShowField" data-hide="@opt.sHideField" data-isRemoveDependency="@opt.bIsRemoveDependency" data-DependencyType="@opt.iDependencyType" onchange="fnccheckme(this)" checked="checked" @DisableLockStage />
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                    <input type="checkbox" class="one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" id="@FieldOrigin.XIGUID" name="@FieldOrigin.sName" checked="checked" @DisableLockStage />
                                                                                                }
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                                if (FieldOrigin.FieldOptionList != null && FieldOrigin.FieldOptionList.Count() > 0)
                                                                                                {
                                                                                                    var opt = FieldOrigin.FieldOptionList.FirstOrDefault();
                                                                                                    <input type="checkbox" class="one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" id="@FieldOrigin.XIGUID" name="@FieldOrigin.sName" data-shtype="@opt.iType" data-show="@opt.sShowField" data-hide="@opt.sHideField" data-isRemoveDependency="@opt.bIsRemoveDependency" data-DependencyType="@opt.iDependencyType" onchange="fnccheckme(this)" @DisableLockStage />
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                    <input type="checkbox" class="one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" id="@FieldOrigin.XIGUID" name="@FieldOrigin.sName" @DisableLockStage />
                                                                                                }
                                                                                            }

                                                                                            <span class="check"></span>
                                                                                            @FieldOrigin.sDisplayName
                                                                                        </label>
                                                                                    </div>
                                                                                }
                                                                            </div>
                                                                            @if (!string.IsNullOrEmpty(SecDef.sGroupDescription))
                                                                            {
                                                                                <p>@SecDef.sGroupDescription</p>
                                                                            }
                                                                        </div>
                                                                    </div>
                                                                </form>
                                                            }
                                                            else if (oSecI.Value.XIValues != null && oSecI.Value.XIValues.Count() > 0)
                                                            {
                                                                <form class="QSStepForm @FormClass wrap-fullwidth">
                                                                    @*@FormClass*@
                                                                    @foreach (var Field in oSecI.Value.XIValues)
                                                                    {
                                                                        //sFieldValue = Field.Value.sValue;
                                                                        var sFieldfomatPos = string.Empty;
                                                                        var FOrigin = SecDef.FieldDefs.Where(m => m.Value.XIGUID == Field.Value.FKiFieldDefinitionIDXIGUID).Select(m => m.Value).FirstOrDefault();

                                                                        if (FOrigin != null)
                                                                        {
                                                                            var FieldOrigin = FOrigin.FieldOrigin ?? new XIDFieldOrigin();
                                                                            var sMergeType = FieldOrigin.bIsMerge;
                                                                            var sMergeValue = "";
                                                                            if (FieldOrigin.bIsMerge)
                                                                            {
                                                                                sMergeValue = Field.Value.sValue;
                                                                            }
                                                                            else if (!string.IsNullOrEmpty(FieldOrigin.sDefaultValue))
                                                                            {
                                                                                sMergeType = true;
                                                                                //sMergeValue = Field.Value.sValue;
                                                                                sMergeValue = FieldOrigin.sDefaultValue;
                                                                                if (Field.Value.sValue == null)
                                                                                {
                                                                                    Field.Value.sValue = FieldOrigin.sDefaultValue;
                                                                                }
                                                                                //else
                                                                                //{
                                                                                //    sMergeValue = Field.Value.sValue;
                                                                                //}
                                                                            }
                                                                            else if (!string.IsNullOrEmpty(FieldOrigin.sFieldDefaultValue))
                                                                            {
                                                                                sMergeType = true;
                                                                                sMergeValue = Field.Value.sValue;
                                                                            }
                                                                            else if (!string.IsNullOrEmpty(FieldOrigin.sDefaultDate))
                                                                            {
                                                                                sMergeType = true;
                                                                                sMergeValue = Field.Value.sValue;
                                                                            }
                                                                            if (!string.IsNullOrEmpty(FieldOrigin.sFormatCode))
                                                                            {
                                                                                if (FieldOrigin.sFormatCode.ToLower() == "left")
                                                                                {
                                                                                    sFieldfomatPos = "Pricefield";
                                                                                }
                                                                                else if (FieldOrigin.sFormatCode.ToLower() == "right")
                                                                                {
                                                                                    sFieldfomatPos = "CCfield";
                                                                                }
                                                                            }
                                                                            if (oQSD.DependentFields != null && oQSD.DependentFields.Contains(FieldOrigin.XIGUID.ToString()))
                                                                            {

                                                                            }
                                                                            else
                                                                            {
                                                                                var sClass = "form-group highlight--help helptext-bottom " + FieldOrigin.sIsHidden;
                                                                                if (!string.IsNullOrEmpty(FieldOrigin.sCSS))
                                                                                {
                                                                                    sClass = sClass + " " + FieldOrigin.sCSS;
                                                                                }
                                                                                <div class="@sClass" data-controltype="qsfield" data-fieldname="@FieldOrigin.sName">
                                                                                    <div class="wrap-width clearfix control-block">
                                                                                        @*<i class="fa fa-question-circle que-icn"></i>*@
                                                                                        <label for="inputEmail" class="gn form-label">
                                                                                            <span class="pull-left">
                                                                                                @FieldOrigin.sDisplayName
                                                                                                @if (FieldOrigin.bIsMandatory)
                                                                                                {
                                                                                                    <span class="star">*</span>
                                                                                                }
                                                                                                @if (SessionManager.UserPreference.IconAssist == 10)
                                                                                                {
                                                                                                    if (FieldOrigin.bIsHelpIcon)
                                                                                                    {
                                                                                                        <span class="HelpIcon"></span>
                                                                                                    }
                                                                                                    if (!string.IsNullOrEmpty(FieldOrigin.sDisplayHelp))
                                                                                                    {
                                                                                                        <div class="helptext">
                                                                                                            <div class="helptext--desktop">
                                                                                                                <div class="helptext__content">
                                                                                                                    <a class="helptext-content-close"><i class="fa fa-close"></i></a>
                                                                                                                    @*<p><strong>Lorem Ipsum</strong></p>*@
                                                                                                                    <p class="" id="HelpText-@StepDef.XIGUID-@FieldOrigin.XIGUID">@FieldOrigin.sDisplayHelp</p>
                                                                                                                </div>
                                                                                                            </div>
                                                                                                        </div>
                                                                                                    }
                                                                                                }
                                                                                            </span>
                                                                                        </label>
                                                                                        @*@if (!(string.IsNullOrEmpty(FieldOrigin.sAdditionalText)))
                                                                                    {
                                                                                        <p for="inputEmail" class="gn">@FieldOrigin.sAdditionalText</p>
                                                                                    }*@
                                                                                        <div class="form-input">
                                                                                            <div class="field-errmsg-@oStepI.FKiQSStepDefinitionIDXIGUID-@FieldOrigin.XIGUID fc-red">
                                                                                                @if (oStepI.XiPreMessages.Where(x => x.Key.ToLower() == FieldOrigin.sName.ToLower() && x.Value != null && x.Value.Count() > 0).Select(x => x.Value[0]).FirstOrDefault() != null)
                                                                                                {
                                                                                                    <span data-type="ErrorMesg" class="ErrorMsg-@StepDef.XIGUID-@FieldOrigin.XIGUID danger fc-red">@oStepI.XiPreMessages.Where(x => x.Key.ToLower() == FieldOrigin.sName.ToLower()).Select(x => x.Value[0]).FirstOrDefault()</span>
                                                                                                }
                                                                                            </div>
                                                                                            @if (!string.IsNullOrEmpty(FieldOrigin.sFieldDefaultValue) && string.IsNullOrEmpty(FieldOrigin.sScript))
                                                                                            {
                                                                                                @FieldOrigin.sFieldDefaultValue
                                                                                            }
                                                                                            else if ((FieldOrigin.bIsOptionList || FieldOrigin.iMasterDataID > 0 || FieldOrigin.FK1ClickID > 0 || (FieldOrigin.FKiBOID > 0 || (FieldOrigin.FKiBOIDXIGUID != null && FieldOrigin.FKiBOIDXIGUID != Guid.Empty))) && FieldOrigin.DataType.sName.ToLower() != "text area")
                                                                                            {
                                                                                                if (FieldOrigin.FK1ClickID > 0 && FieldOrigin.DataType.sName.ToLower() == "String".ToLower())
                                                                                                {
                                                                                                    <input type="text" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" id="Field-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID" data-value="0" disabled="@FieldOrigin.bIsDisable" @DisableLockStage />
                                                                                                    if (FieldOrigin.bIsDisable)
                                                                                                    {
                                                                                                        <input type="hidden" name="@FieldOrigin.sName" value="@Field.Value.sValue" class="Field-@StepDef.XIGUID-@FieldOrigin.XIGUID-@Model.sGUID" data-Merge="@sMergeType" data-MergeValue="@sMergeValue" @DisableLockStage />
                                                                                                    }
                                                                                                }
                                                                                                else if (FieldOrigin.FKiBOID > 0 || FieldOrigin.FK1ClickID > 0)
                                                                                                {
                                                                                                    if (FieldOrigin.sBOSize == "30")
                                                                                                    {
                                                                                                        if (!string.IsNullOrEmpty(Field.Value.sValue))
                                                                                                        {
                                                                                                            <input type="text" class="form-control autocomplete one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" id="Field-@StepDef.XIGUID-@FieldOrigin.XIGUID-@Model.sGUID" data-value="0" onkeyup="fncgetautocomplete('@FieldOrigin.FK1ClickIDXIGUID', this, event)" @DisableLockStage />
                                                                                                            <script>fncgetlabeldata(0, '@Field.Value.sValue', 'Field-@StepDef.XIGUID-@FieldOrigin.XIGUID-@Model.sGUID', '@FieldOrigin.FK1ClickID')</script>
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                            <input type="text" class="form-control autocomplete one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" id="Field-@StepDef.XIGUID-@FieldOrigin.XIGUID-@Model.sGUID" data-value="0" onkeyup="fncgetautocomplete('@FieldOrigin.FK1ClickIDXIGUID', this, event)" @DisableLockStage />
                                                                                                        }
                                                                                                    }
                                                                                                    else if (FieldOrigin.sBOSize == "20")
                                                                                                    {
                                                                                                        //if (!string.IsNullOrEmpty(Field.Value.sValue))
                                                                                                        //{
                                                                                                        var sValue = string.Empty;
                                                                                                        if (FieldOrigin.bIsFieldDependent)
                                                                                                        {
                                                                                                            <input type="hidden" value="@FieldOrigin.sDependentFieldIDs-@FieldOrigin.sDependentValue^@Field.Value.sValue" id="Field-@FieldOrigin.XIGUID-@Model.sGUID" @DisableLockStage>
                                                                                                            string strEvent = string.Empty;

                                                                                                            if (!string.IsNullOrEmpty(FieldOrigin.sEventHandler) && FieldOrigin.sEventHandler.Contains("="))
                                                                                                            {
                                                                                                                var oEventHandler = FieldOrigin.sEventHandler.Split(',');
                                                                                                                foreach (var sEventHandler in oEventHandler)
                                                                                                                {
                                                                                                                    var sEvents = sEventHandler.Split('=');
                                                                                                                    strEvent = strEvent + " " + sEvents[0] + "=" + sEvents[1] + "(this,'" + @Field.Value.sValue + "')";
                                                                                                                }
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                                strEvent = "onchange =fncGetDependency(this) onload = fncGetDependency(this)";
                                                                                                            }
                                                                                                            if (@FieldOrigin.ID == 2263 && (@Field.Value.sValue == "730" || (@Field.Value.iValue == 0 && !string.IsNullOrEmpty(@Field.Value.sValue))))
                                                                                                            {
                                                                                                                Field.Value.sValue = "730";
                                                                                                                <script>
                                                                                                var ssFieldID = '@FieldOrigin.XIGUID';
                                                                                                var sValue='@Field.Value.sValue';
                                                                                                if(ssFieldID=='2263'&&sValue=='730'){
                                                                                                    var NewField=$('#Field-'+@FieldOrigin.ID).val();
                                                                                                    var sDepentFieldValue=NewField.split('-')[1].split('^')[1];
                                                                                                    var parentName = "qsfield";
                                                                                                    var sFieldValue=$('[name="@FieldOrigin.sDependentFieldIDs"]').val();
                                                                                                    if(sFieldValue==''){
                                                                                                        var childObj1 = $('[name="@FieldOrigin.sDependentFieldIDs"]').val(sDepentFieldValue);
                                                                                                        fncHideShowFromHTMLTree(parentName, childObj1[0], 'show');
                                                                                                    }else{
                                                                                                        var childObj1 = $('[name="@FieldOrigin.sDependentFieldIDs"]');
                                                                                                        fncHideShowFromHTMLTree(parentName, childObj1[0], 'show');
                                                                                                    }
                                                                                                }
                                                                                                                </script>
                                                                                                            }
                                                                                                            <input type="text" class="form-control autocomplete one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" placeholder="@FieldOrigin.sPlaceHolder" id="FieldShow-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID" @strEvent value="@sValue" @DisableLockStage />
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                            //FieldOrigin.FieldDynamicOptionList.Where(m => m.sOptionValue == Field.Value.sValue).Select(m => m.sOptionName).FirstOrDefault();
                                                                                                            <input type="text" class="form-control autocomplete one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" placeholder="@FieldOrigin.sPlaceHolder" id="FieldShow-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID" value="@sValue" @DisableLockStage />
                                                                                                            @*<script>fncgetlabeldata(0, '@Field.Value.sValue', 'Field-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID', '@FieldOrigin.FK1ClickID')</script>*@

                                                                                                        }
                                                                                                        @*}
                                                                                                    else
                                                                                                    {
                                                                                                        <input type="text" class="form-control autocomplete" placeholder="@FieldOrigin.sPlaceHolder" id="FieldShow-@StepDef.ID-@FieldOrigin.ID" @DisableLockStage />
                                                                                                    }*@
                                                                                                        <input type="hidden" class="form-control" name="@FieldOrigin.sName" id="Field-@StepDef.XIGUID-@FieldOrigin.XIGUID-@Model.sGUID" data-value="@Field.Value.sValue" value="@Field.Value.sValue" data-IsValid="" />
                                                                                                        <script>
                                                                                        var iBODID = '@FieldOrigin.FKiBOIDXIGUID';
                                                                                        var sBOName = "";
                                                                                        var fieldVal = '@Field.Value.sValue';
                                                                                        var AutoCompleteList = 0;
                                                                                        var sRefType = "bo";
                                                                                        if('@FieldOrigin.FK1ClickID' > 0){
                                                                                            sRefType = "1click";
                                                                                            iBODID = '@FieldOrigin.FK1ClickIDXIGUID';
                                                                                        }
                                                                                        $.ajax({
                                                                                            url: '@Url.Action("GetAutoCompleteList", "BusinessObjects")',
                                                                                            type: 'POST',
                                                                                            contentType: "application/json; charset=utf-8",
                                                                                            datatype: "json",
                                                                                            async: true,
                                                                                            cache: false,
                                                                                            data: JSON.stringify({ sType: sRefType, iBODID: iBODID, sBOName: sBOName, sGUID: '@Model.sGUID' }),
                                                                                            success: function (data) {
                                                                                                debugger;
                                                                                                AutoCompleteList = data;
                                                                                                if('@FieldOrigin.FK1ClickID' > 0){
                                                                                                    AutoCompleteDict.push({
                                                                                                        key:   '@FieldOrigin.FK1ClickID',
                                                                                                        value: AutoCompleteList
                                                                                                    });
                                                                                                }
                                                                                                else if('@FieldOrigin.FKiBOID' > 0){
                                                                                                    AutoCompleteDict.push({
                                                                                                        key:   '@FieldOrigin.FKiBOID',
                                                                                                        value: AutoCompleteList
                                                                                                    });
                                                                                                }

                                                                                                if ('@Field.Value.sValue' && '@Field.Value.sValue'.length > 0) {
                                                                                                    debugger;
                                                                                                    var autoDict = 0;
                                                                                                    if('@FieldOrigin.FK1ClickID' > 0){
                                                                                                        for(var k=0;k<AutoCompleteDict.length;k++){
                                                                                                            if(AutoCompleteDict[k].key=='@FieldOrigin.FK1ClickID'){
                                                                                                                autoDict = AutoCompleteDict[k].value;
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                    else if ('@FieldOrigin.FKiBOID' > 0) {
                                                                                                        debugger;
                                                                                                        for(var k=0;k<AutoCompleteDict.length;k++){
                                                                                                            if(AutoCompleteDict[k].key=='@FieldOrigin.FKiBOID'){
                                                                                                                autoDict = AutoCompleteDict[k].value;
                                                                                                            }
                                                                                                        }
                                                                                                    }

                                                                                                    var sResValue = Object.keys(autoDict).filter(function(key) {return autoDict[key] === '@Field.Value.sValue'})[0];
                                                                                                    $("#FieldShow-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID").val(sResValue);
                                                                                                }
                                                                                            }
                                                                                        });

                                                                                        function fncDependentField(obj, sFieldValue) {
                                                                                            debugger;
                                                                                            var Value=obj.value;
                                                                                            var FieldOriginID=obj.id.split('-')[2];
                                                                                            var parentName = 'qsfield';
                                                                                            var NewField=$('#Field-'+FieldOriginID).val();
                                                                                            var sDepentFieldValue=NewField.split('-')[1].split('^')[0];
                                                                                            var sShowField=NewField.split('-')[0];
                                                                                            var sSelectedValue=Value;
                                                                                            if(sSelectedValue.toLowerCase() == sDepentFieldValue)
                                                                                            {
                                                                                                var childObj1 = $('[name="'+sShowField+'"]');
                                                                                                fncHideShowFromHTMLTree(parentName, childObj1[0], 'show');
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                                var childObj1 = $('[name="'+sShowField+'"]');
                                                                                                fncHideShowFromHTMLTree(parentName, childObj1[0], 'hide');
                                                                                            }
                                                                                        }
                                                                                        $("#FieldShow-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID").change(function () {
                                                                                            debugger;
                                                                                            @*var sResult = @Html.Raw(Json.Encode(FieldOrigin.FieldDynamicOptionList.Where(m => !string.IsNullOrEmpty(m.sOptionName)).GroupBy(m=>m.sOptionName).Select(m=>m.FirstOrDefault()).ToDictionary(m=>m.sOptionName, m=>m.sOptionValue)));*@
                                                                                            var sResult = 0;

                                                                                            if('@FieldOrigin.FK1ClickID' > 0){
                                                                                                for(var k=0;k<AutoCompleteDict.length;k++){
                                                                                                    if(AutoCompleteDict[k].key=='@FieldOrigin.FK1ClickID'){
                                                                                                        sResult = AutoCompleteDict[k].value;
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                            else if('@FieldOrigin.FKiBOID' > 0){
                                                                                                for(var k=0;k<AutoCompleteDict.length;k++){
                                                                                                    if(AutoCompleteDict[k].key=='@FieldOrigin.FKiBOID'){
                                                                                                        sResult = AutoCompleteDict[k].value;
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                            var txtValue = $(this).val();
                                                                                            $("#Field-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID").val("");
                                                                                            $("#Field-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID").attr("data-value", "");
                                                                                            if(typeof txtValue !== 'undefined' && txtValue != ''){
                                                                                                var sValue = sResult[$(this).val()];
                                                                                                if(typeof sValue !== 'undefined' && sValue != ''){
                                                                                                    $("#Field-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID").val(sValue);
                                                                                                    $("#Field-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID").attr("data-value", sValue);
                                                                                                    //$("#Field-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID").attr("value", sValue);
                                                                                                    $(this).attr("data-value", sValue);
                                                                                                    $(this).attr("value", sValue);
                                                                                                    $("#Field-@StepDef.XIGUID-@FieldOrigin.XIGUID-@Model.sGUID").attr("data-value", sValue);
                                                                                                    $("#Field-@StepDef.XIGUID-@FieldOrigin.XIGUID-@Model.sGUID").attr("value", sValue);
                                                                                                    $(this).attr("data-IsValid",true);
                                                                                                    $('.field-errmsg-@StepDef.ID-@FieldOrigin.ID').html("");
                                                                                                    $('.field-errmsg-@StepDef.ID-@FieldOrigin.ID').closest('.highlight--help').removeClass('msg-error');
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                    //$(this).val('');
                                                                                                    $(this).attr("data-IsValid",false);
                                                                                                    $('.field-errmsg-@StepDef.ID-@FieldOrigin.ID').html("<div>@FieldOrigin.sValidationMessage</div>");
                                                                                                    $('.field-errmsg-@StepDef.ID-@FieldOrigin.ID').closest('.highlight--help').addClass('msg-error');
                                                                                                }
                                                                                            }
                                                                                        });

                                                                                        $("#FieldShow-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID").autocomplete({

                                                                                            source: function (request, response) {
                                                                                                debugger;
                                                                                                var DOptionsList = 0;
                                                                                                @*var DOptionsList = @Html.Raw(Json.Encode(FieldOrigin.FieldDynamicOptionList.Where(m => !string.IsNullOrEmpty(m.sOptionName)).GroupBy(m=>m.sOptionName).Select(m=>m.FirstOrDefault()).ToDictionary(m=>m.sOptionName, m=>m.sOptionValue)));*@

                                                                                                if('@FieldOrigin.FK1ClickID' > 0){
                                                                                                    for(var k=0;k<AutoCompleteDict.length;k++){
                                                                                                        if(AutoCompleteDict[k].key=='@FieldOrigin.FK1ClickID'){
                                                                                                            DOptionsList = AutoCompleteDict[k].value;
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                                else if('@FieldOrigin.FKiBOID' > 0){
                                                                                                    for(var k=0;k<AutoCompleteDict.length;k++){
                                                                                                        if(AutoCompleteDict[k].key=='@FieldOrigin.FKiBOID'){
                                                                                                            DOptionsList = AutoCompleteDict[k].value;
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                                $("#Field-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID").val("");
                                                                                                var List = [];
                                                                                                //for(var i = 0;i < DOptionsList.length; i++){
                                                                                                //    List.push({label:DOptionsList[i].sOptionName, value:DOptionsList[i].sOptionValue});
                                                                                                //}
                                                                                                if(DOptionsList && DOptionsList!= 0){
                                                                                                    $.each(DOptionsList, function(key, value) {
                                                                                                        List.push({label:key, value:value});
                                                                                                    });
                                                                                                    response($.ui.autocomplete.filter(List, request.term));
                                                                                                }
                                                                                            },
                                                                                            select: function (event, ui) {
                                                                                                debugger;
                                                                                                $("#FieldShow-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID").val(ui.item.label);
                                                                                                $("#Field-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID").val(ui.item.value);
                                                                                                return false;
                                                                                            },
                                                                                            focus: function (event, ui) {
                                                                                                debugger;
                                                                                                $("#FieldShow-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID").val(ui.item.label);
                                                                                                $("#Field-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID").val(ui.item.value);
                                                                                                return false;
                                                                                            }
                                                                                        });

                                                                                                        </script>
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                        if (FieldOrigin.bIsDependency)
                                                                                                        {
                                                                                                            <input type="hidden" value="@FieldOrigin.sFKiOrginIDs" id="Field-@FieldOrigin.XIGUID" @DisableLockStage>
                                                                                                            string strEvent = string.Empty;

                                                                                                            if (!string.IsNullOrEmpty(FieldOrigin.sEventHandler) && FieldOrigin.sEventHandler.Contains("="))
                                                                                                            {
                                                                                                                var oEventHandler = FieldOrigin.sEventHandler.Split(',');
                                                                                                                foreach (var sEventHandler in oEventHandler)
                                                                                                                {
                                                                                                                    var sEvents = sEventHandler.Split('=');
                                                                                                                    if (sEvents[0] == "onload")
                                                                                                                    {
                                                                                                                        sFieldID = "Field-" + @StepDef.ID + "-" + @FieldOrigin.ID;
                                                                                                                        sFieldOriginIds = @FieldOrigin.sFKiOrginIDs;
                                                                                                                        sFieldValue = Field.Value.sValue;
                                                                                                                    }
                                                                                                                    strEvent = strEvent + " " + sEvents[0] + "=" + sEvents[1] + "(this,'" + @Field.Value.sValue + "')";
                                                                                                                }
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                                strEvent = "onchange =fncGetDependency(this) onload = fncGetDependency(this)";
                                                                                                            }
                                                                                                            <div class="select-wrapper">
                                                                                                                <select class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" name="@FieldOrigin.sName" id="Field-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID" @strEvent @DisableLockStage>
                                                                                                                    @if (FieldOrigin.FieldDynamicOptionList != null && FieldOrigin.FieldDynamicOptionList.Count() > 0)
                                                                                                                    {
                                                                                                                        var Please = FieldOrigin.FieldDynamicOptionList.Where(m => m.sOptionName == "please select" || m.sOptionName == "--please select--").FirstOrDefault();
                                                                                                                        //var Please = null;
                                                                                                                        if (Please == null)
                                                                                                                        {
                                                                                                                            <option value="">@sPleaseSelect</option>
                                                                                                                        }
                                                                                                                        foreach (var opt in FieldOrigin.FieldDynamicOptionList)
                                                                                                                        {
                                                                                                                            if (opt.sOptionName != null && (opt.sOptionName.Trim().ToLower() == "please select" || opt.sOptionName.Trim().ToLower() == "--please select--"))
                                                                                                                            {
                                                                                                                                if (FieldOrigin.bIsMandatory == true)
                                                                                                                                {
                                                                                                                                    <option value="">@sPleaseSelect</option>
                                                                                                                                }
                                                                                                                                else
                                                                                                                                {
                                                                                                                                    <option value="">@sPleaseSelect</option>
                                                                                                                                }
                                                                                                                            }
                                                                                                                            else if (opt.sOptionValue == Field.Value.sValue)
                                                                                                                            {
                                                                                                                                <option value="@opt.sOptionValue" selected>@opt.sOptionName</option>
                                                                                                                            }
                                                                                                                            else
                                                                                                                            {
                                                                                                                                <option value="@opt.sOptionValue">@opt.sOptionName</option>
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                </select>
                                                                                                                <span class="select_wrapper_caret glyphicon glyphicon-chevron-down"></span>
                                                                                                            </div>
                                                                                                            <div id="ParentOriginID_@FieldOrigin.ID" hidden="hidden"></div>
                                                                                                            <div id="ParentOriginIDValue_@FieldOrigin.ID" hidden="hidden"></div>
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                            if (FieldOrigin.DataType.sName.ToLower() == "list box")
                                                                                                            {
                                                                                                                var SelectedArray = new List<string>();
                                                                                                                if (!string.IsNullOrEmpty(Field.Value.sValue))
                                                                                                                {
                                                                                                                    var ArrayList = Field.Value.sValue.Split(',');
                                                                                                                    if (ArrayList != null && ArrayList.Count() > 0)
                                                                                                                    {
                                                                                                                        foreach (var Array in ArrayList)
                                                                                                                        {
                                                                                                                            SelectedArray.Add(Array);
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                                <div class="select-wrapper">
                                                                                                                    <select class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" name="@FieldOrigin.sName" multiple="multiple" id="Field-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID" @DisableLockStage>
                                                                                                                        @if (FieldOrigin.FieldDynamicOptionList != null && FieldOrigin.FieldDynamicOptionList.Count() > 0)
                                                                                                                        {
                                                                                                                            foreach (var opt in FieldOrigin.FieldDynamicOptionList)
                                                                                                                            {
                                                                                                                                if (opt.sOptionName != null && (opt.sOptionName.Trim().ToLower() == "please select" || opt.sOptionName.Trim().ToLower() == "--please select--"))
                                                                                                                                {
                                                                                                                                    if (FieldOrigin.bIsMandatory == true)
                                                                                                                                    {
                                                                                                                                        <option value="" class="ps">@sPleaseSelect</option>
                                                                                                                                    }
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                        <option value="" class="ps">@sPleaseSelect</option>
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                else if (SelectedArray.Contains(opt.sOptionValue))
                                                                                                                                {
                                                                                                                                    <option value="@opt.sOptionValue" selected>@opt.sOptionName</option>
                                                                                                                                }
                                                                                                                                else
                                                                                                                                {
                                                                                                                                    <option value="@opt.sOptionValue">@opt.sOptionName</option>
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    </select>
                                                                                                                    <span class="select_wrapper_caret glyphicon glyphicon-chevron-down"></span>
                                                                                                                </div>
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                                <div class="select-wrapper">
                                                                                                                    <select class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" name="@FieldOrigin.sName" id="Field-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID" @DisableLockStage>
                                                                                                                        @if (FieldOrigin.FieldDynamicOptionList != null && FieldOrigin.FieldDynamicOptionList.Count() > 0)
                                                                                                                        {
                                                                                                                            foreach (var opt in FieldOrigin.FieldDynamicOptionList)
                                                                                                                            {
                                                                                                                                if (opt.sOptionName != null && (opt.sOptionName.Trim().ToLower() == "please select" || opt.sOptionName.Trim().ToLower() == "--please select--"))
                                                                                                                                {
                                                                                                                                    if (FieldOrigin.bIsMandatory == true)
                                                                                                                                    {
                                                                                                                                        <option value="" class="ps">@sPleaseSelect</option>
                                                                                                                                    }
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                        <option value="" class="ps">@sPleaseSelect</option>
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                else if (opt.sOptionValue == Field.Value.sValue)
                                                                                                                                {
                                                                                                                                    <option value="@opt.sOptionValue" selected>@opt.sOptionName</option>
                                                                                                                                }
                                                                                                                                else
                                                                                                                                {
                                                                                                                                    <option value="@opt.sOptionValue">@opt.sOptionName</option>
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    </select>
                                                                                                                    <span class="select_wrapper_caret glyphicon glyphicon-chevron-down"></span>
                                                                                                                </div>
                                                                                                            }
                                                                                                        }
                                                                                                        <script type="text/javascript">
                                                                                                    function fncMiniMumDepositCal(obj) {
                                                                                                        debugger;
                                                                                            if (obj != null && obj.nodeName == "SELECT") {
                                                                                                fnccheckme(obj);
                                                                                            }
                                                                                            var id = obj.value;
                                                                                            var FieldOriginID = obj.id.split('-')[2];
                                                                                            var PaymentType = $('select[name="iClientPayment"] option:selected').val();
                                                                                            if (PaymentType == 10) {
                                                                                                var PaymentCharge = $('[name="iPaymentcharge"]').val();
                                                                                                var InsurerCharge = $('[name="insurarcharges"]').val();
                                                                                                var NewField = $('#Field-' + FieldOriginID).val();
                                                                                                var FieldIDs = "";
                                                                                                if (NewField != undefined && NewField != "") {
                                                                                                    FieldIDs = NewField.split(',');
                                                                                                    $.each(FieldIDs, function (index, Value) {
                                                                                                        $.ajax({
                                                                                                            url: '@Url.Action("GetMinimumDepositValue", "XiLink")',
                                                                                                            type: 'POST',
                                                                                                            contentType: "application/json; charset=utf-8",
                                                                                                            datatype: "json",
                                                                                                            async: true,
                                                                                                            cache: false,
                                                                                                            data: JSON.stringify({ rPaymentCharge: PaymentCharge, rInsurerCharge: InsurerCharge, sGUID: '@Model.sGUID', QSIID: '@Model.ID' }),
                                                                                                            success: function (data) {
                                                                                                                //var disabled=$('#Field-' + Value).prop("disabled")
                                                                                                                ////$('#Field-' + Value).empty();
                                                                                                                if (data) {
                                                                                                                    $('#Field-' + Value).val(data);
                                                                                                                    $('.Field-' + Value).val(data);
                                                                                                                }
                                                                                                                $('[name="iClientPayment1"]').val($('[name=iClientDeposit]').val());
                                                                                                            }
                                                                                                        });
                                                                                                    });
                                                                                                }

                                                                                            }

                                                                                        }

                                                                                                        </script>
                                                                                                    }
                                                                                                    // }
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                    if (FieldOrigin.FieldOptionList != null && FieldOrigin.FieldOptionList.Count() > 0)
                                                                                                    {
                                                                                                        var IsIcon = false;
                                                                                                        var IsHorizontal = false;
                                                                                                        var IsOptList = false;
                                                                                                        var FieldVis = FieldVisualistions.Where(m => m.FKiQSStepDefinitionID == StepDef.ID && m.FKiFieldOriginID == FieldOrigin.ID).FirstOrDefault();
                                                                                                        if (FieldVis != null)
                                                                                                        {
                                                                                                            var Options = FieldVis.sVisualisation.Split(';').ToList();
                                                                                                            if (Options[0].Contains("optionlist"))
                                                                                                            {
                                                                                                                IsOptList = true;
                                                                                                                var Vals = Options[1].Split('=').ToList();
                                                                                                                var Icons = Vals[1].Replace("'", "");
                                                                                                                var Imgs = Icons.Split('|').ToList();
                                                                                                                if (Imgs[0] == "icon")
                                                                                                                {
                                                                                                                    IsIcon = true;
                                                                                                                    if (Imgs[1].Contains(','))
                                                                                                                    {
                                                                                                                        var Img = Imgs[1].Split(',').ToList();
                                                                                                                        Dictionary
                                                                                                                        <string, string>
                                                                                                                            OptIcons = new Dictionary<string, string>
                                                                                                                                ();
                                                                                                                        foreach (var ig in Img)
                                                                                                                        {
                                                                                                                            var Names = ig.Split(':').ToList();
                                                                                                                            OptIcons[Names[0]] = Names[1];
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                                else if (Imgs[0] == "horizontal")
                                                                                                                {
                                                                                                                    IsHorizontal = true;
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                        if (IsOptList && IsIcon)
                                                                                                        {
                                                                                                            foreach (var opt in FieldOrigin.FieldOptionList)
                                                                                                            {
                                                                                                                if (opt.sOptionName.ToLower() == "male")
                                                                                                                {
                                                                                                                    <label class="label-wrapper gender">
                                                                                                                        @if (opt.sOptionValue == Field.Value.sValue)
                                                                                                                        {
                                                                                                                            <input type="radio" id="IDname" name="@FieldOrigin.sName" value="@opt.sOptionValue" checked="checked" @DisableLockStage />
                                                                                                                        }
                                                                                                                        else
                                                                                                                        {
                                                                                                                            <input type="radio" id="IDname" name="@FieldOrigin.sName" value="@opt.sOptionValue" @DisableLockStage />
                                                                                                                        }
                                                                                                                        <span class="male"></span> @opt.sOptionName
                                                                                                                    </label>
                                                                                                                }
                                                                                                                else if (opt.sOptionName.ToLower() == "female")
                                                                                                                {
                                                                                                                    <label class="label-wrapper gender">
                                                                                                                        @if (opt.sOptionValue == Field.Value.sValue)
                                                                                                                        {
                                                                                                                            <input type="radio" id="IDname" name="@FieldOrigin.sName" value="@opt.sOptionValue" checked="checked" @DisableLockStage />
                                                                                                                        }
                                                                                                                        else
                                                                                                                        {
                                                                                                                            <input type="radio" id="IDname" name="@FieldOrigin.sName" value="@opt.sOptionValue" @DisableLockStage />
                                                                                                                        }
                                                                                                                        <span class="female"></span> @opt.sOptionName
                                                                                                                    </label>
                                                                                                                }
                                                                                                                else if (opt.sOptionName.ToLower() == "Single Axle".ToLower())
                                                                                                                {
                                                                                                                    <label class="label-wrapper axle">
                                                                                                                        @if (opt.sOptionValue == Field.Value.sValue)
                                                                                                                        {
                                                                                                                            <input type="radio" id="IDname" name="@FieldOrigin.sName" value="@opt.sOptionValue" checked="checked" @DisableLockStage />
                                                                                                                        }
                                                                                                                        else
                                                                                                                        {
                                                                                                                            <input type="radio" id="IDname" name="@FieldOrigin.sName" value="@opt.sOptionValue" @DisableLockStage />
                                                                                                                        }
                                                                                                                        <span class="single"></span> @opt.sOptionName
                                                                                                                    </label>
                                                                                                                }
                                                                                                                else if (opt.sOptionName.ToLower() == "Twin Axle".ToLower())
                                                                                                                {
                                                                                                                    <label class="label-wrapper axle">
                                                                                                                        @if (opt.sOptionValue == Field.Value.sValue)
                                                                                                                        {
                                                                                                                            <input type="radio" id="IDname" name="@FieldOrigin.sName" value="@opt.sOptionValue" checked="checked" @DisableLockStage />
                                                                                                                        }
                                                                                                                        else
                                                                                                                        {
                                                                                                                            <input type="radio" id="IDname" name="@FieldOrigin.sName" value="@opt.sOptionValue" @DisableLockStage />
                                                                                                                        }
                                                                                                                        <span class="double"></span> @opt.sOptionName
                                                                                                                    </label>
                                                                                                                }

                                                                                                            }
                                                                                                        }
                                                                                                        else if (IsOptList && IsHorizontal)
                                                                                                        {
                                                                                                            <div class="">
                                                                                                                @foreach (var opt in FieldOrigin.FieldOptionList.OrderBy(m => m.ID))
                                                                                                                {
                                                                                                                    if (opt.sOptionName != sPleaseSelect && opt.sOptionName != "Please Select")
                                                                                                                    {
                                                                                                                        <label class="label-wrapper half">
                                                                                                                            @if (opt.sOptionValue == Field.Value.sValue)
                                                                                                                            {
                                                                                                                                <input type="radio" name="Radio_@FieldOrigin.sName" value="@opt.sOptionValue" checked="checked" data-shtype="@opt.iType" data-show="@opt.sShowField" data-hide="@opt.sHideField" data-isRemoveDependency="@opt.bIsRemoveDependency" data-DependencyType="@opt.iDependencyType" onchange="fncRadio(this,'@FieldOrigin.sName')">
                                                                                                                            }
                                                                                                                            else
                                                                                                                            {
                                                                                                                                <input type="radio" name="Radio_@FieldOrigin.sName" value="@opt.sOptionValue" data-shtype="@opt.iType" data-show="@opt.sShowField" data-hide="@opt.sHideField" data-isRemoveDependency="@opt.bIsRemoveDependency" data-DependencyType="@opt.iDependencyType" onchange="fncRadio(this,'@FieldOrigin.sName')">
                                                                                                                            }
                                                                                                                            <span class="radBox">
                                                                                                                                <span>@opt.sOptionName</span>
                                                                                                                            </span>
                                                                                                                        </label>
                                                                                                                    }
                                                                                                                }
                                                                                                                <input type="hidden" name="@FieldOrigin.sName" value="@Field.Value.sValue" data-Merge="@sMergeType" data-MergeValue="@sMergeValue">
                                                                                                            </div>
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                            if (FieldOrigin.bIsAutoDropDown)
                                                                                                            {
                                                                                                                var optval = string.Empty;
                                                                                                                if (!string.IsNullOrEmpty(Field.Value.sValue))
                                                                                                                {
                                                                                                                    optval = FieldOrigin.FieldOptionList.Where(m => m.sOptionValue == Field.Value.sValue).Select(m => m.sOptionName).FirstOrDefault();
                                                                                                                }
                                                                                                                <input type="text" list="autoddl-@FieldOrigin.ID" placeholder="please select" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" onchange="fnccheckvalidvalue(this)" value="@optval" @DisableLockStage>
                                                                                                                <datalist id="autoddl-@FieldOrigin.ID">
                                                                                                                    @foreach (var opt in FieldOrigin.FieldOptionList)
                                                                                                                    {
                                                                                                                        if (opt.sOptionValue == Field.Value.sValue)
                                                                                                                        {
                                                                                                                            <option data-value="@opt.sOptionValue" value="@opt.sOptionName" selected data-shtype="@opt.iType" data-show="@opt.sShowField" data-hide="@opt.sHideField" />
                                                                                                                        }
                                                                                                                        else
                                                                                                                        {
                                                                                                                            <option data-value="@opt.sOptionValue" value="@opt.sOptionName" data-shtype="@opt.iType" data-show="@opt.sShowField" data-hide="@opt.sHideField" />
                                                                                                                        }
                                                                                                                    }
                                                                                                                </datalist>
                                                                                                                <input type="hidden" id="hidautoddl-@FieldOrigin.ID" name="@FieldOrigin.sName" value="@Field.Value.sValue" data-Merge="@sMergeType" data-MergeValue="@sMergeValue">
                                                                                                            }
                                                                                                            else if (FieldOrigin.bIsDependency)
                                                                                                            {
                                                                                                                <input type="hidden" value="@FieldOrigin.sFKiOrginIDs" id="Field-@FieldOrigin.ID">
                                                                                                                string strEvent = string.Empty;

                                                                                                                if (!string.IsNullOrEmpty(FieldOrigin.sEventHandler) && FieldOrigin.sEventHandler.Contains("="))
                                                                                                                {
                                                                                                                    var oEventHandler = FieldOrigin.sEventHandler.Split(',');
                                                                                                                    foreach (var sEventHandler in oEventHandler)
                                                                                                                    {
                                                                                                                        var sEvents = sEventHandler.Split('=');
                                                                                                                        if (sEvents[0] == "onload")
                                                                                                                        {
                                                                                                                            sFieldID = "Field-" + StepDef.ID + "-" + FieldOrigin.ID;
                                                                                                                            sFieldOriginIds = FieldOrigin.sFKiOrginIDs;
                                                                                                                            sFieldValue = Field.Value.sValue;
                                                                                                                        }
                                                                                                                        strEvent = strEvent + " " + sEvents[0] + "=" + sEvents[1] + "(this)";
                                                                                                                    }
                                                                                                                }
                                                                                                                else
                                                                                                                {
                                                                                                                    strEvent = "onchange =fncGetDependency(this) onload = fncGetDependency(this)";
                                                                                                                }
                                                                                                                var bIsSelect = false;
                                                                                                                <div class="select-wrapper">
                                                                                                                    <select class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" name="@FieldOrigin.sName" id="select-@StepDef.ID-@FieldOrigin.ID" @strEvent @DisableLockStage>
                                                                                                                        @if (FieldOrigin.FieldOptionList != null && FieldOrigin.FieldOptionList.Count() > 0)
                                                                                                                        {
                                                                                                                            var i = 0;
                                                                                                                            foreach (var opt in FieldOrigin.FieldOptionList.OrderBy(m => m.ID))
                                                                                                                            {
                                                                                                                                if (i == 0 && (opt.sOptionName != null && (opt.sOptionName.Trim().ToLower() == "please select" || opt.sOptionName.Trim().ToLower() == "--please select--")))
                                                                                                                                {
                                                                                                                                    {
                                                                                                                                        bIsSelect = true;
                                                                                                                                    }
                                                                                                                                    if (FieldOrigin.bIsMandatory == true)
                                                                                                                                    {
                                                                                                                                        <option value="" class="ps">@sPleaseSelect</option>
                                                                                                                                    }
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                        <option value="" class="ps">@sPleaseSelect</option>
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                else
                                                                                                                                {
                                                                                                                                    if (!string.IsNullOrEmpty(FieldOrigin.sDefaultValue) && (Field.Value != null && string.IsNullOrEmpty(Field.Value.sValue)))
                                                                                                                                    {
                                                                                                                                        if (opt.sOptionValue == FieldOrigin.sDefaultValue)
                                                                                                                                        {
                                                                                                                                            <option value="@opt.sOptionValue" selected data-shtype="@opt.iType" data-show="@opt.sShowField" data-hide="@opt.sHideField" data-isRemoveDependency="@opt.bIsRemoveDependency" data-DependencyType="@opt.iDependencyType" @DisableLockStage>@opt.sOptionName</option>
                                                                                                                                        }
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                            <option value="@opt.sOptionValue" data-shtype="@opt.iType" data-show="@opt.sShowField" data-hide="@opt.sHideField" data-isRemoveDependency="@opt.bIsRemoveDependency" data-DependencyType="@opt.iDependencyType" @DisableLockStage>@opt.sOptionName</option>
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                        if (opt.sOptionValue == Field.Value.sValue)
                                                                                                                                        {
                                                                                                                                            <option value="@opt.sOptionValue" selected data-shtype="@opt.iType" data-show="@opt.sShowField" data-hide="@opt.sHideField" data-isRemoveDependency="@opt.bIsRemoveDependency" data-DependencyType="@opt.iDependencyType" @DisableLockStage>@opt.sOptionName</option>
                                                                                                                                        }
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                            <option value="@opt.sOptionValue" data-shtype="@opt.iType" data-show="@opt.sShowField" data-hide="@opt.sHideField" data-isRemoveDependency="@opt.bIsRemoveDependency" data-DependencyType="@opt.iDependencyType" @DisableLockStage>@opt.sOptionName</option>
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                i++;
                                                                                                                            }
                                                                                                                        }
                                                                                                                    </select>
                                                                                                                    <script>
                                                                                                    if('@Field.Value.sValue' == null ||'@Field.Value.sValue' == ''){
                                                                                                        if('@bIsSelect' == 'True'){
                                                                                                            $('#select-@FieldOrigin.ID').val('');
                                                                                                        }
                                                                                                    }
                                                                                                                    </script>
                                                                                                                    <span class="select_wrapper_caret glyphicon glyphicon-chevron-down"></span>
                                                                                                                </div>
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                                var bIsSelect = false;
                                                                                                                <div class="select-wrapper">
                                                                                                                    @if (FieldOrigin.bIsDisable)
                                                                                                                    {
                                                                                                                        <input type="hidden" name="@FieldOrigin.sName" value="@Field.Value.sValue" data-Merge="@sMergeType" data-MergeValue="@sMergeValue" />
                                                                                                                    }
                                                                                                                    else
                                                                                                                    {
                                                                                                                        <input type="hidden" value="@FieldOrigin.sFKiOrginIDs" id="Field-@FieldOrigin.ID">
                                                                                                                    }
                                                                                                                    <select class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" name="@FieldOrigin.sName" onchange="fnccheckme(this)" id="select-@FieldOrigin.ID" @DisableLockStage>
                                                                                                                        @if (FieldOrigin.FieldOptionList != null && FieldOrigin.FieldOptionList.Count() > 0)
                                                                                                                        {
                                                                                                                            var i = 0;
                                                                                                                            foreach (var opt in FieldOrigin.FieldOptionList.OrderBy(m => m.ID))
                                                                                                                            {
                                                                                                                                if (i == 0 && (opt.sOptionName != null && (opt.sOptionName.Trim().ToLower() == "please select" || opt.sOptionName.Trim().ToLower() == "--please select--")))
                                                                                                                                {
                                                                                                                                    {
                                                                                                                                        bIsSelect = true;
                                                                                                                                    }
                                                                                                                                    <option value="" class="ps" data-shtype="@opt.iType" data-show="@opt.sShowField" data-hide="@opt.sHideField" data-isRemoveDependency="@opt.bIsRemoveDependency" data-DependencyType="@opt.iDependencyType">@sPleaseSelect</option>
                                                                                                                                    @*if (FieldOrigin.bIsMandatory == true)
                                                                                                                                {
                                                                                                                                    <option value="" class="ps">@sPleaseSelect</option>
                                                                                                                                }
                                                                                                                                else
                                                                                                                                {
                                                                                                                                    <option value="" class="ps">@sPleaseSelect</option>
                                                                                                                                }*@
                                                                                                                                }
                                                                                                                                else
                                                                                                                                {
                                                                                                                                    if (!string.IsNullOrEmpty(FieldOrigin.sDefaultValue))
                                                                                                                                    {
                                                                                                                                        if (!string.IsNullOrEmpty(@Field.Value.sValue) && opt.sOptionValue == @Field.Value.sValue)
                                                                                                                                        {
                                                                                                                                            <option value="@opt.sOptionValue" selected data-shtype="@opt.iType" data-show="@opt.sShowField" data-hide="@opt.sHideField" data-isRemoveDependency="@opt.bIsRemoveDependency" data-DependencyType="@opt.iDependencyType">@opt.sOptionName</option>
                                                                                                                                        }
                                                                                                                                        else if (string.IsNullOrEmpty(@Field.Value.sValue) && opt.sOptionValue == FieldOrigin.sDefaultValue)
                                                                                                                                        {
                                                                                                                                            <option value="@opt.sOptionValue" selected data-shtype="@opt.iType" data-show="@opt.sShowField" data-hide="@opt.sHideField" data-isRemoveDependency="@opt.bIsRemoveDependency" data-DependencyType="@opt.iDependencyType">@opt.sOptionName</option>
                                                                                                                                        }
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                            <option value="@opt.sOptionValue" data-shtype="@opt.iType" data-show="@opt.sShowField" data-hide="@opt.sHideField" data-isRemoveDependency="@opt.bIsRemoveDependency" data-DependencyType="@opt.iDependencyType">@opt.sOptionName</option>
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                        if (opt.sOptionValue == Field.Value.sValue)
                                                                                                                                        {
                                                                                                                                            <option value="@opt.sOptionValue" selected data-shtype="@opt.iType" data-show="@opt.sShowField" data-hide="@opt.sHideField" data-isRemoveDependency="@opt.bIsRemoveDependency" data-DependencyType="@opt.iDependencyType">@opt.sOptionName</option>
                                                                                                                                        }
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                            <option value="@opt.sOptionValue" data-shtype="@opt.iType" data-show="@opt.sShowField" data-hide="@opt.sHideField" data-isRemoveDependency="@opt.bIsRemoveDependency" data-DependencyType="@opt.iDependencyType">@opt.sOptionName</option>
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                i++;
                                                                                                                            }
                                                                                                                        }
                                                                                                                    </select>
                                                                                                                    @if (!string.IsNullOrEmpty(Chosen) && Chosen.ToLower() == "yes")
                                                                                                                    {
                                                                                                                        <script>
                                                                                         $('#select-@FieldOrigin.ID').addClass('chosen', function () { $('.chosen').chosen(); });
                                                                                                                        </script>
                                                                                                                    }

                                                                                                                    @if (!string.IsNullOrEmpty(FieldOrigin.sFunctionScript))
                                                                                                                    {
                                                                                                                        <script>
                                                                                                        var iPolicyTimeDuration = '@iPolicyDuration.oResult';
                                                                                                        var sGUID = '@Model.sGUID';
                                                                                                         $('.LayoutCode_@Model.sGUID').find("#Mask-@FieldOrigin.sName");
                                                                                   $(document.body).on('change','input[name="@FieldOrigin.sName"]',function () {
                                                                                       debugger
                                                                                        @*@Html.Raw(FieldOrigin.sFunctionScript);*@
                                                                                   })
                                                                                                                            $(document.body).on('change', '.one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_")', function () {
                                                                                       debugger
                                                                                        @Html.Raw(FieldOrigin.sFunctionScript);
                                                                                    })
                                                                                 $(document.body).on('keyup','input[name="@FieldOrigin.sName"]',function () {
                                                                                        debugger
                                                                                        @*@Html.Raw(FieldOrigin.sFunctionScript);*@
                                                                                 })

                                                                                                                        </script>
                                                                                                                    }
                                                                                                                    <script>
                                                                                                    if('@Field.Value.sValue' == null ||'@Field.Value.sValue' == ''){
                                                                                                        if('@bIsSelect' == 'True'){
                                                                                                            $('#select-@FieldOrigin.ID').val('');
                                                                                                        }
                                                                                                    }
                                                                                                                    </script>

                                                                                                                    <span class="select_wrapper_caret glyphicon glyphicon-chevron-down"></span>
                                                                                                                </div>
                                                                                                            }
                                                                                                        }

                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                            else if (!string.IsNullOrEmpty(FieldOrigin.DataType.sName) && FieldOrigin.DataType.sName.ToLower() == "string" || FieldOrigin.DataType.sName.ToLower() == "email" || FieldOrigin.DataType.sName.ToLower() == "MobileNumber".ToLower() || FieldOrigin.DataType.sName.ToLower() == "Text Area".ToLower())
                                                                                            {
                                                                                                if (FieldOrigin.iValidationType == 10)
                                                                                                {
                                                                                                    if (!string.IsNullOrEmpty(FieldOrigin.sDefaultValue))
                                                                                                    {
                                                                                                        <input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" value="@FieldOrigin.sDefaultValue" onkeyup="fncValidateField(this, '@Field.Value.FKiFieldDefinitionID', '@StepDef.ID')" disabled="@FieldOrigin.bIsDisable" @DisableLockStage />
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                        <input type="text" name="@FieldOrigin.sName" id="Field-@FieldOrigin.ID" placeholder="@FieldOrigin.sPlaceHolder" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_") @FieldOrigin.XIGUID-@Model.sGUID" value="@Field.Value.sValue" onkeyup="fncValidateField(this, '@Field.Value.FKiFieldDefinitionID', '@StepDef.ID')" disabled="@FieldOrigin.bIsDisable" data-Merge="@sMergeType" data-MergeValue="@sMergeValue" @DisableLockStage />
                                                                                                    }
                                                                                                    if (FieldOrigin.bIsDisable)
                                                                                                    {
                                                                                                        <input type="hidden" name="@FieldOrigin.sName" value="@Field.Value.sValue" data-Merge="@sMergeType" data-MergeValue="@sMergeValue" />
                                                                                                    }
                                                                                                }
                                                                                                else if (FieldOrigin.iValidationType == 20)
                                                                                                {
                                                                                                    if (!string.IsNullOrEmpty(FieldOrigin.sDefaultValue))
                                                                                                    {
                                                                                                        <input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" value="@FieldOrigin.sDefaultValue" onchange="fncValidateField(this, '@Field.Value.FKiFieldDefinitionID', '@StepDef.ID')" disabled="@FieldOrigin.bIsDisable" @DisableLockStage />
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                        <input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" value="@Field.Value.sValue" onchange="fncValidateField(this, '@Field.Value.FKiFieldDefinitionID', '@StepDef.ID')" disabled="@FieldOrigin.bIsDisable" data-Merge="@sMergeType" data-MergeValue="@sMergeValue" @DisableLockStage />
                                                                                                    }

                                                                                                    if (FieldOrigin.bIsDisable)
                                                                                                    {
                                                                                                        <input type="hidden" name="@FieldOrigin.sName" value="@Field.Value.sValue" data-Merge="@sMergeType" data-MergeValue="@sMergeValue" />
                                                                                                    }
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                    if (FieldOrigin.DataType.sName.ToLower() == "Text Area".ToLower())
                                                                                                    {
                                                                                                        if (FieldOrigin.bIsDependency)
                                                                                                        {
                                                                                                            <input type="hidden" value="@FieldOrigin.sFKiOrginIDs" id="Field-@FieldOrigin.ID" @DisableLockStage>
                                                                                                            string strEvent = string.Empty;

                                                                                                            if (!string.IsNullOrEmpty(FieldOrigin.sEventHandler) && FieldOrigin.sEventHandler.Contains("="))
                                                                                                            {
                                                                                                                var oEventHandler = FieldOrigin.sEventHandler.Split(',');
                                                                                                                foreach (var sEventHandler in oEventHandler)
                                                                                                                {
                                                                                                                    var sEvents = sEventHandler.Split('=');
                                                                                                                    if (sEvents[0] == "onload")
                                                                                                                    {
                                                                                                                        sFieldID = "Field-" + @StepDef.ID + "-" + @FieldOrigin.ID;
                                                                                                                        sFieldOriginIds = @FieldOrigin.sFKiOrginIDs;
                                                                                                                        sFieldValue = Field.Value.sValue;
                                                                                                                    }
                                                                                                                    strEvent = strEvent + " " + sEvents[0] + "=" + sEvents[1] + "(this,'" + @Field.Value.sValue + "')";
                                                                                                                }
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                                strEvent = "onchange =fncGetDependency(this) onload = fncGetDependency(this)";
                                                                                                            }
                                                                                                            <div id="ParentOriginID_@FieldOrigin.ID" hidden="hidden"></div>
                                                                                                            <div id="ParentOriginIDValue_@FieldOrigin.ID" hidden="hidden"></div>
                                                                                                            if (!string.IsNullOrEmpty(FieldOrigin.sDefaultValue))
                                                                                                            {
                                                                                                                <textarea type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" value="@FieldOrigin.sDefaultValue" disabled="@FieldOrigin.bIsDisable" data-Merge="@sMergeType" data-MergeValue="@sMergeValue" @DisableLockStage>@FieldOrigin.sDefaultValue</textarea>
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                                <textarea type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" value="@Field.Value.sValue" disabled="@FieldOrigin.bIsDisable" @strEvent id="Field-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID" data-Merge="@sMergeType" data-MergeValue="@sMergeValue" @DisableLockStage>@Field.Value.sValue</textarea>
                                                                                                            }
                                                                                                        }
                                                                                                        else if (!string.IsNullOrEmpty(FieldOrigin.sDefaultValue))
                                                                                                        {
                                                                                                            <textarea type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" value="@FieldOrigin.sDefaultValue" disabled="@FieldOrigin.bIsDisable" data-Merge="@sMergeType" data-MergeValue="@sMergeValue" @DisableLockStage>@FieldOrigin.sDefaultValue</textarea>
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                            <textarea type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" value="@Field.Value.sValue" disabled="@FieldOrigin.bIsDisable" data-Merge="@sMergeType" data-MergeValue="@sMergeValue" @DisableLockStage>@Field.Value.sValue</textarea>
                                                                                                        }
                                                                                                        if (FieldOrigin.bIsDisable)
                                                                                                        {
                                                                                                            <textarea type="hidden" name="@FieldOrigin.sName" value="@Field.Value.sValue" data-Merge="@sMergeType" data-MergeValue="@sMergeValue" @DisableLockStage> @Field.Value.sValue</textarea>
                                                                                                        }
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                        if (FieldOrigin.bIsUpperCase)
                                                                                                        {
                                                                                                            <input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" value="@Field.Value.sValue" disabled="@FieldOrigin.bIsDisable" onkeyup="fncToUpperCase(this)" data-Merge="@sMergeType" data-MergeValue="@sMergeValue" @DisableLockStage />
                                                                                                        }
                                                                                                        else if (FieldOrigin.bIsLowerCase)
                                                                                                        {
                                                                                                            <input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" value="@Field.Value.sValue" disabled="@FieldOrigin.bIsDisable" onkeyup="fncToLowerCase(this)" data-Merge="@sMergeType" data-MergeValue="@sMergeValue" @DisableLockStage />
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                            <input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_") @FieldOrigin.XIGUID-@Model.sGUID" value="@Field.Value.sValue" disabled="@FieldOrigin.bIsDisable" @DisableLockStage />
                                                                                                        }
                                                                                                        if (FieldOrigin.bIsDisable)
                                                                                                        {
                                                                                                            <input type="hidden" name="@FieldOrigin.sName" value="@Field.Value.sValue" data-Merge="@sMergeType" data-MergeValue="@sMergeValue" />
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }

                                                                                            else if (FieldOrigin.DataType.sName.ToLower() == "PostCodeValid".ToLower())
                                                                                            {
                                                                                                @*<input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control" value="@Field.Value.sValue" />*@
                                                                                                <input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" value="@Field.Value.sValue" onkeyup="fncLoadPostCode(this, '@Model.sGUID','@FieldOrigin.sCode')" autocomplete="off" data-Merge="@sMergeType" data-MergeValue="@sMergeValue" @DisableLockStage />
                                                                                                <div class="addresses" style="display:none;"></div>
                                                                                            }
                                                                                            else if (FieldOrigin.DataType.sName.ToLower() == "PostCode".ToLower())
                                                                                            {
                                                                                                <input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" value="@Field.Value.sValue" style="text-transform: uppercase;" data-Merge="@sMergeType" data-MergeValue="@sMergeValue" @DisableLockStage />
                                                                                            }
                                                                                            else if (FieldOrigin.DataType.sName.ToLower() == "date")
                                                                                            {
                                                                                                FieldOrigin.sMinResolvedValue = FieldOrigin.sMinResolvedValue;
                                                                                                FieldOrigin.sMaxResolvedValue = FieldOrigin.sMaxResolvedValue;
                                                                                                var strEvent = "";
                                                                                                if (FieldOrigin.bIsDependency)
                                                                                                {
                                                                                                    <input type="hidden" value="@FieldOrigin.sFKiOrginIDs" id="Field-@FieldOrigin.ID" />
                                                                                                    strEvent = "onchange =fncGetDependency(this," + FieldOrigin.ID + ")";
                                                                                                }
                                                                                                if (string.IsNullOrEmpty(Field.Value.sValue) && !string.IsNullOrEmpty(FieldOrigin.sDefaultDate))
                                                                                                {
                                                                                                    <input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_") Txtbx-DATETIME_@FieldOrigin.ID @FieldOrigin.XIGUID-@Model.sGUID" value="@FieldOrigin.sDefaultDate" disabled="@FieldOrigin.bIsDisable" readonly="readonly" @DisableLockStage @strEvent />
                                                                                                    if (FieldOrigin.bIsDisable)
                                                                                                    {
                                                                                                        <input type="hidden" name="@FieldOrigin.sName" value="@Field.Value.sValue" data-Merge="@sMergeType" data-MergeValue="@sMergeValue" />
                                                                                                    }
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                    strEvent = "";
                                                                                                    if (FieldOrigin.bIsDependency)
                                                                                                    {

                                                                                                        strEvent = string.Empty;
                                                                                                        <input type="hidden" value="@FieldOrigin.sFKiOrginIDs" id="Field-@FieldOrigin.ID">
                                                                                                        if (!string.IsNullOrEmpty(FieldOrigin.sEventHandler) && FieldOrigin.sEventHandler.Contains("="))
                                                                                                        {
                                                                                                            var oEventHandler = FieldOrigin.sEventHandler.Split(',');
                                                                                                            foreach (var sEventHandler in oEventHandler)
                                                                                                            {
                                                                                                                var sEvents = sEventHandler.Split('=');
                                                                                                                if (sEvents[0] == "onload")
                                                                                                                {
                                                                                                                    sFieldID = "Field-" + StepDef.ID + "-" + FieldOrigin.ID;
                                                                                                                    sFieldOriginIds = FieldOrigin.sFKiOrginIDs;
                                                                                                                    sFieldValue = Field.Value.sValue;
                                                                                                                    if (sEvents[1] == "AgeCalculation")
                                                                                                                    {
                                                                                                                        <script>$(document).ready(function () { AgeCalculation($(this), '@FieldOrigin.XIGUID.ToString().ToLower()', '@FieldOrigin.sDependentFieldIDs.ToString().ToLower()',null, "@Field.Value.sValue", "@Model.sGUID" ) });</script>
                                                                                                                        @*<script>$(document).ready(function () { $(document.body).on('load', '#Mask-@FieldOrigin.sName-@Model.sGUID', function () { AgeCalculation(this, '@FieldOrigin.XIGUID.ToString().ToLower()', '@FieldOrigin.sDependentFieldIDs.ToString().ToLower()') })});</script>*@
                                                                                                                    }
                                                                                                                }
                                                                                                                strEvent = strEvent + " " + sEvents[0] + "=" + sEvents[1] + "(this,'" + FieldOrigin.XIGUID.ToString().ToLower() + "','" + FieldOrigin.sDependentFieldIDs.ToString().ToLower() + "')";
                                                                                                            }
                                                                                                        }

                                                                                                        else
                                                                                                        { <input type="hidden" value="@FieldOrigin.sFKiOrginIDs" id="Field-@FieldOrigin.ID" />
                                                                                                            strEvent = "onchange =fncGetDependency(this," + FieldOrigin.ID + ")";
                                                                                                        }
                                                                                                    }

                                                                                                    if (FieldOrigin.iDateType == 30)
                                                                                                    {
                                                                                                        // <input data-inputmask-alias="dd/mm/yyyy" data-inputtype="mask" id="@FieldOrigin.sName" placeholder="dd/mm/yyyy" class="form-control Txtbx-DATETIME_@FieldOrigin.ID datemask" />
                                                                                                        <div class="control-label">
                                                                                                            <div class="mainDate">
                                                                                                                <input type="text" value="@Field.Value.sValue" name="@FieldOrigin.sName" class="form-control" @*Txtbx-DATETIME_@FieldOrigin.ID*@ style="display: none" />
                                                                                                                <input type="number" class="myField" maxlength="2" placeholder="DD" id="@FieldOrigin.sName-day" autocomplete="off" onchange="fncBindDate('@FieldOrigin.sName')">/
                                                                                                                <input type="number" class="myField" maxlength="2" placeholder="MM" id="@FieldOrigin.sName-month" autocomplete="off" onchange="fncBindDate('@FieldOrigin.sName')">/
                                                                                                                <input type="number" class="myField" maxlength="4" placeholder="YYYY" id="@FieldOrigin.sName-year" autocomplete="off" onchange="fncBindDate('@FieldOrigin.sName')">
                                                                                                            </div>
                                                                                                        </div>
                                                                                                        <script>
                                                                                                            $(".myField").keyup(function () {
                                                                                                                if (this.value.length == this.maxLength) {
                                                                                                                    $(this).next('.myField').focus();
                                                                                                                }
                                                                                                            });
                                                                                                            function fncBindDate(sFieldName) {
                                                                                                                debugger;
                                                                                                                var day = $('#' + sFieldName + '-day').val();
                                                                                                                var month = $('#' + sFieldName + '-month').val();
                                                                                                                var year = $('#' + sFieldName + '-year').val();
                                                                                                                var obj = new Date(year, month - 1, day);
                                                                                                                var msg = obj && (obj.getMonth() + 1) == month
                                                                                                                var IsValidyr = obj && obj.getFullYear() == year
                                                                                                                //if validation is successfull then in returns boolean value
                                                                                                                if (msg == true && IsValidyr == true) {
                                                                                                                    // change month number to month name
                                                                                                                    month = obj.toLocaleString('default', { month: 'short' });
                                                                                                                    var Fulldate = day + '-' + month + '-' + year;
                                                                                                                }

                                                                                                                if (Fulldate != null && Fulldate != "") {
                                                                                                                    $('[name=' + sFieldName + ']').val(Fulldate);
                                                                                                                }
                                                                                                                else {
                                                                                                                    $('[name=' + sFieldName + ']').val('');
                                                                                                                }
                                                                                                                //var obj = new Date(year, month, day);
                                                                                                                //if (obj) {
                                                                                                                //    $('[name=' + sFieldName+']').val(day + "/" + month + "/" + year);
                                                                                                                //}
                                                                                                            }
                                                                                                        </script>

                                                                                                    }
                                                                                                    else if (FieldOrigin.iDateType == 20)
                                                                                                    {
                                                                                                        <script>
                                                                                @if (string.IsNullOrEmpty(FieldOrigin.sInputMaskDateFormat))
                                                                                {
                                                                                    FieldOrigin.sInputMaskDateFormat = "dd/mm/yyyy";
                                                                                }
                                                                                                        </script>
                                                                                                        <div class="col-sm-3 control-label">
                                                                                                            @*@{var sid = dGUID + "-" + v + "-Value"; var sclass = dGUID + "-" + v + "-" + "datefield1 form-control"; }*@
                                                                                                            <input data-inputmask-alias='@FieldOrigin.sInputMaskDateFormat' data-inputmask-inputformat='@FieldOrigin.sInputMaskDateFormat' data-inputtype="mask" name="@FieldOrigin.sName" class="form-control Txtbx-DATE_@FieldOrigin.ID datemask @FieldOrigin.XIGUID-@Model.sGUID" id="Mask-@FieldOrigin.sName-@Model.sGUID" placeholder="@FieldOrigin.sInputMaskDateFormat" value="@Field.Value.sValue" @strEvent />
                                                                                                        </div>
                                                                                                        if (FieldOrigin.bIsPastDateDisable == true)
                                                                                                        {
                                                                                                            <script>
                                                                                        //$('.LayoutCode_' + sGUID).find('.datemask').datepicker({
                                                                                    $('.LayoutCode_@Model.sGUID').find("#Mask-@FieldOrigin.sName-@Model.sGUID").datepicker({

                                                                                        dateFormat: "@FieldOrigin.sInputMaskDateFormat",//"dd/mm/yy",
                                                                                        changeMonth: true,
                                                                                        changeYear: true,
                                                                                        inline: true,
                                                                                        minDate: "@FieldOrigin.bIsPastDateDisable",
                                                                                        yearRange: "1920:2030"
                                                                                    });
                                                                             $('.LayoutCode_@Model.sGUID').find("#Mask-@FieldOrigin.sName-@Model.sGUID").on({
                                                                                        keydown: function (value) {
                                                                                            var curDate = $(this).datepicker("getDate");
                                                                                            var curDate = new Date();
                                                                                            var valueEntered = $(this).val();
                                                                                            var newEnter = valueEntered.split("/");
                                                                                            newEnter = newEnter[1] + "/" + newEnter[0] + "/" + newEnter[2];
                                                                                            newEnter = new Date(newEnter);
                                                                                            curDate.setHours(0, 0, 0, 0);
                                                                                            newEnter.setHours(0, 0, 0, 0);
                                                                                            if (newEnter < curDate) {

                                                                                                $(this).datepicker("setDate", curDate);
                                                                                            }
                                                                                        },
                                                                                 mouseleave: function (value) {
                                                                                     var curDate = $(this).datepicker("getDate");
                                                                                     var curDate = new Date();
                                                                                     var valueEntered = $(this).val();
                                                                                     var newEnter = valueEntered.split("/");
                                                                                     newEnter = newEnter[1] + "/" + newEnter[0] + "/" + newEnter[2];
                                                                                     newEnter = new Date(newEnter);
                                                                                     curDate.setHours(0, 0, 0, 0);
                                                                                     newEnter.setHours(0, 0, 0, 0);
                                                                                     var yearfield = valueEntered.split("/")[2];
                                                                                     if (newEnter < curDate) {

                                                                                         $(this).datepicker("setDate", curDate);
                                                                                     }
                                                                                     if (yearfield != undefined) {
                                                                                         if (yearfield == parseInt(yearfield)) {
                                                                                         }
                                                                                         else {
                                                                                             $(this).datepicker("setDate", curDate);
                                                                                         }
                                                                                     }
                                                                                 }
                                                                                        });
                                        //Nikhitha K


                                                                                                                                                $('.LayoutCode_@Model.sGUID').find("#Mask-@FieldOrigin.sName-@Model.sGUID").datepicker({
                                                                                                                                                    changeMonth: true,
                                                                                                                                                    changeYear: true,
                                                                                                                                                    inline: true,
                                                                                                                                                    yearRange: '1920:2030',
                                                                                                                                                    dateFormat: 'dd-M-yy',
                                                                                                                                                    onSelect: function (date) {
                                                                                                                                                        debugger;
                                                                                                                                                        var date2 = $('.LayoutCode_@Model.sGUID').find('.Txtbx-DATE_@FieldOrigin.ID').datepicker('getDate');
                                                                                                                                                        if (date2 != null) {
                                                                                                                                                            date2.setDate(date2.getDate() + 1);
                                                                                                                                                        }
                                                                                                                                                        //$('.Txtbx-DATE_@FieldOrigin.ID').datepicker('setDate', minDate);
                                                                                                                                                        //$('.Txtbx-DATE_@FieldOrigin.ID').datepicker('option', 'minDate', date2);
                                                                                                                                                    }
                                                                                                                                                });



                                                                                                            </script>
                                                                                                        }
                                                                                                        if (FieldOrigin.bIsFutureDateDisable == true)
                                                                                                        {
                                                                                                            <script>
                                                                                        //$('.LayoutCode_' + sGUID).find('.datemask').datepicker({
                                                                                    $('.LayoutCode_@Model.sGUID').find("#Mask-@FieldOrigin.sName-@Model.sGUID").datepicker({

                                                                                        dateFormat: "@FieldOrigin.sInputMaskDateFormat",//"dd/mm/yy",
                                                                                        changeMonth: true,
                                                                                        changeYear: true,
                                                                                        inline: true,
                                                                                        maxDate: "@FieldOrigin.bIsFutureDateDisable",
                                                                                        yearRange: "1920:2030"
                                                                                    });
                                                                                    $('.LayoutCode_@Model.sGUID').find("#Mask-@FieldOrigin.sName-@Model.sGUID").on({
                                                                                        keydown: function (value) {
                                                                                            var curDate = $(this).datepicker("getDate");
                                                                                            var curDate = new Date();
                                                                                            var valueEntered = $(this).val();
                                                                                            var newEnter = valueEntered.split("/");
                                                                                            newEnter = newEnter[1] + "/" + newEnter[0] + "/" + newEnter[2];
                                                                                            newEnter = new Date(newEnter);
                                                                                            curDate.setHours(0, 0, 0, 0);
                                                                                            newEnter.setHours(0, 0, 0, 0);
                                                                                            if (curDate < newEnter) {

                                                                                                $(this).datepicker("setDate", curDate);
                                                                                            }
                                                                                        },
                                                                                        mouseleave: function (value) {
                                                                                            var curDate = $(this).datepicker("getDate");
                                                                                            var curDate = new Date();
                                                                                            var valueEntered = $(this).val();
                                                                                            var newEnter = valueEntered.split("/");
                                                                                            newEnter = newEnter[1] + "/" + newEnter[0] + "/" + newEnter[2];
                                                                                            newEnter = new Date(newEnter);
                                                                                            curDate.setHours(0, 0, 0, 0);
                                                                                            newEnter.setHours(0, 0, 0, 0);
                                                                                            var yearfield = valueEntered.split("/")[2];
                                                                                            if (curDate < newEnter) {

                                                                                                $(this).datepicker("setDate", curDate);
                                                                                            }
                                                                                            if (yearfield != undefined) {
                                                                                                if (yearfield == parseInt(yearfield)) {
                                                                                                }
                                                                                                else {
                                                                                                    $(this).datepicker("setDate", curDate);
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                        });
                                        //Nikhitha K


                                                                                                                                                $('.LayoutCode_@Model.sGUID').find("#Mask-@FieldOrigin.sName-@Model.sGUID").datepicker({
                                                                                                                                                    changeMonth: true,
                                                                                                                                                    changeYear: true,
                                                                                                                                                    inline: true,
                                                                                                                                                    yearRange: '1920:2030',
                                                                                                                                                    dateFormat: 'dd-M-yy',
                                                                                                                                                    onSelect: function (date) {
                                                                                                                                                        debugger;
                                                                                                                                                        var date2 = $('.LayoutCode_@Model.sGUID').find('.Txtbx-DATE_@FieldOrigin.ID').datepicker('getDate');
                                                                                                                                                        if (date2 != null) {
                                                                                                                                                            date2.setDate(date2.getDate() + 1);
                                                                                                                                                        }
                                                                                                                                                        //$('.Txtbx-DATE_@FieldOrigin.ID').datepicker('setDate', minDate);
                                                                                                                                                        //$('.Txtbx-DATE_@FieldOrigin.ID').datepicker('option', 'minDate', date2);
                                                                                                                                                    }
                                                                                                                                                });



                                                                                                            </script>
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                            <script>
                                                                                        //$('.LayoutCode_' + sGUID).find('.datemask').datepicker({
                                                                                        $('.LayoutCode_@Model.sGUID').find("#Mask-@FieldOrigin.sName-@Model.sGUID").datepicker({

                                            dateFormat: "@FieldOrigin.sInputMaskDateFormat",//"dd/mm/yy",
                                            changeMonth: true,
                                            changeYear: true,
                                            inline: true,
                                            yearRange: "1920:2030"
                                                                                        });
                                                                    $('.LayoutCode_@Model.sGUID').find("#Mask-@FieldOrigin.sName-@Model.sGUID").on({
                                                                        mouseleave: function (value) {
                                                                            var curDate = $(this).datepicker("getDate");
                                                                            var curDate = new Date();
                                                                            var valueEntered = $(this).val();
                                                                            var newEnter = valueEntered.split("/");
                                                                            newEnter = newEnter[1] + "/" + newEnter[0] + "/" + newEnter[2];
                                                                            newEnter = new Date(newEnter);
                                                                            curDate.setHours(0, 0, 0, 0);
                                                                            newEnter.setHours(0, 0, 0, 0);
                                                                            var yearfield = valueEntered.split("/")[2];
                                                                            if (yearfield != undefined) {
                                                                                if (yearfield == parseInt(yearfield)) {
                                                                                }
                                                                                else {
                                                                                    $(this).datepicker("setDate", curDate);
                                                                                }
                                                                            }
                                                                        }
                                                                    });
                                        //Nikhitha K


                                                                                                                                                $('.LayoutCode_@Model.sGUID').find("#Mask-@FieldOrigin.sName-@Model.sGUID").datepicker({
                                                                                                                                                    changeMonth: true,
                                                                                                                                                    changeYear: true,
                                                                                                                                                    inline: true,
                                                                                                                                                    yearRange: '1920:2030',
                                                                                                                                                    dateFormat: 'dd-M-yy',
                                                                                                                                                    onSelect: function (date) {
                                                                                                                                                        debugger;
                                                                                                                                                        var date2 = $('.LayoutCode_@Model.sGUID').find('.Txtbx-DATE_@FieldOrigin.ID').datepicker('getDate');
                                                                                                                                                        if (date2 != null) {
                                                                                                                                                            date2.setDate(date2.getDate() + 1);
                                                                                                                                                        }
                                                                                                                                                        //$('.Txtbx-DATE_@FieldOrigin.ID').datepicker('setDate', minDate);
                                                                                                                                                        //$('.Txtbx-DATE_@FieldOrigin.ID').datepicker('option', 'minDate', date2);
                                                                                                                                                    }
                                                                                                                                                });



                                                                                                            </script>
                                                                                                        }
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                        <input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control Txtbx-DATETIME_@FieldOrigin.ID" value="@Field.Value.sValue" disabled="@FieldOrigin.bIsDisable" readonly="readonly" data-Merge="@sMergeType" data-MergeValue="@sMergeValue" @DisableLockStage @strEvent />
                                                                                                        <script>
                                                                                        $('.LayoutCode_' + sGUID).find('.Txtbx-DATETIME_@FieldOrigin.ID').datepicker({
                                                                                    changeMonth: true,
                                                                                    changeYear: true,
                                                                                    inline: true,
                                                                                    yearRange: '1920:2030',
                                                                                    dateFormat: 'dd-M-yy',
                                                                                    minDate: new Date('@FieldOrigin.sMinResolvedValue'),
                                                                                    maxDate: new Date('@FieldOrigin.sMaxResolvedValue'),
                                                                                });
                                                                                                        </script>
                                                                                                    }
                                                                                                    if (FieldOrigin.bIsDisable)
                                                                                                    {
                                                                                                        <input type="hidden" name="@FieldOrigin.sName" value="@Field.Value.sValue" data-Merge="@sMergeType" data-MergeValue="@sMergeValue" />
                                                                                                    }
                                                                                                }
                                                                                                if (FieldOrigin.bIsFieldMerge)
                                                                                                {
                                                                                                    var FldDef = SecDef.FieldDefs.Values.Where(m => m.FKiXIFieldOriginID == FieldOrigin.iMergeFieldID).FirstOrDefault();
                                                                                                    var depI = oSecI.Value.XIValues.Where(m => m.Value.FKiFieldOriginID == FieldOrigin.iMergeFieldID).FirstOrDefault();
                                                                                                    if (FldDef != null)
                                                                                                    {
                                                                                                        <span class="Ortag"> or </span>
                                                                                                        if (depI.Value != null && (string.IsNullOrEmpty(depI.Value.sValue) || depI.Value.sValue.ToLower() == "false"))
                                                                                                        {
                                                                                                            <label class="label-wrapper lw">
                                                                                                                <input type="checkbox" name="@FldDef.FieldOrigin.sName" data-name="@FldDef.FieldOrigin.sName" id="Field-@FieldOrigin.iMergeFieldID" value="@depI.Value.sValue" class="QSCheckboxClass one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" @DisableLockStage />
                                                                                                                <span class="check"></span>@FldDef.FieldOrigin.sDisplayName
                                                                                                            </label>
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                            <label class="label-wrapper lw">
                                                                                                                <input type="checkbox" name="@FldDef.FieldOrigin.sName" data-name="@FldDef.FieldOrigin.sName" id="Field-@FieldOrigin.iMergeFieldID" value="@depI.Value.sValue" class="QSCheckboxClass one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" checked @DisableLockStage />
                                                                                                                <span class="check"></span>@FldDef.FieldOrigin.sDisplayName
                                                                                                            </label>
                                                                                                        }
                                                                                                        @*<input type="hidden" name="@FldDef.FieldOrigin.sName" id="Checkbox-@FldDef.FieldOrigin.sName" />*@
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                            else if (FieldOrigin.DataType.sName.ToLower() == "time")
                                                                                            {
                                                                                                <input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_") Txtbx-TIME_@FieldOrigin.ID" value="@Field.Value.sValue" disabled="@FieldOrigin.bIsDisable" readonly="readonly" data-Merge="@sMergeType" data-MergeValue="@sMergeValue" @DisableLockStage />
                                                                                                if (FieldOrigin.bIsDisable)
                                                                                                {
                                                                                                    <input type="hidden" name="@FieldOrigin.sName" value="@Field.Value.sValue" data-Merge="@sMergeType" data-MergeValue="@sMergeValue" @DisableLockStage />
                                                                                                }
                                                                                                <script>
                                                                                $('.Txtbx-TIME_@FieldOrigin.ID').timepicker({
                                                                                    timeFormat: 'HH:mm:ss',
                                                                                    showMeridian: false
                                                                                });
                                                                                                </script>
                                                                                            }
                                                                                            else if (FieldOrigin.DataType.sName.ToLower() == "datetime")
                                                                                            {
                                                                                                FieldOrigin.sMinResolvedValue = FieldOrigin.sMinResolvedValue;
                                                                                                FieldOrigin.sMaxResolvedValue = FieldOrigin.sMaxResolvedValue;
                                                                                                <input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_") Txtbx-DATETIMEPicker_@FieldOrigin.ID" value="@Field.Value.sValue" data-Merge="@sMergeType" data-MergeValue="@sMergeValue" @DisableLockStage />
                                                                                                <script>
                                                                                $('.Txtbx-DATETIMEPicker_@FieldOrigin.ID').datetimepicker({
                                                                                    //changeMonth: true,
                                                                                    language: 'pt-BR',
                                                                                    //changeYear: true,
                                                                                    //inline: true,
                                                                                    //yearRange: '1920:2030',
                                                                                    format: 'dd-M-yyyy hh:ii',
                                                                                    autoclose: true,
                                                                                    startDate: new Date('@FieldOrigin.sMinResolvedValue'),
                                                                                    endDate: new Date('@FieldOrigin.sMaxResolvedValue'),
                                                                                });
                                                                                                </script>
                                                                                            }
                                                                                            else if (FieldOrigin.DataType.sName.ToLower() == "boolean")
                                                                                            {
                                                                                                <label class="label-wrapper">
                                                                                                    @if (!string.IsNullOrEmpty(Field.Value.sValue) && (Field.Value.sValue.ToLower() == "on" || Field.Value.sValue.ToLower() == "true"))
                                                                                                    {
                                                                                                        <input type="checkbox" class="one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" name="@FieldOrigin.sName" value="@Field.Value.sValue" checked @DisableLockStage />
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                        <input type="checkbox" class="one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" name="@FieldOrigin.sName" value="@Field.Value.sValue" @DisableLockStage />
                                                                                                    }
                                                                                                    <span class="check checkred"></span>
                                                                                                </label>
                                                                                            }
                                                                                            else if (FieldOrigin.DataType.sName.ToLower() == "password" || FieldOrigin.DataType.sName.ToLower() == "forgotpassword")
                                                                                            {
                                                                                                <input type="password" name="@FieldOrigin.sName" value="@Field.Value.sValue" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_") @FieldOrigin.sName" @DisableLockStage />
                                                                                            }
                                                                                            else if (FieldOrigin.DataType.sName.ToLower() == "currency".ToLower())
                                                                                            {
                                                                                                <div class="@sFieldfomatPos">
                                                                                                    @if (!string.IsNullOrEmpty(FieldOrigin.sFormat))
                                                                                                    {
                                                                                                        <span class="" id="basic-addon1">@FieldOrigin.sFormat</span>
                                                                                                    }
                                                                                                    <input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" value="@Field.Value.sValue" aria-describedby="basic-addon1" @DisableLockStage />
                                                                                                </div>
                                                                                            }
                                                                                            else if (FieldOrigin.DataType.sName.ToLower() == "decimalvalid")
                                                                                            {
                                                                                                <input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_") @FieldOrigin.sName @FieldOrigin.XIGUID-@Model.sGUID" value="@Field.Value.sValue" data-id="Calculate-@FieldOrigin.sName" onchange="fncautocomplete(this)" disabled="@FieldOrigin.bIsDisable" data-Merge="@sMergeType" data-MergeValue="@sMergeValue" @DisableLockStage />
                                                                                                if (FieldOrigin.bIsDisable)
                                                                                                {
                                                                                                    <input type="hidden" name="@FieldOrigin.sName" value="@Field.Value.sValue" data-Merge="@sMergeType" data-MergeValue="@sMergeValue" />
                                                                                                }
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                                if (FieldOrigin.bIsUpperCase)
                                                                                                {
                                                                                                    <input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" value="@Field.Value.sValue" disabled="@FieldOrigin.bIsDisable" onkeyup="fncToUpperCase(this)" @DisableLockStage />
                                                                                                }
                                                                                                else if (FieldOrigin.bIsLowerCase)
                                                                                                {
                                                                                                    <input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" value="@Field.Value.sValue" disabled="@FieldOrigin.bIsDisable" onkeyup="fncToLowerCase(this)" @DisableLockStage />
                                                                                                }
                                                                                                else if (FieldOrigin.bIsDependency)
                                                                                                {
                                                                                                    <input type="hidden" value="@FieldOrigin.sFKiOrginIDs" id="Field-@FieldOrigin.ID" @DisableLockStage>
                                                                                                    string strEvent = string.Empty;

                                                                                                    if (!string.IsNullOrEmpty(FieldOrigin.sEventHandler) && FieldOrigin.sEventHandler.Contains("="))
                                                                                                    {
                                                                                                        var oEventHandler = FieldOrigin.sEventHandler.Split(',');
                                                                                                        foreach (var sEventHandler in oEventHandler)
                                                                                                        {
                                                                                                            var sEvents = sEventHandler.Split('=');
                                                                                                            if (sEvents[0] == "onload")
                                                                                                            {
                                                                                                                sFieldID = "Field-" + StepDef.ID + "-" + FieldOrigin.ID;
                                                                                                                sFieldOriginIds = FieldOrigin.sFKiOrginIDs;
                                                                                                                sFieldValue = Field.Value.sValue;
                                                                                                            }
                                                                                                            strEvent = strEvent + " " + sEvents[0] + "=" + sEvents[1] + "(this)";
                                                                                                        }
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                        strEvent = "onchange =fncGetDependency(this) onload = fncGetDependency(this)";
                                                                                                    }
                                                                                                    <input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" id="Field-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" value="@Field.Value.sValue" data-id="Calculate-@FieldOrigin.sName" disabled="@FieldOrigin.bIsDisable" @strEvent data-Merge="@sMergeType" data-MergeValue="@sMergeValue" @DisableLockStage />
                                                                                                }

                                                                                                else if (FieldOrigin.bIsDisable)
                                                                                                {
                                                                                                    <input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" id="Field-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_") @FieldOrigin.XIGUID-@Model.sGUID" value="@Field.Value.sValue" data-id="Calculate-@FieldOrigin.sName" disabled="@FieldOrigin.bIsDisable" data-Merge="@sMergeType" data-MergeValue="@sMergeValue" @DisableLockStage />
                                                                                                    <input type="hidden" name="@FieldOrigin.sName" value="@Field.Value.sValue" class="Field-@FieldOrigin.ID @FieldOrigin.XIGUID-@Model.sGUID" />
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                    if (!string.IsNullOrEmpty(FieldOrigin.sCode))
                                                                                                    {
                                                                                                        if (FieldOrigin.sCode.ToLower() == "date")
                                                                                                        {
                                                                                                            <div class="select-wrapper SwD" style="float:left;margin-right:10px;">
                                                                                                                <select class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" name="@FieldOrigin.sName" id="Field-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID" style="width:120px;" @DisableLockStage>
                                                                                                                    <option value="" disabled selected>Day</option>
                                                                                                                    @for (int k = 1; k <= 31; k++)
                                                                                                                    {
                                                                                                                        if (Field.Value.sValue == k.ToString())
                                                                                                                        {
                                                                                                                            <option value="@k" selected>@k</option>
                                                                                                                        }
                                                                                                                        else
                                                                                                                        {
                                                                                                                            <option value="@k">@k</option>
                                                                                                                        }
                                                                                                                    }
                                                                                                                </select>
                                                                                                                @if (!string.IsNullOrEmpty(Chosen) && Chosen.ToLower() == "yes")
                                                                                                                {
                                                                                                                    <script>
                                                                                         $('#Field-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID').addClass('chosen', function () { $('.chosen').chosen(); });
                                                                                                                    </script>
                                                                                                                }
                                                                                                                <span class="select_wrapper_caret glyphicon glyphicon-chevron-down"></span>
                                                                                                            </div>
                                                                                                        }
                                                                                                        else if (FieldOrigin.sCode.ToLower() == "month")
                                                                                                        {
                                                                                                            var x = 1;
                                                                                                            string[] monthNames = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.MonthNames;
                                                                                                            <div class="select-wrapper SwM" style="float:left;margin-right:10px;">

                                                                                                                <select class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" style="width:140px;" name="@FieldOrigin.sName" id="Field-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID" @DisableLockStage>
                                                                                                                    <option value="" disabled selected>Month</option>
                                                                                                                    @foreach (var mon in monthNames)
                                                                                                                    {
                                                                                                                        if (!string.IsNullOrEmpty(mon))
                                                                                                                        {
                                                                                                                            if (Field.Value.sValue == x.ToString())
                                                                                                                            {
                                                                                                                                <option value="@x" selected>@mon</option>
                                                                                                                            }
                                                                                                                            else
                                                                                                                            {
                                                                                                                                <option value="@x">@mon</option>
                                                                                                                            }

                                                                                                                        }
                                                                                                                        x++;
                                                                                                                    }
                                                                                                                </select>

                                                                                                                @if (!string.IsNullOrEmpty(Chosen) && Chosen.ToLower() == "yes")
                                                                                                                {
                                                                                                                    <script>
                                                                                         $('#Field-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID').addClass('chosen', function () { $('.chosen').chosen(); });
                                                                                                                    </script>
                                                                                                                }
                                                                                                                <span class="select_wrapper_caret glyphicon glyphicon-chevron-down"></span>
                                                                                                            </div>
                                                                                                        }
                                                                                                        else if (FieldOrigin.sCode.ToLower() == "year")
                                                                                                        {
                                                                                                            <div class="select-wrapper SwY" style="float:left;margin-right:10px;">
                                                                                                                <select class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" name="@FieldOrigin.sName" id="Field-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID" style="width:100px;" @DisableLockStage>
                                                                                                                    <option value="" disabled selected>Year</option>
                                                                                                                    @for (int k = currentYear; k >= 1918; k--)
                                                                                                                    {
                                                                                                                        if (Field.Value.sValue == k.ToString())
                                                                                                                        {
                                                                                                                            <option value="@k" selected>@k</option>
                                                                                                                        }
                                                                                                                        else
                                                                                                                        {
                                                                                                                            <option value="@k">@k</option>
                                                                                                                        }
                                                                                                                    }
                                                                                                                </select>

                                                                                                                @if (!string.IsNullOrEmpty(Chosen) && Chosen.ToLower() == "yes")
                                                                                                                {
                                                                                                                    <script>
                                                                                         $('#Field-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID').addClass('chosen', function () { $('.chosen').chosen(); });
                                                                                                                    </script>
                                                                                                                }
                                                                                                                <span class="select_wrapper_caret glyphicon glyphicon-chevron-down"></span>
                                                                                                            </div>
                                                                                                        }
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                        if (!string.IsNullOrEmpty(sFieldfomatPos))
                                                                                                        {
                                                                                                            <div class="@sFieldfomatPos">
                                                                                                                @if (!string.IsNullOrEmpty(FieldOrigin.sFormat))
                                                                                                                {
                                                                                                                    <span class="" id="basic-addon1">@FieldOrigin.sFormat</span>
                                                                                                                }
                                                                                                                <input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" id="Field-@FieldOrigin.ID" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" value="@Field.Value.sValue" data-id="Calculate-@FieldOrigin.sName" data-Merge="@sMergeType" data-MergeValue="@sMergeValue" @DisableLockStage />
                                                                                                            </div>
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                            <input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" id="Field-@FieldOrigin.ID" class="@FieldOrigin.sName-@Model.sGUID form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" value="@Field.Value.sValue" data-id="Calculate-@FieldOrigin.sName" data-Merge="@sMergeType" data-MergeValue="@sMergeValue" @DisableLockStage />
                                                                                                        }
                                                                                                    }
                                                                                                    if (FieldOrigin.bIsFieldDependent)
                                                                                                    {
                                                                                                        var Fields = FieldOrigin.sDependentFieldID;
                                                                                                        if (!string.IsNullOrEmpty(Fields))
                                                                                                        {
                                                                                                            var fkds = Fields.Split(',').ToList();
                                                                                                            foreach (var fld in fkds)
                                                                                                            {
                                                                                                                var fdid = Convert.ToInt32(fld);
                                                                                                                var FldDef = SecDef.FieldDefs.Values.Where(m => m.FKiXIFieldOriginID == fdid).FirstOrDefault();
                                                                                                                if (FldDef != null)
                                                                                                                {

                                                                                                                    var Forgin = FldDef.FieldOrigin;
                                                                                                                    var depI = oSecI.Value.XIValues.Where(m => m.Value.FKiFieldOriginID == fdid).FirstOrDefault();
                                                                                                                    if (Forgin.sCode != null && Forgin.sCode.ToLower() == "date")
                                                                                                                    {
                                                                                                                        <div class="select-wrapper SwD" style="float:left;margin-right:10px;">
                                                                                                                            <select class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" style="width:120px;" name="@Forgin.sName" id="Field-@StepDef.ID-@Forgin.ID" @DisableLockStage>
                                                                                                                                <option value="" disabled selected>Day</option>
                                                                                                                                @for (int k = 1; k <= 31; k++)
                                                                                                                                {
                                                                                                                                    if (depI.Value.sValue == k.ToString())
                                                                                                                                    {
                                                                                                                                        <option value="@k" selected>@k</option>
                                                                                                                                    }
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                        <option value="@k">@k</option>
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            </select>
                                                                                                                            @if (!string.IsNullOrEmpty(Chosen) && Chosen.ToLower() == "yes")
                                                                                                                            {
                                                                                                                                <script>
                                                                                         $('#Field-@StepDef.ID-@Forgin.ID').addClass('chosen', function () { $('.chosen').chosen(); });
                                                                                                                                </script>
                                                                                                                            }
                                                                                                                            <span class="select_wrapper_caret glyphicon glyphicon-chevron-down"></span>
                                                                                                                        </div>
                                                                                                                    }
                                                                                                                    else if (Forgin.sCode != null && Forgin.sCode.ToLower() == "month")
                                                                                                                    {
                                                                                                                        string strEvent = string.Empty;
                                                                                                                        if (Forgin.bIsDependency)
                                                                                                                        {
                                                                                                                            <input type="hidden" value="@Forgin.sFKiOrginIDs" id="Field-@Forgin.ID">
                                                                                                                            if (!string.IsNullOrEmpty(Forgin.sEventHandler) && FieldOrigin.sEventHandler.Contains("="))
                                                                                                                            {
                                                                                                                                var oEventHandler = Forgin.sEventHandler.Split(',');
                                                                                                                                foreach (var sEventHandler in oEventHandler)
                                                                                                                                {
                                                                                                                                    var sEvents = sEventHandler.Split('=');
                                                                                                                                    if (sEvents[0] == "onload")
                                                                                                                                    {
                                                                                                                                        sFieldID = "Field-" + StepDef.ID + "-" + Forgin.ID;
                                                                                                                                        sFieldOriginIds = Forgin.sFKiOrginIDs;
                                                                                                                                        sFieldValue = Field.Value.sValue;
                                                                                                                                    }
                                                                                                                                    strEvent = strEvent + " " + sEvents[0] + "=" + sEvents[1] + "(this)";
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                        var x = 1;
                                                                                                                        string[] monthNames = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.MonthNames;
                                                                                                                        <div class="select-wrapper SwM" style="float:left;margin-right:10px;">
                                                                                                                            <select class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" style="width:140px;" name="@Forgin.sName" id="Field-@StepDef.ID-@Forgin.ID" @strEvent>
                                                                                                                                <option value="" disabled selected>Month</option>
                                                                                                                                @foreach (var mon in monthNames)
                                                                                                                                {
                                                                                                                                    if (!string.IsNullOrEmpty(mon))
                                                                                                                                    {
                                                                                                                                        if (depI.Value != null && depI.Value.sValue == x.ToString())
                                                                                                                                        {
                                                                                                                                            <option value="@x" selected>@mon</option>
                                                                                                                                        }
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                            <option value="@x">@mon</option>
                                                                                                                                        }

                                                                                                                                    }
                                                                                                                                    x++;
                                                                                                                                }
                                                                                                                            </select>
                                                                                                                            @if (!string.IsNullOrEmpty(Chosen) && Chosen.ToLower() == "yes")
                                                                                                                            {
                                                                                                                                <script>
                                                                                         $('#Field-@StepDef.ID-@Forgin.ID').addClass('chosen', function () { $('.chosen').chosen(); });
                                                                                                                                </script>
                                                                                                                            }
                                                                                                                            <span class="select_wrapper_caret glyphicon glyphicon-chevron-down"></span>
                                                                                                                        </div>
                                                                                                                    }
                                                                                                                    else if (Forgin.sCode != null && Forgin.sCode.ToLower() == "year")
                                                                                                                    {
                                                                                                                        string strEvent = string.Empty;
                                                                                                                        if (Forgin.bIsDependency)
                                                                                                                        {
                                                                                                                            <input type="hidden" value="@Forgin.sFKiOrginIDs" id="Field-@Forgin.ID">
                                                                                                                            if (!string.IsNullOrEmpty(Forgin.sEventHandler) && FieldOrigin.sEventHandler.Contains("="))
                                                                                                                            {
                                                                                                                                var oEventHandler = Forgin.sEventHandler.Split(',');
                                                                                                                                foreach (var sEventHandler in oEventHandler)
                                                                                                                                {
                                                                                                                                    var sEvents = sEventHandler.Split('=');
                                                                                                                                    if (sEvents[0] == "onload")
                                                                                                                                    {
                                                                                                                                        sFieldID = "Field-" + StepDef.ID + "-" + Forgin.ID;
                                                                                                                                        sFieldOriginIds = Forgin.sFKiOrginIDs;
                                                                                                                                        sFieldValue = Field.Value.sValue;
                                                                                                                                    }
                                                                                                                                    strEvent = strEvent + " " + sEvents[0] + "=" + sEvents[1] + "(this)";
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                        <div class="select-wrapper SwY" style="float:left;margin-right:10px;">
                                                                                                                            <select class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" style="width:100px;" name="@Forgin.sName" id="Field-@StepDef.ID-@Forgin.ID" @strEvent @DisableLockStage>
                                                                                                                                <option value="" disabled selected>Year</option>
                                                                                                                                @for (int k = currentYear; k >= 1918; k--)
                                                                                                                                {
                                                                                                                                    if (depI.Value != null && depI.Value.sValue == k.ToString())
                                                                                                                                    {
                                                                                                                                        <option value="@k" selected>@k</option>
                                                                                                                                    }
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                        <option value="@k">@k</option>
                                                                                                                                    }

                                                                                                                                }
                                                                                                                            </select>
                                                                                                                            @if (!string.IsNullOrEmpty(Chosen) && Chosen.ToLower() == "yes")
                                                                                                                            {
                                                                                                                                <script>
                                                                                         $('#Field-@StepDef.ID-@Forgin.ID').addClass('chosen', function () { $('.chosen').chosen(); });
                                                                                                                                </script>
                                                                                                                            }
                                                                                                                            <span class="select_wrapper_caret glyphicon glyphicon-chevron-down"></span>
                                                                                                                        </div>
                                                                                                                    }
                                                                                                                    else
                                                                                                                    {
                                                                                                                        <input type="text" name="@Forgin.sName" placeholder="@Forgin.sPlaceHolder" id="Field-@Forgin.ID" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" value="@depI.Value.sValue" data-id="Calculate-@Forgin.sName" @DisableLockStage />
                                                                                                                    }
                                                                                                                    @*<input type="text" name="@Forgin.sName" placeholder="@Forgin.sPlaceHolder" id="Field-@Forgin.ID" class="form-control" value="@depI.Value.sValue" data-id="Calculate-@Forgin.sName" />*@
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                    if (FieldOrigin.bIsFieldMerge)
                                                                                                    {
                                                                                                        var FldDef = SecDef.FieldDefs.Values.Where(m => m.FKiXIFieldOriginID == FieldOrigin.iMergeFieldID).FirstOrDefault();
                                                                                                        var depI = oSecI.Value.XIValues.Where(m => m.Value.FKiFieldOriginID == FieldOrigin.iMergeFieldID).FirstOrDefault();
                                                                                                        if (FldDef != null)
                                                                                                        {
                                                                                                            <span class="Ortag"> or </span>
                                                                                                            if (depI.Value != null && (string.IsNullOrEmpty(depI.Value.sValue) || depI.Value.sValue.ToLower() == "false"))
                                                                                                            {
                                                                                                                <label class="label-wrapper lw">
                                                                                                                    <input type="checkbox" name="@FldDef.FieldOrigin.sName" data-name="@FldDef.FieldOrigin.sName" id="Field-@FieldOrigin.iMergeFieldID" value="@depI.Value.sValue" class="QSCheckboxClass one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" @DisableLockStage />
                                                                                                                    <span class="check"></span>@FldDef.FieldOrigin.sDisplayName
                                                                                                                </label>
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                                <label class="label-wrapper lw">
                                                                                                                    <input type="checkbox" name="@FldDef.FieldOrigin.sName" data-name="@FldDef.FieldOrigin.sName" id="Field-@FieldOrigin.iMergeFieldID" value="@depI.Value.sValue" class="QSCheckboxClass one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ", "_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ", "_")" checked @DisableLockStage />
                                                                                                                    <span class="check"></span>@FldDef.FieldOrigin.sDisplayName
                                                                                                                </label>
                                                                                                            }
                                                                                                            @*<input type="hidden" name="@FldDef.FieldOrigin.sName" id="Checkbox-@FldDef.FieldOrigin.sName" />*@
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        </div>
                                                                                        @if (SessionManager.UserPreference.InlineAssist == 10)
                                                                                        {
                                                                                            if (!(string.IsNullOrEmpty(FieldOrigin.sAdditionalText)))
                                                                                            {
                                                                                                <p class="helptext-right"><span>@FieldOrigin.sAdditionalText</span></p>
                                                                                            }
                                                                                        }
                                                                                        @if (FieldOrigin.bIsDependency)
                                                                                        {
                                                                                            <div id="DependencyArea"></div>
                                                                                        }
                                                                                    </div>
                                                                                    @*@if (Step.XiPreMessages.Where(x => x.Key.ToLower() == FieldOrigin.sName.ToLower() && x.Value != null && x.Value.Count() > 0).Select(x => x.Value[0]).FirstOrDefault() != null)
                                                                                {
                                                                                <span data-type="ErrorMesg" class="ErrorMsg-@StepDef.ID-@FieldOrigin.ID danger text-error">@Step.XiPreMessages.Where(x => x.Key.ToLower() == FieldOrigin.sName.ToLower()).Select(x => x.Value[0]).FirstOrDefault()</span>
                                                                                }
                                                                                <div class="input-success-error">
                                                                                    <span data-type="ErrorMesg" class="ErrorMsg-@StepDef.ID-@FieldOrigin.ID danger text-error"></span>
                                                                                </div>*@
                                                                                    <button type="button" tabindex="-1" class="helptext-mobile-button btn btn-theme bc-theme fc-white btn-xs">
                                                                                        <i class="fa fa-info"></i>
                                                                                    </button>
                                                                                    <div id="iPolicyDuration" value="@iPolicyDuration.oResult" hidden>@iPolicyDuration.oResult</div>
                                                                                </div>
                                                                            }
                                                                            if (!string.IsNullOrEmpty(FieldOrigin.sFunctionScript) && string.IsNullOrEmpty(FieldOrigin.sEventHandler))
                                                                            {
                                                                                <script>
                                                    var iPolicyTimeDuration = '@iPolicyDuration.oResult';
                                                    var sGUID = '@Model.sGUID';
                                                                @*$(document.body).on('keyup','input[name="@FieldOrigin.sName"]',function () {*@
                                                                                   $(document.body).on('change','#Mask-@FieldOrigin.sName-@Model.sGUID',function () {
                                                                                       debugger
                                                                                        @Html.Raw(FieldOrigin.sFunctionScript);
                                                                                    })
                                                                                 $(document.body).on('keyup','#Mask-@FieldOrigin.sName-@Model.sGUID',function () {
                                                                                        debugger
                                                                                        @Html.Raw(FieldOrigin.sFunctionScript);
                                                                                 })

                                                                            $(document.body).on('change','.@FieldOrigin.sName-@Model.sGUID',function () {
                                                                                       debugger
                                                                                        @Html.Raw(FieldOrigin.sFunctionScript);
                                                                                    })
                                                                                 $(document.body).on('keyup','.@FieldOrigin.sName-@Model.sGUID',function () {
                                                                                        debugger
                                                                                        @Html.Raw(FieldOrigin.sFunctionScript);
                                                                                 })
                                                                                </script>
                                                                            }
                                                                            if (!string.IsNullOrEmpty(FieldOrigin.sFunctionScript) && (!string.IsNullOrEmpty(FieldOrigin.sEventHandler) && FieldOrigin.sEventHandler == "load"))
                                                                            {
                                                                                <script>
                                                                $(document).ready(function () {
                                                                    debugger
                                                                    var iPolicyTimeDuration = '@iPolicyDuration.oResult';
                                                                    @Html.Raw(FieldOrigin.sFunctionScript);
                                                    })
                                                                                </script>
                                                                            }


                                                                        }
                                                                    }
                                                                </form>
                                                                if (StepDef.sCode == "AGEDDEBT" || StepDef.sCode == "AGECREDIT")
                                                                {
                                                                    <button id="btnGenerate" style="color: black;">Generate</button>
                                                                }
                                                            }
                                                        }
                                                        else if (((EnumSemanticsDisplayAs)SecDef.iDisplayAs).ToString() == EnumSemanticsDisplayAs.Html.ToString())
                                                        {
                                                            <div class="form-group m-b-none">
                                                                <div class="info-contentBox">
                                                                    @Html.Raw(SecDef.HTMLContent)
                                                                </div>
                                                            </div>
                                                        }
                                                        else if (((EnumSemanticsDisplayAs)SecDef.iDisplayAs).ToString() == EnumSemanticsDisplayAs.XIComponent.ToString())
                                                        {
                                                            <p id="searchResults" hidden></p>
                                                            <div id="Component-@SecDef.XIGUID" data-type="Component" data-name="Component-@SecDef.XIGUID">


                                                                @{
                                                                    var watch5 = System.Diagnostics.Stopwatch.StartNew();
                                                                    watch5.Start();
                                                                    Html.RenderAction("LoadComponentByID", "XIComponents", new
                                                                    {
                                                                        iXIComponentID = SecDef.iXIComponentIDXIGUID,
                                                                        sGUID = ViewBag.sGUID,
                                                                        nParams = new List<CNV>(),
                                                                        sName = string.Empty,
                                                                        sType = "QSStepSection",
                                                                        ID = SecDef.XIGUID,
                                                                        iInstanceID = oSecI.Value.XIGUID,
                                                                        sContext = string.Empty,
                                                                        iQSIID = Model.XIGUID,
                                                                        bIsStepLock = bIsLock
                                                                    });
                                                                    watch5.Stop();
                                                                    double dTime5 = watch5.ElapsedMilliseconds / 1000.0;
                                                                    @*<h4> LoadComponent by ID time: @dTime5 seconds </h4>*@
                                                                }

                                                            </div>

                                                        }
                                                    </div>
                                                </div>
                                                if (SecDef.QSLinks != null)
                                                {
                                                    foreach (var qslink in SecDef.QSLinks)
                                                    {
                                                        oQSLinks.Add(qslink.Value);
                                                        @*foreach (var link in qslink.Value.XiLink.Values)
                                                    {
                                                        if (link.sType.ToLower() == "button")
                                                        {
                                                            if (link.sRunType != null && link.sRunType.ToLower() == "load")
                                                            {
                                                                <div class="form-btn move-right dynamicbtn">
                                                                    <button type="button" class="btn btn-success" onclick="XILinkLoadJson('@link.FKiXILInkID','@Model.sGUID')">@link.sName</button>
                                                                </div>
                                                            }
                                                            else if (link.sRunType != null && link.sRunType.ToLower() == "saveqs")
                                                            {
                                                                <div class="form-btn move-right dynamicbtn">
                                                                    <button type="button" class="btn btn-success" data-IsLoading="@IsQSLinkLoading" onclick="fncQsSaveAndQSLink(0, 0, 0, '@link.FKiXILInkID','',this)">@link.sName</button>
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <div class="form-btn move-right dynamicbtn">
                                                                    <button type="button" class="btn btn-success" onclick="XIRun('@link.FKiXILInkID', 0, '@ViewBag.sGUID', null, false, 0, '@oQSD.ID')">@link.sName</button>
                                                                </div>
                                                                        }
                                                                    }
                                                                }*@
                                                    }
                                                }
                                            }

                                        }
                                        <script>
                                            $(function () {
                                                $(".quotation_notes #draggable_notes, .quotation_notes_box #draggable_notes").draggable();
                                                $(".quotation_notes .questionset-header, .quotation_notes_box .questionset-header").append("<span class='icon-plus q-notes-toggle'></span>");
                                                $(".q-notes-toggle").nextAll(".q-notes-toggle").remove();
                                                $(".q-notes-toggle").click(function () {
                                                    $(this).parent().toggleClass("note-close");
                                                    $(this).parent().next().toggle();
                                                });
                                            });
                                        </script>
                                    }
                                </div>
                            }
                            else
                            {
                                if (((EnumSemanticsDisplayAs)StepDef.iDisplayAs).ToString() == EnumSemanticsDisplayAs.Fields.ToString())
                                {
                                    if (oStepI.XIValues != null && oStepI.XIValues.Count() > 0)
                                    {
                                        <form class="QSStepForm @FormClass wrap-fullwidth">
                                            @*@FormClass*@
                                            @foreach (var Field in oStepI.XIValues)
                                            {
                                                <div class="form-group highlight--help">
                                                    @{
                                                        var FOrigin = StepDef.FieldDefs.Values.Where(m => m.ID == Field.Value.FKiFieldDefinitionID).Select(m => m.FieldOrigin).FirstOrDefault();
                                                        var FieldOrigin = FOrigin ?? new XIDFieldOrigin();
                                                    }
                                                    <div class="wrap-width clearfix control-block">
                                                        <i class="fa fa-question-circle que-icn"></i>
                                                        <label for="inputEmail" class="gn form-label">@FieldOrigin.sDisplayName</label>
                                                        @if (!(string.IsNullOrEmpty(FieldOrigin.sAdditionalText)))
                                                        {
                                                            <label for="inputEmail" class="gn form-label">@FieldOrigin.sAdditionalText</label>
                                                        }
                                                        <div class="form-input">
                                                            <div class="field-errmsg-@oStepI.FKiQSStepDefinitionID-@FieldOrigin.ID fc-red"></div>
                                                            @if (!string.IsNullOrEmpty(FieldOrigin.sFieldDefaultValue))
                                                            {
                                                                @FieldOrigin.sFieldDefaultValue
                                                            }
                                                            else if (FieldOrigin.bIsOptionList || FieldOrigin.iMasterDataID > 0 || FieldOrigin.FK1ClickID > 0)
                                                            {
                                                                if (FieldOrigin.FK1ClickID > 0)
                                                                {
                                                                    if (FieldOrigin.bIsLargeBO)
                                                                    {
                                                                        if (!string.IsNullOrEmpty(Field.Value.sValue))
                                                                        {
                                                                            <input type="text" class="form-control autocomplete one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ","_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ","_")" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" id="Field-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID" data-value="0" onkeyup="fncgetautocomplete('@FieldOrigin.FK1ClickID', this, event)" @DisableLockStage />
                                                                            <script>fncgetlabeldata(0, '@Field.Value.sValue', 'Field-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID', '@FieldOrigin.FK1ClickID')</script>
                                                                        }
                                                                        else
                                                                        {
                                                                            <input type="text" class="form-control autocomplete one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ","_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ","_")" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" id="Field-@StepDef.ID-@FieldOrigin.ID-@Model.sGUID" data-value="0" onkeyup="fncgetautocomplete('@FieldOrigin.FK1ClickID', this, event)" @DisableLockStage />
                                                                        }
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    if (FieldOrigin.FieldOptionList != null && FieldOrigin.FieldOptionList.Count() > 0)
                                                                    {
                                                                        <select class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ","_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ","_")" name="@FieldOrigin.sName" id="Fields-@FieldOrigin.sName" @DisableLockStage>
                                                                            @foreach (var opt in FieldOrigin.FieldOptionList)
                                                                            {
                                                                                if (!string.IsNullOrEmpty(FieldOrigin.sDefaultValue))
                                                                                {
                                                                                    if (opt.sOptionValue == FieldOrigin.sDefaultValue)
                                                                                    {
                                                                                        <option value="@opt.sOptionValue" selected>@opt.sOptionName</option>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <option value="@opt.sOptionValue">@opt.sOptionName</option>
                                                                                    }
                                                                                }
                                                                                else
                                                                                {
                                                                                    <option value="@opt.sOptionValue">@opt.sOptionName</option>
                                                                                }
                                                                            }
                                                                        </select>
                                                                        if (!string.IsNullOrEmpty(Chosen) && Chosen.ToLower() == "yes")
                                                                        {
                                                                            <script>
                                                                                         $('#Fields-@FieldOrigin.sName').addClass('chosen', function () { $('.chosen').chosen(); });
                                                                            </script>
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            else if (FieldOrigin.DataType.sName.ToLower() == "string")
                                                            {
                                                                if (FieldOrigin.iValidationType == 10)
                                                                {
                                                                    <input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ","_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ","_")" value="@Field.Value.sValue" onkeyup="fncValidateField(this, '@Field.Value.FKiFieldDefinitionID', '@StepDef.ID')" disabled="@FieldOrigin.bIsDisable" @DisableLockStage />
                                                                    if (FieldOrigin.bIsDisable)
                                                                    {
                                                                        <input type="hidden" name="@FieldOrigin.sName" value="@Field.Value.sValue" />
                                                                    }
                                                                }
                                                                else if (FieldOrigin.iValidationType == 20)
                                                                {
                                                                    <input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ","_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ","_")" value="@Field.Value.sValue" onchange="fncValidateField(this, '@Field.Value.FKiFieldDefinitionID', '@StepDef.ID')" disabled="@FieldOrigin.bIsDisable" @DisableLockStage />
                                                                    if (FieldOrigin.bIsDisable)
                                                                    {
                                                                        <input type="hidden" name="@FieldOrigin.sName" value="@Field.Value.sValue" />
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ","_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ","_")" value="@Field.Value.sValue" disabled="@FieldOrigin.bIsDisable" @DisableLockStage />
                                                                    if (FieldOrigin.bIsDisable)
                                                                    {
                                                                        <input type="hidden" name="@FieldOrigin.sName" value="@Field.Value.sValue" />
                                                                    }
                                                                }
                                                            }
                                                            else if (FieldOrigin.DataType.sName.ToLower() == "date")
                                                            {
                                                                FieldOrigin.sMinResolvedValue = FieldOrigin.sMinResolvedValue;
                                                                FieldOrigin.sMaxResolvedValue = FieldOrigin.sMaxResolvedValue;
                                                                var strEvent = "";
                                                                if (FieldOrigin.bIsDependency)
                                                                {
                                                                    <input type="hidden" value="@FieldOrigin.sFKiOrginIDs" id="Field-@FieldOrigin.ID" />
                                                                    strEvent = "onchange =fncGetDependency(this," + FieldOrigin.ID + ")";
                                                                }
                                                                if (FieldOrigin.iDateType == 30)
                                                                {
                                                                    // <input data-inputmask-alias="dd/mm/yyyy" data-inputtype="mask" id="@FieldOrigin.sName" placeholder="dd/mm/yyyy" class="form-control Txtbx-DATETIME_@FieldOrigin.ID datemask" />
                                                                    <div class="control-label">
                                                                        <div class="mainDate">
                                                                            <input type="text" value="" name="@FieldOrigin.sName" class="form-control" @*Txtbx-DATETIME_@FieldOrigin.ID*@ style="display: none" />
                                                                            <input type="number" class="myField" maxlength="2" placeholder="DD" id="@FieldOrigin.sName-day" autocomplete="off" onchange="fncBindDate('@FieldOrigin.sName')">/
                                                                            <input type="number" class="myField" maxlength="2" placeholder="MM" id="@FieldOrigin.sName-month" autocomplete="off" onchange="fncBindDate('@FieldOrigin.sName')">/
                                                                            <input type="number" class="myField" maxlength="4" placeholder="YYYY" id="@FieldOrigin.sName-year" autocomplete="off" onchange="fncBindDate('@FieldOrigin.sName')">
                                                                        </div>
                                                                    </div>


                                                                }
                                                                else if (FieldOrigin.iDateType == 20)
                                                                {
                                                                    <div class="col-sm-3 control-label">
                                                                        @*@{var sid = dGUID + "-" + v + "-Value"; var sclass = dGUID + "-" + v + "-" + "datefield1 form-control"; }*@
                                                                        <input data-inputmask-alias="dd/mm/yyyy" data-inputtype="mask" name="@FieldOrigin.sName" class="form-control Txtbx-DATE_@FieldOrigin.ID datemask" placeholder="dd/mm/yyyy" />
                                                                    </div>
                                                                }
                                                                else
                                                                {
                                                                    <input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control Txtbx-DATETIME_@FieldOrigin.ID" value="@Field.Value.sValue" disabled="@FieldOrigin.bIsDisable" readonly="readonly" @DisableLockStage @strEvent />
                                                                }
                                                                <script>
                                        $('.datemask').datepicker({
                                            dateFormat: "dd/mm/yy",
                                            changeMonth: true,
                                            changeYear: true,
                                            yearRange: "1920:2030"
                                        });
                                        //Nikhitha K
                                        $(".myField").keyup(function () {
                                            if (this.value.length == this.maxLength)
                                            {
                                                $(this).next('.myField').focus();
                                            }
                                        });

                                                                                                                                                $('.Txtbx-DATE_@FieldOrigin.ID').datepicker({
                                                                                                                                                    dateFormat: 'dd-M-yy',
                                                                                                                                                    changeMonth: true,
                                                                                                                                                    changeYear: true,
                                                                                                                                                    yearRange: "1920:2030",
                                                                                                                                                    onSelect: function (date) {
                                                                                                                                                        var date2 = $('.Txtbx-DATE_@FieldOrigin.ID').datepicker('getDate');
                                                                                                                                                        if (date2 != null) {
                                                                                                                                                            date2.setDate(date2.getDate() + 1);
                                                                                                                                                        }
                                                                                                                                                        $('.Txtbx-DATE_@FieldOrigin.ID').datepicker('option', 'minDate', date2);
                                                                                                                                                    }
                                                                                                                                                });


                                    function fncBindDate(sFieldName) {
                                        debugger;
                                        var day = $('#' + sFieldName + '-day').val();
                                        var month = $('#' + sFieldName + '-month').val();
                                        var year = $('#' + sFieldName + '-year').val();
                                        var obj = new Date(year, month - 1, day);
                                        var msg = obj && (obj.getMonth() + 1) == month
                                        var IsValidyr = obj && obj.getFullYear() == year
                                        //if validation is successfull then in returns boolean value
                                        if (msg == true && IsValidyr == true) {
                                            // change month number to month name
                                            month = obj.toLocaleString('default', { month: 'short' });
                                            var Fulldate = day + '-' + month + '-' + year;
                                        }

                                        if (Fulldate != null && Fulldate != "") {
                                            $('[name=' + sFieldName + ']').val(Fulldate);
                                        }
                                        else {
                                            $('[name=' + sFieldName + ']').val('');
                                        }
                                        //var obj = new Date(year, month, day);
                                        //if (obj) {
                                        //    $('[name=' + sFieldName+']').val(day + "/" + month + "/" + year);
                                        //}
                                    }
                                                                </script>
                                                                if (FieldOrigin.bIsDisable)
                                                                {
                                                                    <input type="hidden" name="@FieldOrigin.sName" value="@Field.Value.sValue" />
                                                                }
                                                            }
                                                            else if (FieldOrigin.DataType.sName.ToLower() == "time")
                                                            {
                                                                <input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ","_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ","_") Txtbx-TIME_@FieldOrigin.ID" value="@Field.Value.sValue" disabled="@FieldOrigin.bIsDisable" readonly="readonly" @DisableLockStage />
                                                                if (FieldOrigin.bIsDisable)
                                                                {
                                                                    <input type="hidden" name="@FieldOrigin.sName" value="@Field.Value.sValue" />
                                                                }
                                                                <script>
                                                                                            $('.Txtbx-TIME_@FieldOrigin.ID').timepicker({
                                                                                                timeFormat: 'HH:mm:ss',
                                                                                                showMeridian: false
                                                                                            });
                                                                </script>
                                                            }
                                                            else if (FieldOrigin.DataType.sName.ToLower() == "datetime")
                                                            {
                                                                FieldOrigin.sMinResolvedValue = FieldOrigin.sMinResolvedValue;
                                                                FieldOrigin.sMaxResolvedValue = FieldOrigin.sMaxResolvedValue;
                                                                <input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ","_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ","_") Txtbx-DATETIMEPicker_@FieldOrigin.ID" value="@Field.Value.sValue" @DisableLockStage />
                                                                <script>
                                                                                            $('.Txtbx-DATETIMEPicker_@FieldOrigin.ID').datetimepicker({
                                                                                                //changeMonth: true,
                                                                                                language: 'pt-BR',
                                                                                                //changeYear: true,
                                                                                                //inline: true,
                                                                                                //yearRange: '1920:2030',
                                                                                                format: 'dd-M-yyyy hh:ii',
                                                                                                autoclose: true,
                                                                                                startDate: new Date('@FieldOrigin.sMinResolvedValue'),
                                                                                                endDate: new Date('@FieldOrigin.sMaxResolvedValue'),
                                                                                            });
                                                                </script>
                                                            }
                                                            else if (FieldOrigin.DataType.sName.ToLower() == "boolean")
                                                            {
                                                                <label class="label-wrapper">
                                                                    <input type="checkbox" class="one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ","_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ","_")" name="@FieldOrigin.sName" value="@Field.Value.sValue" @DisableLockStage />
                                                                    <span class="check"></span>
                                                                </label>
                                                            }
                                                            else if (FieldOrigin.DataType.sName.ToLower() == "password" || FieldOrigin.DataType.sName.ToLower() == "forgotpassword")
                                                            {
                                                                <input type="password" name="@FieldOrigin.sName" value="@Field.Value.sValue" @DisableLockStage />
                                                            }
                                                            else if (FieldOrigin.DataType.sName.ToLower() == "currency".ToLower())
                                                            {
                                                                <div class="input-group">
                                                                    <span class="input-group-addon" id="basic-addon1">£</span>
                                                                    <input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ","_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ","_")" value="@Field.Value.sValue" aria-describedby="basic-addon1" @DisableLockStage />
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <input type="text" name="@FieldOrigin.sName" placeholder="@FieldOrigin.sPlaceHolder" class="form-control one-qs-field one-qs-field-id-@FieldOrigin.ID one-qs-field-@FieldOrigin.sName.ToLower().Replace(" ","_") one-qs-field-type-@FieldOrigin.DataType.sName.ToLower().Replace(" ","_")" value="@Field.Value.sValue" disabled="@FieldOrigin.bIsDisable" @DisableLockStage />
                                                                if (FieldOrigin.bIsDisable)
                                                                {
                                                                    <input type="hidden" name="@FieldOrigin.sName" value="@Field.Value.sValue" />
                                                                }
                                                            }
                                                            <div class="form-popover">
                                                                @*<span class="HelpText" id="HelpText-@Step.FKiQSStepDefinitionID-@FieldOrigin.ID" style="display:none;">@FieldOrigin.sDisplayHelp</span>*@<span class="HelpText" id="HelpText-@oStepI.FKiQSStepDefinitionID-@FieldOrigin.ID" style="display:none;"></span><span class="HelpText" id="HelpText-@oStepI.FKiQSStepDefinitionID-@FieldOrigin.ID" style="display:none;"></span><span class="HelpText" id="HelpText-@oStepI.FKiQSStepDefinitionID-@FieldOrigin.ID" style="display:none;"></span><span class="HelpText" id="HelpText-@oStepI.FKiQSStepDefinitionID-@FieldOrigin.ID" style="display:none;"></span>
                                                                <span data-type="ErrorMesg" class="ErrorMsg-@oStepI.FKiQSStepDefinitionID-@FieldOrigin.ID danger text-error"></span>
                                                            </div>
                                                            @*<button type="button" tabindex="-1" class="helptext-mobile-button btn btn-theme bc-theme fc-white btn-xs"><i class="fa fa-info"></i></button>*@<button type="button" tabindex="-1" class="helptext-mobile-button btn btn-theme bc-theme fc-white btn-xs"><i class="fa fa-info"></i></button><button type="button" tabindex="-1" class="helptext-mobile-button btn btn-theme bc-theme fc-white btn-xs"><i class="fa fa-info"></i></button><button type="button" tabindex="-1" class="helptext-mobile-button btn btn-theme bc-theme fc-white btn-xs"><i class="fa fa-info"></i></button><button type="button" tabindex="-1" class="helptext-mobile-button btn btn-theme bc-theme fc-white btn-xs"><i class="fa fa-info"></i></button>
                                                            <div class="helptext">
                                                                <div class="helptext--desktop">
                                                                    <div class="helptext__content">
                                                                        <a class="helptext-content-close"><i class="fa fa-close"></i></a>
                                                                        <p id="HelpText-@oStepI.FKiQSStepDefinitionID-@FieldOrigin.ID">@FieldOrigin.sDisplayHelp</p>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <button type="button" tabindex="-1" class="helptext-mobile-button btn btn-theme bc-theme fc-white btn-xs">
                                                        <i class="fa fa-info"></i>
                                                    </button>
                                                </div>
                                            }
                                            }
                                        </form>
                                    }
                                }
                                else if (((EnumSemanticsDisplayAs)StepDef.iDisplayAs).ToString() == EnumSemanticsDisplayAs.Html.ToString())
                                {
                                    <div class="form-group">
                                        <div class="col-md-12">
                                            @Html.Raw(StepDef.HTMLContent)
                                        </div>
                                    </div>
                                }
                                else if (((EnumSemanticsDisplayAs)StepDef.iDisplayAs).ToString() == EnumSemanticsDisplayAs.XIComponent.ToString())
                                {
                                    {
                                        Html.RenderAction("LoadComponentByID", "XIComponents", new
                                        {
                                            iXIComponentID = StepDef.iXIComponentID,
                                            sGUID = ViewBag.sGUID,
                                            nParams = new List<CNV>
                                        (),
                                            sName = string.Empty,
                                            sType = "QSStep",
                                            ID = StepDef.XIGUID,
                                            iInstanceID = oStepI.XIGUID,
                                            sContext = string.Empty,
                                            iQSIID = Model.ID,
                                            bIsStepLock = bIsLock
                                        });
                                    }
                                }
                                else if (Model.oDynamicObject != null)
                                {
                                    { Html.RenderPartial(Model.sHtmlPage, Model.oDynamicObject); }
                                }
                            }

                            <div id="my_dialog"></div>
                            <div id="my_dialog2"></div>
                            @*@if (Step.nFieldInstances.Count() > 0 || Step.nSectionInstances.Count() > 0)
                        {*@
                            @if (StepDef.bIsBack || StepDef.bIsSaveNext || StepDef.bIsSave || StepDef.bIsSaveClose)
                            {
                                <div class="form-group foot-btns">
                                    @foreach (var qslink in oQSLinks)
                                    {
                                        foreach (var link in qslink.XiLink.Values)
                                        {
                                            if (link.sType.ToLower() == "button")
                                            {
                                                if (link.sRunType != null && link.sRunType.ToLower() == "load")
                                                {
                                                    <div class="form-btn move-right dynamicbtn">
                                                        <button type="button" class="btn btn-success" onclick="XILinkLoadJson('@link.FKiXILInkIDXIGUID','@Model.sGUID')">@link.sName</button>
                                                    </div>
                                                }
                                                else if (link.sRunType != null && link.sRunType.ToLower() == "saveqs")
                                                {
                                                    <div class="form-btn move-right dynamicbtn">
                                                        <button type="button" class="btn btn-success" data-IsLoading="@IsQSLinkLoading" onclick="fncQsSaveAndQSLink(0, 0, 0, '@link.FKiXILInkIDXIGUID','',this)">@link.sName</button>
                                                    </div>
                                                }
                                                else if (link.sRunType != null && link.sRunType.ToLower() == "cancelqs")
                                                {
                                                    <div class="form-btn dynamicbtn">
                                                        <button type="button" class="btn btn-success" data-IsLoading="@IsQSLinkLoading" onclick="fncQsCancel(0, '@link.FKiXILInkIDXIGUID','',this)">@link.sName</button>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="form-btn dynamicbtn">
                                                        <button type="button" class="btn btn-back" onclick="XIRun(this,'@link.FKiXILInkIDXIGUID', 0, '@ViewBag.sGUID', null, false, 0, '@oQSD.ID')">@link.sName</button>
                                                    </div>
                                                }
                                            }
                                        }
                                    }
                                    @if (StepDef.bIsBack)
                                    {
                                        var BackBtnLabel = StepDef.sBackBtnLabel;
                                        if (string.IsNullOrEmpty(BackBtnLabel))
                                        {
                                            BackBtnLabel = "Back";
                                        }
                                        <div class="form-btn">
                                            <button type="button" class="btn btn-back" id="QSBckBtn" onclick="fncGetPreviousStep(this)" accesskey="b" data-identity="Step-@StepDef.XIGUID">@BackBtnLabel</button>
                                            <button type="button" class="btn btn-default" id="QSBckLoadingBtn" style="padding-left:10px;padding-right:10px;display:none"><img src="~/Content/images/loading.gif" style="width: 20px;" /> Please wait</button>
                                        </div>
                                    }

                                    @if (StepDef.bIsSaveNext)
                                    {
                                        var SaveBtnLabel = StepDef.sSaveBtnLabel;
                                        if (string.IsNullOrEmpty(SaveBtnLabel))
                                        {
                                            SaveBtnLabel = "Save & Next";
                                        }
                                        <div class="form-btn move-right">
                                            <button type="button" class="btn btn-success @SaveBtnLabel" id="QSNxtBtn" accesskey="s" onclick="fncRunQSStepAction('SaveNext', this, false)" data-isPostHidden="@bPostHideSaveandNext" data-identity="Step_@StepDef.XIGUID">@SaveBtnLabel</button>
                                            <button type="button" class="btn btn-default" id="QSLoadingBtn" style="padding-left:10px;padding-right:10px;display:none"><img src="~/Content/images/loading.gif" style="width: 20px;" /> Please wait</button>
                                        </div>
                                    }
                                    @if (StepDef.bIsSave)
                                    {
                                        var SaveBtnLabel = StepDef.sSaveBtnLabel;
                                        if (string.IsNullOrEmpty(SaveBtnLabel))
                                        {
                                            SaveBtnLabel = "Save";
                                        }
                                        <div class="form-btn">
                                            <button type="button" class="btn btn-success" accesskey="s" onclick="fncRunQSStepAction('Save', this, false)" data-identity="Step_@StepDef.XIGUID">@SaveBtnLabel</button>
                                        </div>
                                    }
                                    @if (StepDef.bIsSaveClose)
                                    {
                                        var SaveBtnLabel = StepDef.sSaveBtnLabel;
                                        if (string.IsNullOrEmpty(SaveBtnLabel))
                                        {
                                            SaveBtnLabel = "Save & Close";
                                        }
                                        <div class="form-btn">
                                            <button type="button" class="btn btn-success" accesskey="s" onclick="fncRunQSStepAction('SaveClose', this)" data-identity="Step_@StepDef.XIGUID">@SaveBtnLabel</button>
                                        </div>
                                    }
                                    @*@if (StepDef.bIsContinue)
                                {
                                    <div class="form-btn">

                                        <button type="button" class="btn btn-success" accesskey="s" onclick="XIRun(3099, 0, '@ViewBag.sGUID', null, false, 0, '@oQSD.ID')">Continue</button>
                                    </div>
                                }*@

                                </div>
                            }
                            else if (oQSLinks.Count > 0)
                            {
                                <div class="form-group foot-btns">
                                    @foreach (var qslink in oQSLinks)
                                    {
                                        foreach (var link in qslink.XiLink.Values)
                                        {
                                            if (link.sType.ToLower() == "button")
                                            {
                                                if (link.sRunType != null && link.sRunType.ToLower() == "load")
                                                {
                                                    <div class="form-btn move-right dynamicbtn">
                                                        <button type="button" class="btn btn-success" onclick="XILinkLoadJson('@link.FKiXILInkIDXIGUID','@Model.sGUID')">@link.sName</button>
                                                    </div>
                                                }
                                                else if (link.sRunType != null && link.sRunType.ToLower() == "saveqs")
                                                {
                                                    <div class="form-btn move-right dynamicbtn">
                                                        <button type="button" class="btn btn-success" data-IsLoading="@IsQSLinkLoading" onclick="fncQsSaveAndQSLink(0, 0, 0, '@link.FKiXILInkIDXIGUID','',this)">@link.sName</button>
                                                    </div>
                                                }
                                                else if (link.sRunType != null && link.sRunType.ToLower() == "cancelqs")
                                                {
                                                    <div class="form-btn dynamicbtn">
                                                        <button type="button" class="btn btn-success" data-IsLoading="@IsQSLinkLoading" onclick="fncQsCancel(0, '@link.FKiXILInkIDXIGUID','',this)">@link.sName</button>
                                                    </div>
                                                }
                                                else if (link.sRunType != null && link.sRunType.ToLower() == "mail")
                                                {
                                                    <div class="form-btn move-right dynamicbtn">
                                                        <button type="button" class="btn btn-success" data-IsLoading="@IsQSLinkLoading" onclick="fncQsSaveAndMailQSLink(0, 0, 0, '@link.FKiXILInkIDXIGUID','',this)">@link.sName</button>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="form-btn dynamicbtn">
                                                        <button type="button" class="btn btn-back" onclick="XIRun(this,'@link.FKiXILInkIDXIGUID', 0, '@ViewBag.sGUID', null, false, 0, '@oQSD.XIGUID')">@link.sName</button>
                                                    </div>
                                                }
                                            }
                                        }
                                    }
                                </div>
                            }
                            @if (StepDef.TraceButtons.Count() > 0)
                            {
                                foreach (var trace in StepDef.TraceButtons.Values.ToList())
                                {
                                    <div class="form-btn move-right">
                                        <button type="button" class="btn btn-success @trace.sName" id="QSNxtBtn" accesskey="s" onclick="fncRunQSStepAction('SaveNext', this, false)" data-isPostHidden="@bPostHideSaveandNext" data-identity="Step_@StepDef.XIGUID" style="display:none;">@trace.sName</button>
                                        <button type="button" class="btn btn-default" id="QSLoadingBtn" style="padding-left:10px;padding-right:10px;display:none"><img src="~/Content/images/loading.gif" style="width: 20px;" /> Please wait</button>
                                    </div>
                                    <div class="form-btn move-right">
                                        <button type="button" class="btn btn-theme" data-identity="@StepDef.XIGUID" onclick="fncTraceNavigate(this)" data-code="@trace.sName">@trace.sName</button>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="infobox-right">
                    <!-- <div class="infobox-right__wrapper">
                <div class="Retrivebox">
                    <h4 class="retrivetxt">Already got a quote?</h4>
                    <div class="form-btn">
                        <button type="button" class="btn btn-back" onclick="fncRetrieveDetails()">Retrieve details</button>
                    </div>
                </div>
                <div class="Retrivebox">
                    <h4 class="retrivetxt">Can we help you?</h4>
                    <div class="call-txt">
                        <p class="ptxt">If you still can’t ﬁnd what you’re looking for, or aren’t sure about something, please call the team on:</p>
                        <h4 class="Phnno">01227 774050</h4>
                        <p class="timing">The team is available from: </p>
                        <p class="timing"><span>Mon - Fri</span> 9:00am - 5:30pm </p>
                        <p class="timing"><span>Sat</span> 9:00am - 1:00pm</p>
                    </div>
                </div>
            </div> -->
                    <div class="flex-container container">
                        <div class="sroll-content">
                            <!-- the loop -->
                            <h3>Get the best!</h3>
                            <p>To secure the very best price for you, we approach a select board of insurers, which results in a choice of available rates. To ensure that your price is as keen as possible, please complete as many fields as you can.</p>
                            <p>If you are unsure of how to answer a question or would like further detail around a particular requirement, you may prefer to talk directly to a member of our quotation team. <strong>Call us on 01227 774050</strong>, and we’ll be happy to help.</p>
                            <!-- end of the loop -->
                        </div>
                        <hr class="star-fade">
                    </div>
                </div>
            </div>

        </div>

<script>
    window.dataLayer = window.dataLayer || [];
    function fncRadio(obj,FieldName) {
        var value = obj.value;
        fnccheckme(obj);
        $('[name='+ FieldName +']').val(value);
    }
    function fncautocomplete(obj) {
        var value = obj.value;
        $('[name="iClientPayment1"]').val(value);
    }
    $(document).ready(function () {
        debugger;
        if ('@Disable'== 'True')
        {
            $(this).find('.conQSStep').addClass('BtnDisabled');
            $(".BtnDisabled").children().prop('disabled', true);
        }
        calculateQSAge('','','@Model.sGUID');

        if('@bInternal' != 'True')
        {
            @*if (@Model.iStage < 50) {
                gtag('event', 'conversion', { 'send_to': 'AW-715397890/F05fCP20uKkBEIK2kNUC' });
            }
           else {*@
            if (@Model.iStage >= 50) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetStructureResult", "XiLink")',
                    data: JSON.stringify({sGUID: '@ViewBag.sGUID' }),
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    async: true,
                    cache: false,
                    success: function (data) {
                        if (data != undefined) {

                            var Policy = {
                                'id': data[0].Policy.Attributes.id.sValue,
                                'affiliation': data[0].Policy.Attributes.sClass.sValue,
                                'revenue': data[0].Policy.Attributes.rTotalPremium.sValue,
                                'tax': data[0].Policy.Attributes.rTax.sValue,
                                'shipping': '',
                                'coupon': ''
                            };
                            var Addons = [];
                            for (var item in data[0].Products) {

                                var Addon = {
                                    'name': data[0].Products[item].Attributes.sName.sValue,        // Name or ID is required.
                                    'id': data[0].Products[item].Attributes.id.sValue,
                                    //'id': item.Addons[0].Attributes.id.sValue,
                                    'price': data[0].Products[item].Attributes.rCost.sValue,
                                    'brand': '',
                                    'category': '',
                                    'quantity': 1,
                                };
                                Addons.push( Addon );
                            }
                            window.dataLayer.push({ 'event': 'purchase', 'ecommerce': { 'purchase': { 'actionField': Policy , 'products': Addons } } })
                            //window.dataLayer.push('event': 'purchase',
                            //    'ecommerce': {
                            //        'purchase': Policy,
                            //        'products': Addons
                            //    }
                            //    );
                        }
                    },
                    error: function (data) {
                    }
                });
                window._pfq = window._pfq || []; (function () { try { var pf = document.createElement("script"); pf.type = "text/javascript"; pf.async = true; pf.src = "//www.flopanda.com/v1/website/payment/script"; document.getElementsByTagName("head")[0].appendChild(pf); } catch (exception) { } })();
            }
            //    gtag('event', 'conversion', {
            //        'send_to': 'AW-715397890/8o1wCKOwwakBEIK2kNUC',
            //        'transaction_id': ''
            //    });
            //}
            window._pfq = window._pfq || [];
            (function () {
                try {
                    var pf = document.createElement("script");
                    pf.type = "text/javascript";
                    pf.id = "5e1e211a731cdc611f6ddbb4";
                    pf.dataset.name = "flopandaScript";
                    pf.async = true;
                    pf.src = "https://flopandascripts.s3.eu-west-2.amazonaws.com/assets/js/code-live.min.js";
                    document.getElementsByTagName("head")[0].appendChild(pf);
                }
                catch (exception) {

                }
            })();

            window.dataLayer.push({
                'event': 'virtualpageView',
                'virtualpageURL': '@Model.sCurrentStepName',
                'virtualpageTitle' : @Model.iCurrentStepID + 100
            });
            window.dataLayer.push({
                'event': 'PageMove',
                'pageTitle': '@Model.sCurrentStepName',
                'StepNo' : @Model.iCurrentStepID + 100
            });
        }
        $('#QSStep').find('select').each(function (a, b) {
            var ISLoad = $(this).attr("onload");
            if (ISLoad) {
                if (ISLoad.split('(')[0] == "fncMiniMumDepositCal") {
                    fncMiniMumDepositCal(b);
                }
                else if (ISLoad.split('(')[0] == "fncGetDependency") {
                    fncGetDependency(b);
                }
            }
        })
        var bIsPostHideSaveandNext = bPostHideSaveandNext;
       if ((@stepXiLink > 0 || ('@sstepXiLink'!='' && '@sstepXiLink' != null && '@sstepXiLink' !='00000000-0000-0000-0000-000000000000')) && ('@bIsLock' != 'True')) {
            $("#OverRideTypeOfCover").val('@Model.XIIValues("sTypeofCoverUpdated")');
            $("#OverRideVoluntaryExcess").val('@Model.XIIValues("VoluntaryExcess")');
            $("#OverRideCoverStart").val('@Model.XIIValues("dCoverStart")');
            $('.Txtbx-DATETIME_OverRideCoverStart').datepicker({
                //changeMonth: true,
                language: 'pt-BR',
                //changeYear: true,
                //inline: true,
                //yearRange: '1920:2030',
                dateFormat: 'dd-M-yy',
                autoclose: true,
                minDate: 0,
                maxDate: "+30d",
            });
            if (@stepXiLink == 8879 || ('@sstepXiLink'!='' && '@sstepXiLink' !=null && '@sstepXiLink'.toLowerCase() == 'BBADB56D-D651-403B-9333-C8E84BD674C3'.toLowerCase())) {
     if ('@sstepXiLink'!='' && '@sstepXiLink' != null && '@sstepXiLink'.ToLower() != '00000000-0000-0000-0000-000000000000'.toLowerCase()) {
         fncBindUpdatedrenewalQuotes('@sstepXiLink', '@ViewBag.sGUID');
     }
     else {
         fncBindUpdatedrenewalQuotes('@stepXiLink', '@ViewBag.sGUID');
     }
 }
 else {
      if ('@StepNav'.toLowerCase() == "false") {
          debugger;
          if ('@sstepXiLink'!='' && '@sstepXiLink' != null) {
             fncSignalR('@ViewBag.sGUID', '@oQSD.ID', '@sstepXiLink');
          }
           else {
               fncSignalR('@ViewBag.sGUID', '@oQSD.ID', '@stepXiLink');
           }

     }
 }
            @*XIRun(@stepXiLink, 0, '@ViewBag.sGUID', null, false, 0, '@oQSD.ID');*@

        }
        if(bPostHideSaveandNext!="" && bPostHideSaveandNext.toLowerCase()=="yes")
        {
            $("#QSNxtBtn").hide();
            $("#QSLoadingBtn").hide();
        }
        var obj =new Object();
        obj.value='0';
        obj.id='@sFieldID';
        if(obj.id!=undefined && obj.id!="")
        {
            //var fieldid=obj.id;
            var sStepID=obj.id.split('-')[1];
            var sFieldVal='@sFieldValue';
            fncDependencyDropDown(obj,sFieldVal);
        }

        $(document.body).on('click', 'input.QuotesBuyNow', function () {
            var FinalBuyAmount = $('#FinalAmt').text();
            var BuyPrice = FinalBuyAmount;

            @*window.location.href = '@Url.Action("BuildPolicyObject", "Payment")?ID=' + QuoteID+'_'+sGUIDN+'&Amount=' + BuyPrice ;*@
            var url = '@Url.Action("Payment", "Payment")?ID=' + QuoteID + '_' + sGUIDN + '&Amount=' + BuyPrice;
            $('#iframe_a').attr('src', url)
            @*var url = '@Url.Action("Payment", "Payment")?ID=' + QuoteID + '_' + sGUIDN + '&Amount=' + BuyPrice;
          $('#iframe_a').attr('src', url)*@
            //window.location.href = '@Url.Action("Payment", "Payment")?ID=' + QuoteID+'_'+sGUIDN+'&Amount=' + BuyPrice ;
            //window.location.href = '@Url.Action("test", "Payment")?ID=' + QuoteID;
        });

        $(document.body).on('click', 'input.QuotesPayment', function () {
            $(".QuotesPayment").attr("disabled", true);
            var FinalBuyAmount = $('#FinalAmt').text();
            var BuyPrice = FinalBuyAmount;
            var url = '@Url.Action("Payment", "Payment")?ID=' + QuoteID + '_' + sGUIDN + '&Amount=' + BuyPrice;
            $('#iframe_a').attr('src', url)
        });
        $(document.body).on('click', 'a.ConvetBtn', function () {
            var Type = $(this).attr('data-type');
            var SubAmt = parseFloat($(this).attr('data-value'));
            var QuoteAMt =  parseFloat($('#FinalAmt').html());
            //QuoteAMt = QuoteAMt.slice(1);
            if(Type == "notselected"){
                QuoteAMt = parseFloat(QuoteAMt + SubAmt).toFixed(2);
                $(this).attr('data-type','selected');
                $(this).removeClass('btn-success');
                $(this).addClass('btn-danger');
                $(this).html('Remove');
            }
            else{
                QuoteAMt = parseFloat(parseFloat(QuoteAMt).toFixed(2) - parseFloat(SubAmt).toFixed(2)).toFixed(2);
                $(this).attr('data-type','notselected');
                $(this).removeClass('btn-danger');
                $(this).addClass('btn-success');
                $(this).html('Add');
            }
            $('#FinalAmt').html(QuoteAMt);
        });
        QSInsDict["@Model.sGUID"] =@Html.Raw(Json.Encode(Model));
        OverRideStatusDict["@Model.sGUID"] ='@IsOverRideQuote';
        var oQSInstance = QSInsDict["@Model.sGUID"];

        if(oQSInstance.sQSName!=null)
        {
            if((oQSInstance.sQSName.toLowerCase() == "MCMotorhome_Public_new".toLowerCase() || oQSInstance.sQSName.toLowerCase() == "MCCaravan_Public".toLowerCase() || oQSInstance.sQSName.toLowerCase() == "MCTouring caravan Public".toLowerCase() || oQSInstance.sQSName.toLowerCase() == "MCStatic caravan Public".toLowerCase() || oQSInstance.sQSName.toLowerCase() == "MCParkHome caravan public".toLowerCase() || oQSInstance.sQSName.toLowerCase() == "MHQS".toLowerCase()) && oQSInstance.sCurrentStepName.toLowerCase() == "your quotes"){
                $('.LayoutCode_@Model.sGUID').find('.banner').show();
                $('.LayoutCode_@Model.sGUID').find('.banner__subnav').show();
                $('.LayoutCode_@Model.sGUID').find('.infobox-right').hide();
                $('.LayoutCode_@Model.sGUID').find('.infobox-left').css('width', '100%');
            }
            else if((oQSInstance.sQSName.toLowerCase() == "MCMotorhome_Public_new".toLowerCase() || oQSInstance.sQSName.toLowerCase() == "MCCaravan_Public".toLowerCase() || oQSInstance.sQSName.toLowerCase() == "MCTouring caravan Public".toLowerCase() || oQSInstance.sQSName.toLowerCase() == "MCStatic caravan Public".toLowerCase() || oQSInstance.sQSName.toLowerCase() == "MCParkHome caravan public".toLowerCase() || oQSInstance.sQSName.toLowerCase() == "MHQS".toLowerCase()) && (oQSInstance.sCurrentStepName.toLowerCase() == "your details" || oQSInstance.sCurrentStepName.toLowerCase() == "DriversNew".toLowerCase() || oQSInstance.sCurrentStepName.toLowerCase() == "Additional Driver".toLowerCase() || oQSInstance.sCurrentStepName.toLowerCase() == "Vehicle".toLowerCase() || oQSInstance.sCurrentStepName.toLowerCase() == "CoverPage".toLowerCase() || oQSInstance.sCurrentStepName.toLowerCase() == "Caravan".toLowerCase() || oQSInstance.sCurrentStepName.toLowerCase() == "About Motorhome".toLowerCase() || oQSInstance.sCurrentStepName.toLowerCase() == "About You".toLowerCase())){
                $('.LayoutCode_@Model.sGUID').find('.banner').hide();
                $('.LayoutCode_@Model.sGUID').find('.banner__subnav').hide();
            }
            else{
                $('.LayoutCode_@Model.sGUID').find('.banner').hide();
                $('.LayoutCode_@Model.sGUID').find('.banner__subnav').hide();
                $('.LayoutCode_@Model.sGUID').find('.infobox-right').hide();
                $('.LayoutCode_@Model.sGUID').find('.infobox-left').css('width', '100%');
                $('.LayoutCode_@Model.sGUID').find('.infobox-left').addClass('summer_policy_page');
            }
        }
        //$(".questionset-section input[type=radio]:checked").each(function() {
        //    var sShowField = $(this).attr('data-show');
        //    var sHideField = $(this).attr('data-hide');
        //    var parentName = 'qsfield';
        //    if(sShowField && sShowField.length>0){
        //        var childObj1 = $('[name="'+sShowField+'"]');
        //        fncHideShowFromHTMLTree(parentName, childObj1[0], 'show');
        //    }
        //    if(sHideField && sHideField.length>0){
        //        var childObj2 = $('[name="'+sHideField+'"]');
        //        fncHideShowFromHTMLTree(parentName, childObj2[0], 'hide');
        //    }
        //});

        //Hide and Show Dependency Fields
        $(".questionset-section input[type=radio]:checked").each(function() {
            var filed = this;
            var sShowField = $('.LayoutCode_@Model.sGUID').find(this).attr('data-show');
            var sHideField = $('.LayoutCode_@Model.sGUID').find(this).attr('data-hide');
            var parentName = 'qsfield';
            var iSHType = $('.LayoutCode_@Model.sGUID').find(this).attr('data-shtype');
            var bIsChecked = false;
            if(iSHType){
                if ($('.LayoutCode_@Model.sGUID').find(this).is(':checked')) {
                    bIsChecked = true;
                }
                if (iSHType == 10) {
                    if(sShowField && sShowField.length>0){
                        var childObj1 = $('.LayoutCode_@Model.sGUID').find('[name="'+sShowField + '"]');
                        fncHideShowFromHTMLTree(parentName, childObj1[0], 'show');
                    }
                    if(sHideField && sHideField.length>0){
                        var childObj2 = $('.LayoutCode_@Model.sGUID').find('[name="'+sHideField + '"]');
                        fncHideShowFromHTMLTree(parentName, childObj2[0], 'hide');
                        var HideRemaining = $('.LayoutCode_@Model.sGUID').find('.questionset-section select[name="' + sHideField + '"]');
                        if (HideRemaining) {
                            $('.LayoutCode_@Model.sGUID').find(HideRemaining).find('option[value="0"]').prop('selected', true);//set DropDwon Value To 0
                            $('.LayoutCode_@Model.sGUID').find(HideRemaining).find('option[value=""]').prop('selected', true);
                            fnccheckme(HideRemaining[0]);
                        }
                    }
                }
                else if (iSHType == 20) {
                    if (sShowField && sShowField.length > 0) {
                        var sShwFlds = sShowField.split('/');
                        for (var x = 0; x < sShwFlds.length; x++)
                        {
                            var childObj1 = $('.LayoutCode_@Model.sGUID').find('[name="' + sShwFlds[x] + '"]');
                            $(childObj1).removeClass('on').addClass('off');
                            for (var section in oQSInstance.QSDefinition.Steps[oQSInstance.sCurrentStepName].Sections) {
                                if (sShwFlds[x] == oQSInstance.QSDefinition.Steps[oQSInstance.sCurrentStepName].Sections[section].sCode) {
                                    if(bIsChecked){
                                        oQSInstance.QSDefinition.Steps[oQSInstance.sCurrentStepName].Sections[section].sIsHidden = "off";
                                    }
                                    else{
                                        oQSInstance.QSDefinition.Steps[oQSInstance.sCurrentStepName].Sections[section].sIsHidden = "on";
                                        $(childObj1).removeClass('off').addClass('on');
                                    }

                                }
                            }
                        }
                    }
                    if (sHideField && sHideField.length > 0) {
                        var sHidflds = sHideField.split('/');
                        for (var s = 0; s < sHidflds.length; s++)
                        {
                            var childObj2 = $('.LayoutCode_@Model.sGUID').find('[name="' + sHidflds[s] + '"]');
                            $(childObj2).removeClass('off').addClass('on');
                            for (var section in oQSInstance.QSDefinition.Steps[oQSInstance.sCurrentStepName].Sections) {
                                if (sHidflds[s] == oQSInstance.QSDefinition.Steps[oQSInstance.sCurrentStepName].Sections[section].sCode) {
                                    oQSInstance.QSDefinition.Steps[oQSInstance.sCurrentStepName].Sections[section].sIsHidden = "on";
                                }
                            }
                            var SetValueToNull = $(childObj2).find('form');
                            if (SetValueToNull) {
                                //$(childObj2).find('form').find('input').each(function(a,b){ $(b).attr('value',"") });
                                $(childObj2).find('form').find('select').each(function (a, b) {
                                    $('.LayoutCode_@Model.sGUID').find(b).find('option[value="0"]').prop('selected', true);
                                    $('.LayoutCode_@Model.sGUID').find(b).find('option[value=""]').prop('selected', true);
                                    $('.LayoutCode_@Model.sGUID').find(b).val('');
                                    $('.LayoutCode_@Model.sGUID').find(b).val('').trigger('chosen:updated')
                                })
                                $(childObj2).find('form').find('input').each(function (a, b) {
                                    if (!$('.LayoutCode_@Model.sGUID').find(b).is(":hidden")) {
                                        $('.LayoutCode_@Model.sGUID').find(b).val("");
                                    }
                                })
                            }
                        }
                    }
                }
            }
        });

        //Hide and Show Dependency Fields
        $(".questionset-section select").each(function() {
            var sShowField = $('.LayoutCode_@Model.sGUID').find(this).find(':selected').attr('data-show');
            var sHideField = $('.LayoutCode_@Model.sGUID').find(this).find(':selected').attr('data-hide');
            var parentName = 'qsfield';
            var iSHType = $('.LayoutCode_@Model.sGUID').find(this).find(':selected').attr('data-shtype');
            if (iSHType == 10) {
                if(sShowField && sShowField.length>0){
                    var childObj1 = $('.LayoutCode_@Model.sGUID').find('[name="'+sShowField + '"]');
                    fncHideShowFromHTMLTree(parentName, childObj1[0], 'show');
                }
                if(sHideField && sHideField.length>0){
                    var childObj2 = $('.LayoutCode_@Model.sGUID').find('[name="'+sHideField + '"]');
                    fncHideShowFromHTMLTree(parentName, childObj2[0], 'hide');
                    var HideRemaining = $('.LayoutCode_@Model.sGUID').find('.questionset-section select[name="' + sHideField + '"]');
                    if (HideRemaining) {
                        $('.LayoutCode_@Model.sGUID').find(HideRemaining).find('option[value="0"]').prop('selected', true);//set DropDwon Value To 0
                        $('.LayoutCode_@Model.sGUID').find(HideRemaining).find('option[value=""]').prop('selected', true);
                        fnccheckme(HideRemaining[0]);
                    }
                }
            }
            else if (iSHType == 20) {
                if (sShowField && sShowField.length > 0) {
                    var sShwFlds = sShowField.split('/');
                    for (var x = 0; x < sShwFlds.length; x++)
                    {
                        var childObj1 = $('.LayoutCode_@Model.sGUID').find('[name="' + sShwFlds[x] + '"]');
                        $(childObj1).removeClass('on').addClass('off');
                        for (var section in oQSInstance.QSDefinition.Steps[oQSInstance.sCurrentStepName].Sections) {
                            if (sShwFlds[x] == oQSInstance.QSDefinition.Steps[oQSInstance.sCurrentStepName].Sections[section].sCode) {
                                oQSInstance.QSDefinition.Steps[oQSInstance.sCurrentStepName].Sections[section].sIsHidden = "off";
                            }
                        }
                    }
                }
                if (sHideField && sHideField.length > 0) {
                    var sHidflds = sHideField.split('/');
                    for (var s = 0; s < sHidflds.length; s++)
                    {
                        var childObj2 = $('.LayoutCode_@Model.sGUID').find('[name="' + sHidflds[s] + '"]');
                        $(childObj2).removeClass('off').addClass('on');
                        for (var section in oQSInstance.QSDefinition.Steps[oQSInstance.sCurrentStepName].Sections) {
                            if (sHidflds[s] == oQSInstance.QSDefinition.Steps[oQSInstance.sCurrentStepName].Sections[section].sCode) {
                                oQSInstance.QSDefinition.Steps[oQSInstance.sCurrentStepName].Sections[section].sIsHidden = "on";
                            }
                        }
                        var SetValueToNull = $(childObj2).find('form');
                        if (SetValueToNull) {
                            //$(childObj2).find('form').find('input').each(function(a,b){ $(b).attr('value',"") });
                            $(childObj2).find('form').find('select').each(function (a, b) {
                                $('.LayoutCode_@Model.sGUID').find(b).find('option[value="0"]').prop('selected', true);
                                $('.LayoutCode_@Model.sGUID').find(b).find('option[value=""]').prop('selected', true);
                                $('.LayoutCode_@Model.sGUID').find(b).val('');
                                $('.LayoutCode_@Model.sGUID').find(b).val('').trigger('chosen:updated');
                            })
                            $(childObj2).find('form').find('input').each(function (a, b) {
                                if (!$('.LayoutCode_@Model.sGUID').find(b).is(":hidden")) {
                                    $('.LayoutCode_@Model.sGUID').find(b).val("");}
                            })
                        }
                    }

                }
            }
        });
        $(".questionset-section input[type='checkbox']").each(function() {
            var filed = this;
            var sShowField = $(this).attr('data-show');
            var sHideField = $(this).attr('data-hide');
            var parentName = 'qsfield';
            var iSHType = $(this).attr('data-shtype');
            var bIsChecked = false;
            if(iSHType){
                if ($(this).is(':checked')) {
                    bIsChecked = true;
                }
                if (iSHType == 10) {
                    if(sShowField && sShowField.length>0){
                        var childObj1 = $('[name="'+sShowField + '"]');
                        fncHideShowFromHTMLTree(parentName, childObj1[0], 'show');
                    }
                    if(sHideField && sHideField.length>0){
                        var childObj2 = $('[name="'+sHideField + '"]');
                        fncHideShowFromHTMLTree(parentName, childObj2[0], 'hide');
                        var HideRemaining = $('.questionset-section select[name="' + sHideField + '"]');
                        if (HideRemaining) {
                            $(HideRemaining).find('option[value="0"]').prop('selected', true);//set DropDwon Value To 0
                            $(HideRemaining).find('option[value=""]').prop('selected', true);
                            fnccheckme(HideRemaining[0]);
                        }
                    }
                }
                else if (iSHType == 20) {
                    if (sShowField && sShowField.length > 0) {
                        var sShwFlds = sShowField.split('/');
                        for (var x = 0; x < sShwFlds.length; x++)
                        {
                            var childObj1 = $('[name="' + sShwFlds[x] + '"]');
                            $(childObj1).removeClass('on').addClass('off');
                            for (var section in oQSInstance.QSDefinition.Steps[oQSInstance.sCurrentStepName].Sections) {
                                if (sShwFlds[x] == oQSInstance.QSDefinition.Steps[oQSInstance.sCurrentStepName].Sections[section].sCode) {
                                    if(bIsChecked){
                                        oQSInstance.QSDefinition.Steps[oQSInstance.sCurrentStepName].Sections[section].sIsHidden = "off";
                                    }
                                    else{
                                        oQSInstance.QSDefinition.Steps[oQSInstance.sCurrentStepName].Sections[section].sIsHidden = "on";
                                        $(childObj1).removeClass('off').addClass('on');
                                    }

                                }
                            }
                        }

                    }
                    if (sHideField && sHideField.length > 0) {
                        var sHidflds = sHideField.split('/');
                        for (var s = 0; s < sHidflds.length; s++)
                        {
                            var childObj2 = $('[name="' + sHidflds[s] + '"]');
                            $(childObj2).removeClass('off').addClass('on');
                            for (var section in oQSInstance.QSDefinition.Steps[oQSInstance.sCurrentStepName].Sections) {
                                if (sHidflds[s] == oQSInstance.QSDefinition.Steps[oQSInstance.sCurrentStepName].Sections[section].sCode) {
                                    oQSInstance.QSDefinition.Steps[oQSInstance.sCurrentStepName].Sections[section].sIsHidden = "on";
                                }
                            }
                            var SetValueToNull = $(childObj2).find('form');
                            if (SetValueToNull) {
                                //$(childObj2).find('form').find('input').each(function(a,b){ $(b).attr('value',"") });
                                $(childObj2).find('form').find('select').each(function (a, b) {
                                    $(b).find('option[value="0"]').prop('selected', true);
                                    $(b).find('option[value=""]').prop('selected', true);
                                    $(b).val('');
                                    $(b).val('').trigger('chosen:updated');
                                })
                                $(childObj2).find('form').find('input').each(function (a, b) {
                                    if (!$(b).is(":hidden")) {
                                        $(b).val("");
                                    }
                                })
                            }
                        }

                    }
                }
            }
        });
        $('.QSCheckboxClass').unbind().on('change', function () {
            var sName = $(this).attr('data-name');
            var dDOBMonth = $('select[name="dDOBMonth"] :selected').val();
            var dDOBYear = $('select[name="dDOBYear"] :selected').val();
            if(sName && sName.toLowerCase() == "bsincebirth"){
                if ($(this).is(':checked')) {
                    $('select[name=iUKResidentMonth]').val(dDOBMonth);
                    $('select[name=iUKResidentYear]').val(dDOBYear);
                    $('select[name=iUKResidentMonth]').attr('readonly', 'readonly');
                    $('select[name=iUKResidentYear]').attr('readonly', 'readonly');
                }
                else {
                    $('select[name=iUKResidentMonth]').prop("selectedIndex", 0);
                    $('select[name=iUKResidentYear]').prop("selectedIndex", 0);
                    $('select[name=iUKResidentMonth]').removeAttr('readonly');
                    $('select[name=iUKResidentYear]').removeAttr('readonly');
                }
            }
            else if (sName && sName.toLowerCase() == "bnotbought") {
                if ($(this).is(':checked')) {
                    $('select[name=iMotorhomebuyMonth]').val((new Date).getMonth() + 1);
                    $('select[name=iMotorhomebuyYear]').val((new Date).getFullYear());
                    $('select[name=iMotorhomebuyDay]').val((new Date).getDate());
                    $('select[name=iMotorhomebuyDay]').attr('readonly', 'readonly');
                    $('select[name=iMotorhomebuyMonth]').attr('readonly', 'readonly');
                    $('select[name=iMotorhomebuyYear]').attr('readonly', 'readonly');
                }
                else {
                    $('select[name=iMotorhomebuyMonth]').prop("selectedIndex", 0);
                    $('select[name=iMotorhomebuyYear]').prop("selectedIndex", 0);
                    $('select[name=iMotorhomebuyDay]').prop("selectedIndex", 0);
                    $('select[name=iMotorhomebuyDay]').removeAttr('readonly');
                    $('select[name=iMotorhomebuyMonth]').removeAttr('readonly');
                    $('select[name=iMotorhomebuyYear]').removeAttr('readonly');
                }
            }
            else if (sName && sName.toLowerCase() == "bnotboughtmh") {
                if ($(this).is(':checked')) {
                    $('input[name=dDateofpurchase]').val('@currentDate');
                }
                else {
                    $('input[name=dDateofpurchase]').val('');
                }
            }
        });
        $('.helptext-bottom').find('.HelpIcon').parent().parents('.form-label').addClass('helptext-exist');
        $(window).trigger('resize');

        $('.policybox .box-container .box-header>h2').on('click',function(){
            $(this).parent().parents('.box-item').toggleClass('expand');
        });
        $('#btnGenerate').click(function(){
            var formData = JSON.parse(JSON.stringify(jQuery('.QSStepForm').serializeArray()));
            var Select="0";
            if(formData.length==5){
                Select=formData[4].value
            }
            $.ajax({
                url: '@Url.Action("AgeDebt", "XiLink")',
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                async: false,
                cache: false,
                data: JSON.stringify({Short:formData[0].value,Medium:formData[1].value,Long:formData[2].value,Date:formData[3].value,Select:Select,sCode:'@StepDef.sCode' }),
                success: function (data)
                {
                    if(data!=undefined)
                    {
                        $('#AgeDebtorsList').html(data);
                    }
                }
            });
        });

        if ('@StepNav' == 'True') {
            $('.LayoutCode_@Model.sGUID').find('#QuoteChangedFactor').show();
        }
    });
    function fncLoadSectionInstance(obj,sFieldValue)
    {
        var QSDefinitionID = '@Model.FKiQSDefinitionIDXIGUID';
        var sCurrentStepName='@Model.sCurrentStepName';
        var id=obj.value;
        var FieldOriginID=obj.id.split('-')[2];
        $("#ParentOriginID_"+FieldOriginID).val(FieldOriginID);
        $("#ParentOriginIDValue_"+FieldOriginID).val(id);
        var NewField=$('#Field-'+FieldOriginID).val();
        var FieldIDs="";
        if(NewField!=undefined && NewField!="")
        {
            FieldIDs=NewField.split(',');
            $.each(FieldIDs,function(index,Value){
                Value=Value+"_Sec";
                $.ajax({
                    url: '@Url.Action("GetSectionInstance", "XiLink")',
                    type: 'POST',
                    contentType: "application/json; charset=utf-8",
                    datatype: "json",
                    async: false,
                    cache: false,
                    data: JSON.stringify({ParentID:id,sGUID:'@Model.sGUID',sSectionID:Value,sCurrentStepName:sCurrentStepName,iQSDefinitionID:QSDefinitionID }),
                    success: function (data)
                    {
                        if(data!=undefined)
                        {
                            var CurrentStepName = oQSInstance.sCurrentStepName;
                            var StepIns = oQSInstance.Steps[CurrentStepName];
                            var SecDef = oQSInstance.QSDefinition.Steps[CurrentStepName].Sections[Value];
                            $('div[name="'+SecDef.sCode+'"]').removeClass('on');
                            $('div[name="' + SecDef.sCode + '"]').addClass('off');
                            oQSInstance.QSDefinition.Steps[CurrentStepName].Sections[Value].sIsHidden = "off";
                            QSInsDict["@Model.sGUID"] = oQSInstance;
                            $.each(data.XIValues, function (i, item) {
                                var FldOrg = SecDef.FieldDefs[i].FieldOrigin;
                                if(FldOrg.bIsOptionList || FldOrg.FKiBOID>0 || FldOrg.FK1ClickID>0|| FldOrg.iMasterDataID>0)
                                {
                                    if (FldOrg.bIsDisable)
                                    {
                                        $('input[name="'+i+'"]').val(item.sValue)
                                    }
                                    $('select[name="'+i+'"]').val(item.sValue);

                                }
                                else
                                {
                                    $('input[name="'+i+'"]').val(item.sValue);
                                }
                            });

                        }
                    }
                });
            })
        }
    }
    function fncDependencyDropDown(obj,sFieldValue){
        var id=obj.value;
        var FieldOriginID=obj.id.split('-')[2];
        $("#ParentOriginID_"+FieldOriginID).val(FieldOriginID);
        $("#ParentOriginIDValue_"+FieldOriginID).val(id);
        var NewField=$('#Field-'+FieldOriginID).val();
        var FieldIDs="";
        if(NewField!=undefined && NewField!="")
        {
            FieldIDs=NewField.split(',');
            $.each(FieldIDs,function(index,Value){
                if(FieldOriginID!=Value)
                {
                    if(sFieldValue && sFieldValue!="")
                    {
                        id=sFieldValue;
                    }
                }
                $.ajax({
                    url: '@Url.Action("GetDependencyDropDown", "XiLink")',
                    type: 'POST',
                    contentType: "application/json; charset=utf-8",
                    datatype: "json",
                    async: false,
                    cache: false,
                    data: JSON.stringify({ParentID:id,FieldOriginID:Value,sGUID:'@Model.sGUID' }),
                    success: function (data) {
                        var StepDefID=obj.id.split('-')[1];;
                        if(data!=null && data.length>0)
                        {
                            var parentoriginid=$("#ParentOriginID_"+Value).val();
                            var ParentOriginIDValue=$("#ParentOriginIDValue_"+Value).val();
                            if(parentoriginid==Value && ParentOriginIDValue!="0")
                            {

                            }
                            else
                            {
                                var ElementType="";
                                var Element= $('#Field-'+StepDefID+'-'+Value).get(0);
                                if(Element!=undefined)
                                {
                                    ElementType= $('#Field-'+StepDefID+'-'+Value).get(0).tagName;
                                }
                                $('#Field-'+StepDefID+'-'+Value).empty();
                                if(ElementType.toLowerCase()=="select")
                                {
                                    if(data && data.length > 0){
                                        $('#Field-'+StepDefID+'-'+Value).append('<option value="0" disabled selected>Please Select</option>');
                                        for(var k=0;k<data.length;k++){
                                            if(data[k].sOptionValue == sFieldValue){

                                                $('#Field-'+StepDefID+'-'+Value).append('<option value="'+data[k].sOptionValue+'" selected>'+data[k].sOptionName+'</option>');
                                            }
                                            else{
                                                $('#Field-'+StepDefID+'-'+Value).append('<option value="'+data[k].sOptionValue+'">'+data[k].sOptionName+'</option>');
                                            }
                                        }
                                    }
                                }
                                if(ElementType.toLowerCase()=="input" || ElementType.toLowerCase()=="textarea")
                                {
                                    if(data && data.length > 0){
                                        for(var k=0;k<data.length;k++){
                                            $('#Field-'+StepDefID+'-'+Value).val(data[k].sOptionName);
                                            $('.Field-'+StepDefID+'-'+Value).val(data[k].sOptionName);
                                        }
                                    }
                                    else
                                    {
                                        $('#Field-'+StepDefID+'-'+Value).val("");
                                    }
                                }
                            }
                        }
                    }
                });
            });
        }

    }
    $(document.body).on('change', "input.iAddintionalAmount", function () {
        var iAdditionalAmount = $(this).val();
        var AttrName = $(this).attr('data-id');
        var iStandardAmount = 1000;
        var iTotalContentInsured = parseFloat(iStandardAmount) + parseFloat(iAdditionalAmount);
        if(parseFloat(iAdditionalAmount) > 0)
        {
            $(".iTotalContentsInsured").val(iTotalContentInsured);
        }
    });
    function fncRetrieveDetails()
    {
        window.location.href = '@Url.Action("RetrieveDetails", "Home")';
    }
    function fncTriggerSincebirth(This){
        var ID=$(This).attr('id');
        if(ID)
        {
            var FieldOriginID=ID.split('-')[2];
            var NewField=$('#Field-'+FieldOriginID).val();
            if($("#Field-"+NewField).is(':checked'))
            {
                $('.QSCheckboxClass').trigger("change");
            }
        }

    }
    function fncGetDependency(obj, FieldOriginID) {
        debugger;
        if (FieldOriginID == undefined) {
            var id = obj.value;
            FieldOriginID = obj.id.split('-')[2];
        }
        $("#ParentOriginID_" + FieldOriginID).val(FieldOriginID);
        $("#ParentOriginIDValue_" + FieldOriginID).val(id);
        var NewField = $('#Field-' + FieldOriginID).val();
        var FieldIDs = "";
        if (NewField != undefined && NewField != "") {
            FieldIDs = NewField.split(',');
            $.each(FieldIDs, function (index, Value) {
                //if (FieldOriginID != Value) {
                //    if (sFieldValue && sFieldValue != "") {
                //        id = sFieldValue;
                //    }
                //}
                var sRule = "";
                var FieldName = "";
                for (var section in oQSInstance.QSDefinition.Steps[oQSInstance.sCurrentStepName].Sections) {
                    for (var FieldD in StepDef.Sections[section].FieldDefs) {
                        if (StepDef.Sections[section].FieldDefs[FieldD].FieldOrigin.XIGUID.toString() == Value || StepDef.Sections[section].FieldDefs[FieldD].FieldOrigin.ID.toString() == Value) {
                            sRule = StepDef.Sections[section].FieldDefs[FieldD].FieldOrigin.sRuleCondition;
                            FieldName = StepDef.Sections[section].FieldDefs[FieldD].FieldOrigin.sName;
                        }
                    }
                }
                @*$.ajax({
                    url: '@Url.Action("GetDependencyRule", "XiLink")',
                    type: 'POST',
                    contentType: "application/json; charset=utf-8",
                    datatype: "json",
                    async: false,
                    cache: false,
                    data: JSON.stringify({ FieldOriginID: Value, sGUID: '@Model.sGUID' }),
                    success: function (data) {*@
                if (sRule) {
                    debugger;
                    /*if (data != "" && data.sValue != "") {*/
                    //var FParent = $(obj).parent();
                    //var SParent = $(FParent).parent();
                    //var formid =$(SParent).parent().parent().parent().parent().parent().find('form').attr('id');
                    //var formid = $(SParent).siblings("div.conQSStep").find('form').attr('id');
                    var formData = JSON.parse(JSON.stringify(jQuery('div.LayoutCode_@Model.sGUID').find('.QSStepForm').serializeArray()));
                    for (var i = 0; i < formData.length; i++) {
                        var FieldName = formData[i].name;
                        var VisibilityF = $('.LayoutCode_@Model.sGUID').find('div[data-controltype="qsfield"]').filter('.on').find('[name="' + FieldName + '"]')[0];
                        var VisibilityS = $('.LayoutCode_@Model.sGUID').find('div[data-controltype="section"]').filter('.on').find('[name="' + FieldName + '"]')[0];
                        if (sRule.indexOf("QS." + FieldName) != -1 && !VisibilityF && !VisibilityS) {
                            sRule = sRule.replace("QS." + FieldName, formData[i].value)
                        }
                        else if (sRule.indexOf("QS." + FieldName) != -1 && (VisibilityF || VisibilityS)) {
                            sRule = sRule.replace("QS.", "")
                        }
                    }
                    $.ajax({
                        async: false,
                        type: 'POST',
                        url: ExecuteXIScriptURL,
                        data: JSON.stringify({ sScript: sRule, sGUID: '@Model.sGUID' }),
                        contentType: 'application/json;',
                        dataType: 'json',
                        traditional: true,
                        success: function (result) {
                            debugger;
                            if (result != null && result == 'true') {
                                var childObj1 = $('[name="' + FieldName + '"]');
                                //var childObj1 = $('#Field-' + Value);
                                fncHideShowFromHTMLTree("qsfield", childObj1[0], 'show');
                                //var childF = $('#select-' + Value);
                                fnccheckme(childObj1[0]);
                                fncGetDependency(childObj1, Value);

                            }
                            else {
                                var childObj1 = $('[name="' + FieldName + '"]');
                                //var childObj1 = $('#Field-' + Value);
                                fncHideShowFromHTMLTree("qsfield", childObj1[0], 'hide');
                                $(childObj1).find('option[value="0"]').prop('selected', true);//set DropDwon Value To 0
                                $(childObj1).find('option[value=""]').prop('selected', true);
                                //var childF = $('#select-' + Value);
                                fnccheckme(childObj1[0]);
                                fncGetDependency(childObj1, Value);
                            }
                            //if (data != null && Value != data) {
                            //    IsValid = false;
                            //}
                        }
                    });
                    //}
                }

                /* });*/
            });
        }
        else {
            for (var section in oQSInstance.QSDefinition.Steps[oQSInstance.sCurrentStepName].Sections) {
                var sRule = oQSInstance.QSDefinition.Steps[oQSInstance.sCurrentStepName].Sections[section].sRuleCondition
                if (sRule) {
                    var formData = JSON.parse(JSON.stringify(jQuery('div.LayoutCode_@Model.sGUID').find('.QSStepForm').serializeArray()));
                    for (var i = 0; i < formData.length; i++) {
                        var FieldName = formData[i].name;
                        var VisibilityF = $('.LayoutCode_@Model.sGUID').find('div[data-controltype="qsfield"]').filter('.on').find('[name="' + FieldName + '"]')[0];
                        var VisibilityS = $('.LayoutCode_@Model.sGUID').find('div[data-controltype="section"]').filter('.on').find('[name="' + FieldName + '"]')[0];
                        if (sRule.indexOf("QS." + FieldName) != -1 && !VisibilityF && !VisibilityS) {
                            sRule = sRule.replace("QS." + FieldName, formData[i].value)
                        }
                        else if (sRule.indexOf("QS." + FieldName) != -1 && (VisibilityF || VisibilityS)) {
                            sRule = sRule.replace("QS.", "")
                        }
                    }
                    $.ajax({
                        async: false,
                        type: 'POST',
                        url: ExecuteXIScriptURL,
                        data: JSON.stringify({ sScript: sRule, sGUID: '@Model.sGUID' }),
                        contentType: 'application/json;',
                        dataType: 'json',
                        traditional: true,
                        success: function (result) {
                            debugger;
                            if (result != null && result == 'true') {
                                var childObj1 = $('[name="' + oQSInstance.QSDefinition.Steps[oQSInstance.sCurrentStepName].Sections[section].sCode + '"]');
                                $(childObj1).removeClass('on').addClass('off');
                                oQSInstance.QSDefinition.Steps[oQSInstance.sCurrentStepName].Sections[section].sIsHidden = "off";
                            }
                            else {
                                var childObj1 = $('[name="' + oQSInstance.QSDefinition.Steps[oQSInstance.sCurrentStepName].Sections[section].sCode + '"]');
                                $(childObj1).removeClass('off').addClass('on');
                                oQSInstance.QSDefinition.Steps[oQSInstance.sCurrentStepName].Sections[section].sIsHidden = "on";
                            }
                            //if (data != null && Value != data) {
                            //    IsValid = false;
                            //}
                        }
                    });
                }
            }
        }

        for (var step in oQSInstance.QSDefinition.Steps) {
            var sRule = oQSInstance.QSDefinition.Steps[step].sRuleCondition
            if (sRule) {
                var formData = JSON.parse(JSON.stringify(jQuery('div.LayoutCode_@Model.sGUID').find('.QSStepForm').serializeArray()));
                for (var i = 0; i < formData.length; i++) {
                    var FieldName = formData[i].name;
                    var VisibilityF = $('.LayoutCode_@Model.sGUID').find('div[data-controltype="qsfield"]').filter('.on').find('[name="' + FieldName + '"]')[0];
                    var VisibilityS = $('.LayoutCode_@Model.sGUID').find('div[data-controltype="section"]').filter('.on').find('[name="' + FieldName + '"]')[0];
                    if (sRule.indexOf("QS." + FieldName) != -1 && !VisibilityF && !VisibilityS) {
                        sRule = sRule.replace("QS." + FieldName, formData[i].value)
                    }
                    else if (sRule.indexOf("QS." + FieldName) != -1 && (VisibilityF || VisibilityS)) {
                        sRule = sRule.replace("QS.", "")
                    }
                }
                $.ajax({
                    async: false,
                    type: 'POST',
                    url: ExecuteXIScriptURL,
                    data: JSON.stringify({ sScript: sRule, sGUID: '@Model.sGUID' }),
                    contentType: 'application/json;',
                    dataType: 'json',
                    traditional: true,
                    success: function (result) {
                        debugger;
                        if (result != null && result == 'true') {
                            var childObj1 = $('.' + oQSInstance.QSDefinition.Steps[step].sName);

                            $(childObj1).show()
                            oQSInstance.QSDefinition.Steps[step].sIsHidden = "off";
                        }
                        else {
                            var childObj1 = $('.' + oQSInstance.QSDefinition.Steps[step].sName);
                            $(childObj1).hide();
                            oQSInstance.QSDefinition.Steps[step].sIsHidden = "on";
                        }
                        //if (data != null && Value != data) {
                        //    IsValid = false;
                        //}
                    }
                });
            }
        }
    }
    $('textarea').css("resize", "vertical");
    function fncMiniMumDepositCal(obj) {
        if (obj != null && obj.nodeName == "SELECT") {
            fnccheckme(obj);
        }
        var id = obj.value;
        var FieldOriginID = obj.id.split('-')[2];
        var PaymentType = $('select[name="iClientPayment"] option:selected').val();
        if (PaymentType == 10) {
            var PaymentCharge = $('[name="iPaymentcharge"]').val();
            var InsurerCharge = $('[name="insurarcharges"]').val();
            var NewField = $('#Field-' + FieldOriginID).val();
            var FieldIDs = "";
            if (NewField != undefined && NewField != "") {
                FieldIDs = NewField.split(',');
                $.each(FieldIDs, function (index, Value) {
                    $.ajax({
                        url: '@Url.Action("GetMinimumDepositValue", "XiLink")',
                        type: 'POST',
                        contentType: "application/json; charset=utf-8",
                        datatype: "json",
                        async: true,
                        cache: false,
                        data: JSON.stringify({ rPaymentCharge: PaymentCharge, rInsurerCharge: InsurerCharge, sGUID: '@Model.sGUID', QSIID: '@Model.XIGUID' }),
                        success: function (data) {
                            //var disabled=$('#Field-' + Value).prop("disabled")
                            ////$('#Field-' + Value).empty();
                            if (data) {
                                $('#Field-' + Value).val(data);
                                $('.Field-' + Value).val(data);
                            }
                            $('[name="iClientPayment1"]').val($('[name=iClientDeposit]').val());
                        }
                    });
                });
            }

        }

    }

    function fncPaymentDepositCal(obj) {
        debugger;
        if (obj != null && obj.nodeName == "SELECT") {
            fnccheckme(obj);
        }
        var id = obj.value;
        var FieldOriginID = obj.id.split('-')[2];

        var PaymentType = $('select[name="iPaymentTypeforNW"] option:selected').val();
        //if (PaymentType != 20) {

            var NewField = $('#Field-' + FieldOriginID).val();
            var FieldIDs = "";
            if (NewField != undefined && NewField != "") {
                FieldIDs = NewField.split(',');
                $.each(FieldIDs, function (index, Value) {
                    $.ajax({
                        url: '@Url.Action("GetPaymentDepositValue", "XiLink")',
                        type: 'POST',
                        contentType: "application/json; charset=utf-8",
                        datatype: "json",
                        async: true,
                        cache: false,
                        data: JSON.stringify({ sGUID: '@Model.sGUID', QSIID: '@Model.XIGUID', Type: PaymentType }),
                        success: function (data) {
                            debugger;
                            //if (data) {
                            //    $('#Field-' + Value).val(data);
                            //    $('.Field-' + Value).val(data);
                            //}
                            //$('[name="iClientPayment1"]').val($('[name=iClientDeposit]').val());
                        }
                    });
                });
            }

        //}

    }

        function Generatepdf($this, docname, templateid, Structurename, InstanceID) {
        debugger;
            var FileName = "";
            var sGUID = fncGetGUIDFromHTMLTree('LayoutGUID', $this);
            var HTMLContent1 = "";
            //if ($('.SummeryTab')[0] != undefined) {
            if ($('.LayoutCode_' + sGUID).find('#SummeryTab')[0] != undefined) {
                HTMLContent1 = $('.LayoutCode_' + sGUID).find('#SummeryTab')[0].innerHTML;
                FileName = "Policy Summary";
            }
            if ($('.LayoutCode_' + sGUID).find('#SummeryTab')[0] === undefined && $('.LayoutCode_' + sGUID).find('#searchResults')[0] != undefined) {
                HTMLContent1 = $('.LayoutCode_' + sGUID).find('#searchResults')[0].innerHTML;
                FileName="QuotesPage"
            }

        var cValue = {
            //sLetterAttachmentContent: docname,
            //sTemplateID: templateid,
            //sXiLinkID: xilink,
            HTMLContent: HTMLContent1,//$('#SummeryTab')[0].innerHTML// $('#bodyTable')[0].innerHTML//"<div id='summery'>Test</div>"//
            //iInstanceID: InstanceID,
            //sGUID: sGUID,
            //iStructureID: Structurename,
            //sTemplateID: templateid
        }
        var sInstanceID = null;
        $.ajax({
            url: '@Url.Action("SavingTemplate", "xilink")',
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            datatype: "html",
            cache: false,
            data: JSON.stringify(cValue),
            success: function (data) {
                sInstanceID = data;
                window.location.href = '@Url.Action("DownloadPdfFromHTMLText", "xilink")?HTMLContent=' + sInstanceID + '&FileName=' + FileName; ;
            },
            error: function (respose, ID) {
            }
        })



    }

</script>
<style>
    .HideStep {
        display: none;
    }
</style>