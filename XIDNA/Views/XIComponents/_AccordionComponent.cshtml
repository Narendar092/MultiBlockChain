@model XICore.XIIComponent
@using XISystem
@using XICore
@using Newtonsoft.Json;
@{
    string strName = "Tabs";
    List<XIDStructure> Tabs = new List<XIDStructure>();
    var sMode = string.Empty;
    string sErrorMessage = string.Empty;
    if (Model.oContent.ContainsKey(XIConstant.AccordionComponent))
    {
        Tabs = (List<XIDStructure>)Model.oContent[XIConstant.AccordionComponent];
        if (Tabs == null)
        {
            Tabs = new List<XIDStructure>();
        }
        else if (Tabs.Count() > 0)
        {
            strName = Tabs.FirstOrDefault().sCode.Replace(" ", "") + Guid.NewGuid().ToString().Substring(0, 8);
            sMode = Tabs.FirstOrDefault().sMode;
        }
    }
    if (Tabs != null && Tabs.Count() > 0)
    {
        sErrorMessage = Tabs.FirstOrDefault().sErrorMessage;
    }
}

@if (!string.IsNullOrEmpty(sErrorMessage))
{
    <h4>@sErrorMessage</h4>
}
else
{
    <div class="editor_right_panel">
        <div class="tab-content">
            <div role="tabpanel" class="tab-pane active" id="meta">
                <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
                    @foreach (var tab in Tabs)
                    {
                        <div class="panel panel-default">
                            <div class="panel-heading" role="tab" id="@strName-@tab.sName.Replace(" ","")">
                                <h4 class="panel-title">
                                    <a role="button" data-toggle="collapse" href="#collapse-@strName-@tab.sName.Replace(" ","")" aria-expanded="true" aria-controls="collapseOne" class="collapsed" onclick="LoadStep('@tab.sMode', 'collapse-@strName-@tab.sName.Replace(" ","")', '@tab.i1ClickIDXIGUID', '@tab.sBO.Trim()', @tab.iInstanceID, @tab.BOID, false, '@tab.sName', this, '@tab.FKiStepDefinitionIDXIGUID','@tab.FKiVisualisationID')">
                                        @tab.sName
                                    </a>
                                </h4>
                            </div>
                            <div id="collapse-@strName-@tab.sName.Replace(" ","")" class="panel-collapse collapse" role="tabpanel" aria-labelledby="@strName-@tab.sName.Replace(" ","")" style="height: 0px;">

                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}
<script>
    $(document).ready(function () {

    });

    var ConfigParams;
    var jCompDef = '@Html.Raw(Json.Encode(Model.oDefintion))';
    function LoadStep(TabResultType, Output, i1ClickID, sBO, iInstanceID, iBODID, bIsMainBO, sTabName, _this, iStepID, iVisualID) {
        var sLayoutType = "Dialog";
        var _uidialog = fncgetDialogFromHTMLTree('dialog', _this);
        if (_uidialog == null || (_uidialog && _uidialog.length == 0)) {
            sLayoutType = "inline-layout";
            _uidialog = fncgetInlineLayoutFromHTMLTree('inline-layout', _this);
        }
        $(_uidialog).find('#' + Output).find('.conStep').each(function (j, obj) {
            $(this).hide();
        });
        if (Output && Output.length > 0) {
            $(_uidialog).find('#' + Output).append('<div class="loader"></div>');
        }
        var bISLoaded = false;
        var bLoad = $(_this).attr('data-load');
        if (bLoad && bLoad == 'true') {
            bISLoaded = true;
        }
        if (bIsMainBO) {
            iBODID = 0;
        }
        if (bISLoaded == false) {
            var sGUID = fncGetGUIDFromHTMLTree('LayoutGUID', _this);
            var iQSDID = fncGetQSIDFromHTMLTree('QuestionSet', _this);
            var JParams = JSON.parse(jCompDef).Params;
            for (var i = 0; i < JParams.length; i++) {
                //debugger
                var InputParams = [];
                if (JParams[i].sName.toLowerCase() == "clickparamname".toLowerCase()) {
                    var WrapperParms = {};
                    WrapperParms["sName"] = JParams[i].sValue;
                    WrapperParms["sValue"] = "XIC|null";
                    var param2 = {};
                    param2["sName"] = '{XIP|ActiveBO}';
                    param2["sValue"] = sBO;
                    InputParams.push(param2);
                    var param3 = {};
                    param3["sName"] = 'BO';
                    param3["sValue"] = sBO;
                    InputParams.push(param3);
                    var param4 = {};
                    param4["sName"] = '{XIP|i1ClickID}';
                    param4["sValue"] = i1ClickID;
                    InputParams.push(param4);
                    var param5 = {};
                    param5["sName"] = 'CurrentBOType';
                    param5["sValue"] = TabResultType;
                    InputParams.push(param5);
                    var param7 = {};
                    param7["sName"] = 'iInstanceID';
                    param7["sValue"] = iInstanceID;
                    InputParams.push(param7);
                    var param8 = {};
                    param8["sName"] = '{XIP|iVisualID}';
                    param8["sValue"] = iVisualID;
                    InputParams.push(param8);

                    WrapperParms["nSubParams"] = InputParams;
                }
            }
            var NewParams = [];
            NewParams.push(WrapperParms);
            fncUpdateXIParams("", sGUID, sGUID, NewParams).then(function (data) {
                //var QSID = $('#QSID').attr('data-value'); //1141;
                var DefaultStep = '';
                if (sTabName == "Risk") {
                    //DefaultStep = "Step with Level3 Layout";
                    iStepID = "Step with Level3 Layout";
                    iBODID = -1;
                }
                if (iStepID == 0 || iStepID == '00000000-0000-0000-0000-000000000000') {
                    if (TabResultType == "Multiple") {
                        iStepID = "Step with 1-Click Component";
                    }
                    else if (TabResultType == "Single") {
                        iStepID = "Step with BO Component";
                    }
                    else if (TabResultType == "Grid") {
                        iStepID = "Step with Grid Component";
                    }
                }
                $.ajax({
                    contentType: 'application/json; charset=utf-8',
                    url: '@Url.Action("LoadStep", "XiLink")',
                    datatype: 'json',
                    cache: false,
                    async: true,
                    //data: { sStep: DefaultStep, iQSID: iQSDID, i1ClickID: i1ClickID, sDefaultStep: DefaultStep, iInstanceID: iInstanceID, sGUID: sGUID },
                    data: { sStep: iStepID, iQSID: iQSDID, i1ClickID: i1ClickID, sDefaultStep: iStepID, iInstanceID: iInstanceID, sGUID: sGUID },
                    success: function (oStepI) {
                        $(_this).attr('data-load', 'true');
                        fncRenderStepContent(oStepI, '#' + Output, "tab" + sTabName.replace(/ /g, '_'), null, _uidialog).then(function (ConfigParams) {
                            $(_uidialog).find('#' + Output).find('.loader').remove();
                            fncLoadScroll(_uidialog, sLayoutType);
                        });
                        //if (Output != 'undefined') {
                        //    $('#' + Output).html(StepData);
                        //}

                    }
                })
            });
        }
        else {
            if (sTabName == "Risk") {
                iBODID = -1;
            }
            sIdentity = "QSStep_" + "tab" + sTabName.replace(/ /g, '_');
            if (bIsMainBO) {
                sIdentity = "QSStep_0";
            }
            //if (iBODID == 0) {
            //    $(_uidialog).find('#' + Output).find('div[data-value="' + iStepID + '"]').show();
            //}
            //else {
                $(_uidialog).find('#' + Output).find('div[data-identity="' + sIdentity + '"]').show();
                $(_uidialog).find('#' + Output).find('div[data-identity="' + sIdentity + '"]').find('div[data-identity="QSStep_0"]').show();
                $(_uidialog).find('#' + Output).find('div[data-identity="' + sIdentity + '"]').find('div[data-identity="QSStep_tree0"]').show();
                //$(_uidialog).find('#' + Output).find('.conStep').show();
                $(_uidialog).find('#' + Output).find('.loader').remove();
            //}

        }
    }
</script>
