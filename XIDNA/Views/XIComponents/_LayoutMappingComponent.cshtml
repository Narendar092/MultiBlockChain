@model XICore.XIIComponent
@using XISystem
@using XICore
@{
    XIDLayout oLayout = new XIDLayout();
    if (Model.oContent.ContainsKey(XIConstant.LayoutMappingComponent))
    {
        oLayout = (XIDLayout)Model.oContent[XIConstant.LayoutMappingComponent];
        if (oLayout == null)
        {
            oLayout = new XIDLayout();
        }
    }
}

<script>
    var oLayType = "oLayout";
    var iLayoutDialogID = 0;
    var List=[];
    var Links=[];
    $(document).ready(function () {
        if (parseInt('@oLayout.StatusTypeID') > 0) {
            $('#StatusTypeID').val('@oLayout.StatusTypeID');
        }
        //var table = "<table id='PlaceholderMaptbl' class='table table-striped custom-table dark-head dark-head2 table-condensed dataTable no-footer'><thead><th>S.No</th><th>Placeholder</th><th>Actions</th></thead><tbody>";
        $('#XiLinksDDLDiv').hide();
        $('#XIComponentsDiv').hide();
        $('#HTMLContentDiv').hide();
        $('#StepsDiv').hide();
        $('#PHContentType').change(function(){
            var Type = $(this).val();
            if(Type=="XiLink"){
                $('#XiLinksDDLDiv').show();
                $('#XIComponentsDiv').hide();
                $('#HTMLContentDiv').hide();
                $('#StepsDiv').hide();
                //$('#XiLinkDDL')[0].selectedIndex = 0;
            }
            else if(Type=="HTML"){
                $('#XiLinksDDLDiv').hide();
                $('#HTMLContentDiv').show();
                $('#XIComponentsDiv').hide();
                $('#StepsDiv').hide();
                //$('#HTMLText').val('');
            }
            else if(Type=="XIComponent"){
                $('#XiLinksDDLDiv').hide();
                $('#HTMLContentDiv').hide();
                $('#XIComponentsDiv').show();
                $('#StepsDiv').hide();
                //$('#XiComponentDDL')[0].selectedIndex = 0;
            }
            else if(Type=="Step"){
                $('#XiLinksDDLDiv').hide();
                $('#HTMLContentDiv').hide();
                $('#XIComponentsDiv').hide();
                $('#StepsDiv').show();
                $('#FKsStepName').val('');
                $('#StepsDDL').val('');
                //$('#XiComponentDDL')[0].selectedIndex = 0;
            }
            else{
                $('#XIComponentsDiv').hide();
                $('#XiLinksDDLDiv').hide();
                $('#HTMLContentDiv').hide();
                $('#StepsDiv').hide();
            }
        });
        $('#LayoutPreview div').each(function() {
            //var PlaceholderArea = "td"+(j+1);
            var id = $(this).attr('id');
            if(id && id.length>0){
                id = "div" + id;
                var Details = @Html.Raw(Json.Encode(oLayout.Details));
                for(k=0;k<Details.length;k++){
                    if(Details[k].PlaceholderArea==id){
                        $(this).append(Details[k].PlaceholderName);
                        $(this).attr('data-name', Details[k].PlaceholderName);
                        $(this).attr('data-phid', Details[k].PlaceHolderID);
                        $(this).attr('data-phidxiguid', Details[k].XIGUID);
                    }
                }
            }
            //table = table + "<tr><td>" + i + "</td><td>Placeholder" + i + "</td><td><button type='button' class='btn btn-primary btn-xs MapPlaceHolderBtn' id='PlaceHolder" + i + "'>Map</button></td></tr>";

        });
        //table = table + "</tbody></table>";
        //$('#MappingGrid').html(table);
        //$('#PlaceholderMaptbl').dataTable();
        //$('.MapPlaceHolderBtn').click(function () {
        //    var ID = $(this).attr('id');
        //});
        var Assigned = @Html.Raw(Json.Encode(oLayout.Mappings));
        var Details = @Html.Raw(Json.Encode(oLayout.Details));
        $('#PHMappingForm').hide();
        $('#LayoutPreview div').unbind('click').on('click', function () {
            debugger;
            var Found = false;
            var id = $(this).attr('id');
            if(id && id.length>0){
                $('.LayMapStatusMessages').empty();
                $('#XiLinkDDL').val(0);
                $('#PHContentType').val(0);
                $('#StatusTypeID').val('');
                var name = $(this).attr('data-name');
                var phid = $(this).attr('data-phid');
                var phidxiguid = $(this).attr('data-phidxiguid');
                for(i=0;i<Assigned.length;i++){
                    if(Assigned[i].PlaceHolderIDXIGUID==phidxiguid){
                        Found = true;
                        $('#PHContentType').val(Assigned[i].ContentType);
                        $('#MappingID').val(Assigned[i].PlaceHolderIDXIGUID);
                        $('#LMID').val(Assigned[i].ID);
                        $('#LMXIGUID').val(Assigned[i].XIGUID);
                        $('#PopupLayoutID').val(Assigned[i].PopupLayoutID);
                        $('#PlaceHolderID').val(Assigned[i].PlaceHolderID);
                        $('#PopupLayoutIDXIGUID').val(Assigned[i].PopupLayoutIDXIGUID);
                        $('#PlaceHolderIDXIGUID').val(Assigned[i].PlaceHolderIDXIGUID);
                        if(Assigned[i].ContentType == "HTML")
                        {
                            $('#HTMLText').val(Assigned[i].HTMLCode);
                            $('#HTMLContentDiv').show();
                            $('#XiLinksDDLDiv').hide();
                            $('#XIComponentsDiv').hide();
                            $('#StepsDiv').hide();
                        }
                        else if(Assigned[i].ContentType == "XiLink")
                        {
                            $('#HTMLContentDiv').hide();
                            $('#XiLinkDDL').val(Assigned[i].XiLinkID);
                            $('#PHContentType').val(Assigned[i].ContentType);
                            $('#HTMLText').val(Assigned[i].HTMLCode);
                            $('#StatusTypeID').val(Assigned[i].StatusTypeID);
                            $('#XIComponentsDiv').hide();
                            $('#StepsDiv').hide();
                            $('#XiLinksDDLDiv').show();
                            var XiLinkID = Assigned[i].XiLinkIDXIGUID;
                            fncGetXILinksForAutoComplete("", XiLinkID).then(function (AllLinks) {
                                Links = AllLinks;
                                var sLinkName =  getLinkNameByValue(''+XiLinkID+'');
                                $('#FKsXILinkName').val(sLinkName);
                            })
                        }
                        else if(Assigned[i].ContentType == "XIComponent")
                        {
                            $('#HTMLContentDiv').hide();
                            $('#XiLinksDDLDiv').hide();
                            $('#PHContentType').val(Assigned[i].ContentType);
                            $('#StatusTypeID').val(Assigned[i].StatusTypeID);
                            $('#XiComponentDDL').val(Assigned[i].XiLinkID);
                            $('#StepsDiv').hide();
                            $('#XIComponentsDiv').show();
                        }
                        else if(Assigned[i].ContentType == "Step")
                        {
                            $('#HTMLContentDiv').hide();
                            $('#XiLinksDDLDiv').hide();
                            $('#PHContentType').val(Assigned[i].ContentType);
                            $('#StatusTypeID').val(Assigned[i].StatusTypeID);
                            $('#XIComponentsDiv').hide();
                            $('#StepsDDL').val(Assigned[i].XiLinkIDXIGUID);
                            $('#StepsDiv').show();
                            var iStepID = Assigned[i].XiLinkIDXIGUID;
                            fncGetStepsForAutoComplete("", iStepID).then(function (AllSteps) {
                                List = AllSteps;
                                var sStepName = getKeyByValue(''+iStepID+'');
                                $('#FKsStepName').val(sStepName);
                            })
                        }
                        else{
                            $('#PHContentType').val(0);
                            $('#XiLinksDDLDiv').hide();
                            $('#HTMLContentDiv').hide();
                            $('#StepsDiv').hide();
                        }
                    }
                }
                if(!Found){
                    for(i=0;i<Details.length;i++){
                        if(Details[i].PlaceHolderID == phid){
                            $('#PopupLayoutID').val(Details[i].LayoutID);
                            $('#PlaceHolderID').val(Details[i].PlaceHolderID);
                            $('#PopupLayoutIDXIGUID').val(Details[i].LayoutIDXIGUID);
                            $('#PlaceHolderIDXIGUID').val(Details[i].XIGUID);
                            $('#LMID').val('');
                            $('#LMXIGUID').val('');
                        }
                    }
                    $('#XiLinksDDLDiv').hide();
                    $('#XIComponentsDiv').hide();
                    $('#HTMLContentDiv').hide();
                    $('#XiLinkDDL').val(0);
                    $('#XiComponentDDL').val(0);
                    $('#MappingID').val(0);
                    $('#StepsDiv').hide();
                    $('#StepsDDL').val(0);
                }

                $('#PHName').html(name);
                $('#PHID').val(phid);
                $('#PHMappingForm').show();
            }
        });

        $('#DialogDDL').change(function(){
            iLayoutDialogID = $('#DialogDDL option:selected').val();
            oLayType = "DialogLayout";
        });

        $('#PHMapingSave').click(function () {
            debugger
            var ContentType = $('#PHContentType').val();
            var XiLinkID = '';
            if (ContentType == "XiLink"){
                XiLinkID =  $('#XiLinkDDL').val();
            }
            else if (ContentType == "XIComponent"){
                XiLinkID =  $('#XiComponentDDL').val();
            }
            else if (ContentType == "Step"){
                XiLinkID =  $('#StepsDDL').val();
            }
            var MappingID=$('#MappingID').val();
            var HTMLContent = $('#HTMLText').val();
            var LMID =$('#LMID').val();
            var LMXIGUID =$('#LMXIGUID').val();
            var PopupLayoutID =$('#PopupLayoutID').val();
            var PlaceHolderIDXIGUID =$('#PlaceHolderIDXIGUID').val();
            var PopupLayoutIDXIGUID =$('#PopupLayoutIDXIGUID').val();
            var PopupId = '@oLayout.PopupID';
            var PopupIDXIGUID = '@Layout.'
            var DialogId = 0;
            var DialogIDXIGUID = "";
            @*var DialogId = '@oLayout.DialogID';*@
            if(oLayType == "oLayout")
            {
                DialogId = '@oLayout.DialogID';
                DialogIDXIGUID = '@oLayout.DialogIDXIGUID';
            }
            else
            {
                DialogId = iLayoutDialogID;
                DialogIDXIGUID = '@oLayout.DialogIDXIGUID';
            }
            @*var InlineId = '@Model.LayoutID';*@
            var InlineId = '@oLayout.ID';
            var PlaceHolderID = $('#PHID').val();
            var IsValueSet = $('#ComponentsParams').val();
            var StatusTypeID = $('#StatusTypeID').val();
            debugger;
            if ((parseInt(PopupId) > 0 || parseInt(DialogId) > 0 || parseInt(InlineId) > 0) && (XiLinkID!='' || HTMLContent.length>0)) {
                var Mappings = { sXiLinkID: XiLinkID, XiLinkID: XiLinkID, XiLinkIDXIGUID: XiLinkID, PlaceHolderID: PlaceHolderID, LayoutID: InlineId, PopupID: PopupId, DialogID: DialogId, DialogIDXIGUID: DialogIDXIGUID, Type:'@oLayout.LayoutType',StatusTypeID:StatusTypeID, ContentType: ContentType, HTMLCode: HTMLContent, IsValueSet: IsValueSet, ID: LMID, XIGUID:LMXIGUID, PopupLayoutID:PopupLayoutID, PopupLayoutIDXIGUID:PopupLayoutIDXIGUID, PlaceHolderIDXIGUID:PlaceHolderIDXIGUID };
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("IDESaveLayoutMapping", "Popup")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(Mappings),
                    cache: false,
                    async: false,
                    dataType: 'json',
                    success: function (data) {
                        Assigned.push(Mappings);
                        if (ContentType == "XIComponent" && MappingID==0){
                            MappingID = data;
                            var ParamIDs = $('#ParamIDs').val();
                            if(ParamIDs != "" && ParamIDs.length>0){
                                $.ajax({
                                    type: 'get',
                                    url: '@Url.Action("UpdateMappingIDToParams", "XIComponents")',
                                    contentType: "application/json; charset=utf-8",
                                    data: {sType:"Layout", iLoadID: MappingID, Params: ParamIDs},
                                    cache: false,
                                    async: false,
                                    dataType: 'json',
                                    success: function (Mappingdata) {
                                        $('.LayMapStatusMessages').empty();
                                        $('.LayMapStatusMessages').prepend($('<div class="alert alert-success">Data Saved Succesfully</div>'));
                                        //CustomMessage(Mappingdata.ResponseMessage, Mappingdata.Status);
                                    }
                                });
                            }
                            else{
                                CustomMessage(data.ResponseMessage, data.Status);
                            }
                        }
                        else{
                            $('.LayMapStatusMessages').empty();
                            $('.LayMapStatusMessages').prepend($('<div class="alert alert-success">Data Saved Succesfully</div>'));
                            //CustomMessage(data.ResponseMessage, data.Status);
                        }
                        //window.opener.location.reload();
                    }
                });
            }
            else{
                CustomMessage("Please fill * marked fields", false);
            }
        });
        $('.ResetPopup').click(function () {
            $('#XiLinkDDL').val('0');
            $('#PHContentType').val('0');
            $('#HTMLText').val('');
        });
        $('.CancelMapping').click(function(){
            window.close();
        });

        $('#XIComponentBtn').click(function(){
            var ComponentID = $('#XiComponentDDL').val();
            if(ComponentID>0){
                $.ajax({
                    type: 'get',
                    url: '@Url.Action("Get_ComponentParamsDialog", "XIComponents")',
                    contentType: "application/json; charset=utf-8",
                    data: {iXIComponentID: ComponentID, sType:"Layout", ID: $('#MappingID').val()},
                    cache: false,
                    async: false,
                    dataType: 'html',
                    success: function (data) {
                        var DialogDivID= 'XICParamsConfig';
                        var windowclose = '<i class="windowClose fa fa-times" onclick="fncdialogclose(this, ' + false + ', &quot;XICParams&quot;)"></i>';
                        $('.'+DialogDivID).html('<div class="XICParams">'+data+'</div>');
                        $(".XICParams").dialog({
                            modal: true,
                            width: 600,
                            open: function () {
                                $(this).parent().promise().done(function () {
                                    $(this).children('.ui-dialog-titlebar').append('<div class="dialogIcons">' + windowclose + '</div>');
                                })
                            },
                            close: function (event, ui) {
                                debugger
                                $(".XICParams").dialog('close');
                                $(".XICParams").dialog('destroy').remove();
                            }
                        });
                    }
                });
            }
        });
        $(document.body).unbind('click').on('click', 'input#XIComponentParamsBtn', function () {
            var Component;
            var ComponentID = $('#XiComponentDDL').val();
            if(ComponentID>0){
                $.ajax({
                    type: 'get',
                    url: '@Url.Action("Get_ComponentParams", "XIComponents")',
                    contentType: "application/json; charset=utf-8",
                    data: {iXIComponentID: ComponentID, sType:"Layout", ID: $('#MappingID').val()},
                    cache: false,
                    async: false,
                    dataType: 'json',
                    success: function (data) {
                        Component = data;
                        var IsValueSet = $('#IsValueSet').val();
                        var MappingID = $('#MappingID').val();
                        var NVPairs = [];
                        $('.NVPairs').each(function () {
                            var Name; var Value; var ID;
                            $(this).find('label').each(function (i, obj) {
                                Name = $(this).attr('data-sName');
                            });
                            $(this).find('input').each(function (i, obj) {
                                var Nname = obj.name;
                                if (Nname == "Names") {
                                    Value = $(this).val();
                                }
                                if(Nname== "paramid"){
                                    ID = $(this).val();
                                }
                            });
                            if ((Name && Name.length > 0) && (Value && Value.length > 0)) {
                                //NVPairs.push(Name + "-" + Value);
                                for(i=0;i<Component.Params.length;i++){
                                    if(Component.Params[i].sName == Name){
                                        Component.Params[i].sValue = Value;
                                        Component.Params[i].ID = ID;
                                    }
                                }
                            }
                        });
                        $('.TNVPairs').each(function () {
                            var Name; var Value;
                            $(this).find('label').each(function (i, obj) {
                                Name = $(this).attr('data-sName');
                            });
                            $(this).find('input').each(function (i, obj) {
                                var Nname = obj.name;
                                if (Nname == "Names") {
                                    Value = $(this).val();
                                }
                            });
                            if ((Name && Name.length > 0) && (Value && Value.length > 0)) {
                                //NVPairs.push(Name + "-" + Value);
                                for(i=0;i<Component.Triggers.length;i++){
                                    if(Component.Triggers[i].sName == Name){
                                        Component.Triggers[i].sValue = Value;
                                    }
                                }
                            }
                        });
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("Save_ComponentParams", "XIComponents")',
                            data: JSON.stringify({ oComponent: Component, sType:"Layout", iLoadID: MappingID }),//JSON.stringify(Component),
                            contentType: 'application/json;',
                            dataType: 'json',
                            traditional: true,
                            success: function (data) {
                                $('#ParamIDs').val(data);
                                $(".XICParams").dialog('close');
                                $(".XICParams").dialog('destroy').remove();
                                $('#ComponentsParams').val('True');
                            }
                        });
                    }
                });
            }
        });
    });

    $('#FKsStepName').autocomplete({
        source: function(request, response) {
            fncGetStepsForAutoComplete(request.term, 0).then(function (AllSteps) {
                response($.ui.autocomplete.filter(AllSteps, request.term));
            })
        },
        select: function (event, ui) {
            $("#FKsStepName").val(ui.item.label);
            $("#StepsDDL").val(ui.item.value);
            return false;
        },
        focus: function (event, ui) {
            $("#FKsStepName").val(ui.item.label);
            return false;
        }
    });

    $('#FKsXILinkName').autocomplete({
        source: function(request, response) {
            fncGetXILinksForAutoComplete(request.term, 0).then(function (ALLLinks) {
                response($.ui.autocomplete.filter(ALLLinks, request.term));
            })
        },
        select: function (event, ui) {
            $("#FKsXILinkName").val(ui.item.label);
            $("#XiLinkDDL").val(ui.item.value);
            return false;
        },
        focus: function (event, ui) {
            $("#FKsXILinkName").val(ui.item.label);
            return false;
        }
    });

    function fncGetStepsForAutoComplete(sSearchText, iStepID){
        return new Promise(function (resolve, reject) {
            var Params = { sSearchText: sSearchText, iStepID:iStepID};
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Get_StepsForAutoComplete", "QuestionSet")',
                contentType: 'application/json;',
                dataType: 'json',
                data: JSON.stringify(Params),
                traditional: true,
                async: true,
                success: function (data) {
                    List=[];
                    $.each(data, function (key, value) {
                        List.push({ label: value.sName, value: value.sValue });
                    });
                    resolve(List);
                }
            });
        })
    }

    function fncGetXILinksForAutoComplete(sSearchText, iXILinkID){
        return new Promise(function (resolve, reject) {
            var Params = { sSearchText: sSearchText, iXILinkID:iXILinkID};
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Get_XILinksForAutoComplete", "QuestionSet")',
                contentType: 'application/json;',
                dataType: 'json',
                data: JSON.stringify(Params),
                traditional: true,
                async: true,
                success: function (XILinks) {
                    Links=[];
                    $.each(XILinks, function (key, value) {
                        Links.push({ label: key, value: value });
                    });
                    resolve(Links);
                }
            });
        })
    }
    function getLinkNameByValue(iXILinkID) {
        var keyFound= Links.filter(function (x) { return x.value === iXILinkID; })
        if(keyFound && keyFound.length > 0){
            return keyFound[0].label;
        }
    }

    function getKeyByValue(iStepID) {
        var keyFound= List.filter(function (x) { return x.value === iStepID; })
        if(keyFound && keyFound.length > 0){
            return keyFound[0].label;
        }
    }
</script>

<style>
    #LayoutPreview div {
        /**/ min-height: 50px;
        border: 1px solid #b5b5b5;
        text-align: center;
    }

        #LayoutPreview div.row {
            /**/ min-height: 50px;
            border: none;
            /*text-align: center;*/
        }
    /*#LayoutPreview {
        height:150px;
    }*/
</style>


@if (oLayout.ID == 0)
{

}
else
{
    <section class="p5">
        <div class="">
            <div class="">
                <div class="">
                    <div class="innerborder form-container">
                        <div class="LayMapStatusMessages"></div>
                        <input type="hidden" id="ID" name="ID" value="@oLayout.ID" />
                        @if (oLayout.ID > 0)
                        {
                            <div class="form-group row">
                                <div class="col-md-2">
                                    <label for="inputEmail" class="gn">ID :<span class="danger"></span></label>
                                </div>
                                <div class="col-md-3">
                                    <label for="inputEmail" class="gn">@oLayout.ID<span class="danger"></span></label>
                                </div>
                            </div>
                        }
                        <div class="form-group row">
                            <div id="LayoutPreview" class="col-md-12">
                                @Html.Raw(oLayout.LayoutCode)
                            </div>
                        </div>
                        <div id="PHMappingForm" class="">
                            <form class="">
                                <p class="sbold">
                                    Select Content for
                                    <span id="PHName"></span>
                                </p>
                                <input type="hidden" id="MappingID" value="0" />
                                <input type="hidden" id="PHID" />
                                <input type="hidden" id="ComponentsParams" value="False" />
                                <input type="hidden" id="ParamIDs" />
                                <input type="hidden" id="LMID" />
                                <input type="hidden" id="LMXIGUID" />
                                <input type="hidden" id="PopupLayoutID" />
                                <input type="hidden" id="PlaceHolderID" />
                                <input type="hidden" id="PopupLayoutIDXIGUID" />
                                <input type="hidden" id="PlaceHolderIDXIGUID" />
                                <div class="form-group row" id="DialogsDDLDiv">
                                    <div class="col-md-6">
                                        <label for="inputEmail" class="gn">Dialog<span class="danger">*</span></label>
                                        <select class="form-control" id="DialogDDL">
                                            <option value="0">--Select--</option>
                                            @if (oLayout.Dialogs != null)
                                            {
                                                foreach (var items in oLayout.Dialogs)
                                                {
                                                    if (oLayout.DialogID == items.Value)
                                                    {
                                                        <option value="@items.Value" selected>@items.text</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@items.Value">@items.text</option>
                                                    }
                                                }
                                            }
                                        </select>
                                    </div>
                                </div>

                                <div class="form-group row">
                                    <div class="col-md-6">
                                        <label for="inputEmail" class="gn">Type<span class="danger">*</span></label>
                                        <select class="form-control" id="PHContentType">
                                            <option value="0">--Select--</option>
                                            <option value="XiLink">XI Link</option>
                                            <option value="XIComponent">XI Component</option>
                                            <option value="HTML">HTML Code</option>
                                            <option value="Step">Step</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="form-group row" id="HTMLContentDiv">
                                    <div class="col-md-4">
                                        <label for="inputEmail" class="gn">HTML Code<span class="danger">*</span></label>
                                        <textarea rows="20" cols="10" class="form-control" placeholder="HTML Code" id="HTMLText"></textarea>
                                    </div>
                                </div>
                                <div class="form-group row" id="XiLinksDDLDiv">
                                    <div class="col-md-6">
                                        <label for="inputEmail" class="gn">XiLink<span class="danger">*</span></label>
                                        <input type="text" class="form-control" id="FKsXILinkName" placeholder="Enter XILink Name" />
                                        <input type="hidden" name="iXILinkID" id="XiLinkDDL" />
                                        @*<select class="form-control" id="XiLinkDDL">
                                                <option value="0">--Select--</option>
                                                @if (oLayout.XiLinks != null)
                                                {
                                                    foreach (var items in oLayout.XiLinks)
                                                    {
                                                        <option value="@items.Value">@items.Value @items.text</option>
                                                    }
                                                }
                                            </select>*@
                                    </div>
                                    <br />
                                    <div class="col-md-6">
                                        <input type="button" class="btn btn-theme btn-xs" value="Refresh" onclick="XiLinkManager('Layout','Refresh')" />
                                        <input type="button" class="btn btn-theme btn-xs" value="Add" onclick="XiLinkManager('Layout','Add')" />
                                        <input type="button" class="btn btn-theme btn-xs" value="Edit" onclick="XiLinkManager('Layout','Edit')" />
                                        <input type="button" class="btn btn-theme btn-xs" value="View" onclick="XiLinkManager('Layout','View')" />
                                    </div>
                                </div>
                                <div class="form-group row" id="XIComponentsDiv">
                                    <div class="col-md-6">
                                        <label for="inputEmail" class="gn">XI Component<span class="danger">*</span></label>
                                        <select class="form-control" id="XiComponentDDL">
                                            <option value="0">--Select--</option>
                                            @if (oLayout.XIComponents != null)
                                            {
                                                foreach (var items in oLayout.XIComponents)
                                                {
                                                    <option value="@items.Value">@items.text</option>
                                                }
                                            }
                                        </select>
                                        <button type="button" class="btn btn-theme" id="XIComponentBtn"><i class="fas fa-bars"></i></button>
                                    </div>
                                </div>
                                <div id="StepsDiv" class="form-group row">
                                    <div class="col-md-6">
                                        <label for="inputEmail" class="gn">Step<span class="danger">*</span></label>
                                        <input type="text" class="form-control" id="FKsStepName" placeholder="Enter Step Name" />
                                        <input type="hidden" name="iStepID" id="StepsDDL" />
                                        @*<select class="form-control" id="StepsDDL">
                                                <option value="0">--Select--</option>
                                                @if (oLayout.Steps != null)
                                                {
                                                    foreach (var items in oLayout.Steps)
                                                    {
                                                        <option value="@items.Value">@items.Value @items.text</option>
                                                    }
                                                }
                                            </select>*@
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-md-6">
                                        <label for="inputEmail" class="gn">Status<span class="danger"></span></label>
                                        @*@Html.DropDownListFor(m => m.StatusTypeID, new SelectList(new List<Object>{
                                            new { key= 10 , value = "Active" },
                                            new { key= 20 , value = "Inactive" }
                                            }, "key", "Value"), new { @class = "form-control" })*@
                                        <select class="form-control" id="StatusTypeID">
                                            <option value="">---Select---</option>
                                            <option value="10">Active</option>
                                            <option value="20">Inactive</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <div class="col-sm-10">
                                        <input type="button" class="btn btn-theme" id="PHMapingSave" value="Save" />
                                        <button type="button" class="btn btn-theme reverse ResetPopup">Reset</button>
                                        <button type="button" class="btn btn-theme decline CancelMapping">Cancel</button>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div id="MappingGrid"></div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}
<div class="XICParamsConfig"></div>

